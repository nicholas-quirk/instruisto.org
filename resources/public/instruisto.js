var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
void 0;
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  if(p[goog.typeOf(x)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
void 0;
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
void 0;
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__6559__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__6559 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__6559__delegate.call(this, array, i, idxs)
    };
    G__6559.cljs$lang$maxFixedArity = 2;
    G__6559.cljs$lang$applyTo = function(arglist__6560) {
      var array = cljs.core.first(arglist__6560);
      var i = cljs.core.first(cljs.core.next(arglist__6560));
      var idxs = cljs.core.rest(cljs.core.next(arglist__6560));
      return G__6559__delegate(array, i, idxs)
    };
    G__6559.cljs$lang$arity$variadic = G__6559__delegate;
    return G__6559
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
void 0;
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
void 0;
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____6624 = this$;
      if(and__3822__auto____6624) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____6624
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      return function() {
        var or__3824__auto____6625 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6625) {
          return or__3824__auto____6625
        }else {
          var or__3824__auto____6626 = cljs.core._invoke["_"];
          if(or__3824__auto____6626) {
            return or__3824__auto____6626
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____6627 = this$;
      if(and__3822__auto____6627) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____6627
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      return function() {
        var or__3824__auto____6628 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6628) {
          return or__3824__auto____6628
        }else {
          var or__3824__auto____6629 = cljs.core._invoke["_"];
          if(or__3824__auto____6629) {
            return or__3824__auto____6629
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____6630 = this$;
      if(and__3822__auto____6630) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____6630
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      return function() {
        var or__3824__auto____6631 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6631) {
          return or__3824__auto____6631
        }else {
          var or__3824__auto____6632 = cljs.core._invoke["_"];
          if(or__3824__auto____6632) {
            return or__3824__auto____6632
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____6633 = this$;
      if(and__3822__auto____6633) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____6633
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      return function() {
        var or__3824__auto____6634 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6634) {
          return or__3824__auto____6634
        }else {
          var or__3824__auto____6635 = cljs.core._invoke["_"];
          if(or__3824__auto____6635) {
            return or__3824__auto____6635
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____6636 = this$;
      if(and__3822__auto____6636) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____6636
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      return function() {
        var or__3824__auto____6637 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6637) {
          return or__3824__auto____6637
        }else {
          var or__3824__auto____6638 = cljs.core._invoke["_"];
          if(or__3824__auto____6638) {
            return or__3824__auto____6638
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____6639 = this$;
      if(and__3822__auto____6639) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____6639
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      return function() {
        var or__3824__auto____6640 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6640) {
          return or__3824__auto____6640
        }else {
          var or__3824__auto____6641 = cljs.core._invoke["_"];
          if(or__3824__auto____6641) {
            return or__3824__auto____6641
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____6642 = this$;
      if(and__3822__auto____6642) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____6642
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      return function() {
        var or__3824__auto____6643 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6643) {
          return or__3824__auto____6643
        }else {
          var or__3824__auto____6644 = cljs.core._invoke["_"];
          if(or__3824__auto____6644) {
            return or__3824__auto____6644
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____6645 = this$;
      if(and__3822__auto____6645) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____6645
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      return function() {
        var or__3824__auto____6646 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6646) {
          return or__3824__auto____6646
        }else {
          var or__3824__auto____6647 = cljs.core._invoke["_"];
          if(or__3824__auto____6647) {
            return or__3824__auto____6647
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____6648 = this$;
      if(and__3822__auto____6648) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____6648
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      return function() {
        var or__3824__auto____6649 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6649) {
          return or__3824__auto____6649
        }else {
          var or__3824__auto____6650 = cljs.core._invoke["_"];
          if(or__3824__auto____6650) {
            return or__3824__auto____6650
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____6651 = this$;
      if(and__3822__auto____6651) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____6651
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      return function() {
        var or__3824__auto____6652 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6652) {
          return or__3824__auto____6652
        }else {
          var or__3824__auto____6653 = cljs.core._invoke["_"];
          if(or__3824__auto____6653) {
            return or__3824__auto____6653
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____6654 = this$;
      if(and__3822__auto____6654) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____6654
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      return function() {
        var or__3824__auto____6655 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6655) {
          return or__3824__auto____6655
        }else {
          var or__3824__auto____6656 = cljs.core._invoke["_"];
          if(or__3824__auto____6656) {
            return or__3824__auto____6656
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____6657 = this$;
      if(and__3822__auto____6657) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____6657
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      return function() {
        var or__3824__auto____6658 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6658) {
          return or__3824__auto____6658
        }else {
          var or__3824__auto____6659 = cljs.core._invoke["_"];
          if(or__3824__auto____6659) {
            return or__3824__auto____6659
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____6660 = this$;
      if(and__3822__auto____6660) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____6660
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      return function() {
        var or__3824__auto____6661 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6661) {
          return or__3824__auto____6661
        }else {
          var or__3824__auto____6662 = cljs.core._invoke["_"];
          if(or__3824__auto____6662) {
            return or__3824__auto____6662
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____6663 = this$;
      if(and__3822__auto____6663) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____6663
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      return function() {
        var or__3824__auto____6664 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6664) {
          return or__3824__auto____6664
        }else {
          var or__3824__auto____6665 = cljs.core._invoke["_"];
          if(or__3824__auto____6665) {
            return or__3824__auto____6665
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____6666 = this$;
      if(and__3822__auto____6666) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____6666
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      return function() {
        var or__3824__auto____6667 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6667) {
          return or__3824__auto____6667
        }else {
          var or__3824__auto____6668 = cljs.core._invoke["_"];
          if(or__3824__auto____6668) {
            return or__3824__auto____6668
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____6669 = this$;
      if(and__3822__auto____6669) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____6669
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      return function() {
        var or__3824__auto____6670 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6670) {
          return or__3824__auto____6670
        }else {
          var or__3824__auto____6671 = cljs.core._invoke["_"];
          if(or__3824__auto____6671) {
            return or__3824__auto____6671
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____6672 = this$;
      if(and__3822__auto____6672) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____6672
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      return function() {
        var or__3824__auto____6673 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6673) {
          return or__3824__auto____6673
        }else {
          var or__3824__auto____6674 = cljs.core._invoke["_"];
          if(or__3824__auto____6674) {
            return or__3824__auto____6674
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____6675 = this$;
      if(and__3822__auto____6675) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____6675
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      return function() {
        var or__3824__auto____6676 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6676) {
          return or__3824__auto____6676
        }else {
          var or__3824__auto____6677 = cljs.core._invoke["_"];
          if(or__3824__auto____6677) {
            return or__3824__auto____6677
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____6678 = this$;
      if(and__3822__auto____6678) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____6678
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      return function() {
        var or__3824__auto____6679 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6679) {
          return or__3824__auto____6679
        }else {
          var or__3824__auto____6680 = cljs.core._invoke["_"];
          if(or__3824__auto____6680) {
            return or__3824__auto____6680
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____6681 = this$;
      if(and__3822__auto____6681) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____6681
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      return function() {
        var or__3824__auto____6682 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6682) {
          return or__3824__auto____6682
        }else {
          var or__3824__auto____6683 = cljs.core._invoke["_"];
          if(or__3824__auto____6683) {
            return or__3824__auto____6683
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____6684 = this$;
      if(and__3822__auto____6684) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____6684
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      return function() {
        var or__3824__auto____6685 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____6685) {
          return or__3824__auto____6685
        }else {
          var or__3824__auto____6686 = cljs.core._invoke["_"];
          if(or__3824__auto____6686) {
            return or__3824__auto____6686
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
void 0;
void 0;
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____6690 = coll;
    if(and__3822__auto____6690) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____6690
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6691 = cljs.core._count[goog.typeOf(coll)];
      if(or__3824__auto____6691) {
        return or__3824__auto____6691
      }else {
        var or__3824__auto____6692 = cljs.core._count["_"];
        if(or__3824__auto____6692) {
          return or__3824__auto____6692
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____6696 = coll;
    if(and__3822__auto____6696) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____6696
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6697 = cljs.core._empty[goog.typeOf(coll)];
      if(or__3824__auto____6697) {
        return or__3824__auto____6697
      }else {
        var or__3824__auto____6698 = cljs.core._empty["_"];
        if(or__3824__auto____6698) {
          return or__3824__auto____6698
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____6702 = coll;
    if(and__3822__auto____6702) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____6702
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    return function() {
      var or__3824__auto____6703 = cljs.core._conj[goog.typeOf(coll)];
      if(or__3824__auto____6703) {
        return or__3824__auto____6703
      }else {
        var or__3824__auto____6704 = cljs.core._conj["_"];
        if(or__3824__auto____6704) {
          return or__3824__auto____6704
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
void 0;
void 0;
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____6711 = coll;
      if(and__3822__auto____6711) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____6711
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      return function() {
        var or__3824__auto____6712 = cljs.core._nth[goog.typeOf(coll)];
        if(or__3824__auto____6712) {
          return or__3824__auto____6712
        }else {
          var or__3824__auto____6713 = cljs.core._nth["_"];
          if(or__3824__auto____6713) {
            return or__3824__auto____6713
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____6714 = coll;
      if(and__3822__auto____6714) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____6714
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      return function() {
        var or__3824__auto____6715 = cljs.core._nth[goog.typeOf(coll)];
        if(or__3824__auto____6715) {
          return or__3824__auto____6715
        }else {
          var or__3824__auto____6716 = cljs.core._nth["_"];
          if(or__3824__auto____6716) {
            return or__3824__auto____6716
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
void 0;
void 0;
cljs.core.ASeq = {};
void 0;
void 0;
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____6720 = coll;
    if(and__3822__auto____6720) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____6720
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6721 = cljs.core._first[goog.typeOf(coll)];
      if(or__3824__auto____6721) {
        return or__3824__auto____6721
      }else {
        var or__3824__auto____6722 = cljs.core._first["_"];
        if(or__3824__auto____6722) {
          return or__3824__auto____6722
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____6726 = coll;
    if(and__3822__auto____6726) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____6726
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6727 = cljs.core._rest[goog.typeOf(coll)];
      if(or__3824__auto____6727) {
        return or__3824__auto____6727
      }else {
        var or__3824__auto____6728 = cljs.core._rest["_"];
        if(or__3824__auto____6728) {
          return or__3824__auto____6728
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____6732 = coll;
    if(and__3822__auto____6732) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____6732
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6733 = cljs.core._next[goog.typeOf(coll)];
      if(or__3824__auto____6733) {
        return or__3824__auto____6733
      }else {
        var or__3824__auto____6734 = cljs.core._next["_"];
        if(or__3824__auto____6734) {
          return or__3824__auto____6734
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____6741 = o;
      if(and__3822__auto____6741) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____6741
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      return function() {
        var or__3824__auto____6742 = cljs.core._lookup[goog.typeOf(o)];
        if(or__3824__auto____6742) {
          return or__3824__auto____6742
        }else {
          var or__3824__auto____6743 = cljs.core._lookup["_"];
          if(or__3824__auto____6743) {
            return or__3824__auto____6743
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____6744 = o;
      if(and__3822__auto____6744) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____6744
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      return function() {
        var or__3824__auto____6745 = cljs.core._lookup[goog.typeOf(o)];
        if(or__3824__auto____6745) {
          return or__3824__auto____6745
        }else {
          var or__3824__auto____6746 = cljs.core._lookup["_"];
          if(or__3824__auto____6746) {
            return or__3824__auto____6746
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
void 0;
void 0;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____6750 = coll;
    if(and__3822__auto____6750) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____6750
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    return function() {
      var or__3824__auto____6751 = cljs.core._contains_key_QMARK_[goog.typeOf(coll)];
      if(or__3824__auto____6751) {
        return or__3824__auto____6751
      }else {
        var or__3824__auto____6752 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____6752) {
          return or__3824__auto____6752
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____6756 = coll;
    if(and__3822__auto____6756) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____6756
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    return function() {
      var or__3824__auto____6757 = cljs.core._assoc[goog.typeOf(coll)];
      if(or__3824__auto____6757) {
        return or__3824__auto____6757
      }else {
        var or__3824__auto____6758 = cljs.core._assoc["_"];
        if(or__3824__auto____6758) {
          return or__3824__auto____6758
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
void 0;
void 0;
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____6762 = coll;
    if(and__3822__auto____6762) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____6762
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    return function() {
      var or__3824__auto____6763 = cljs.core._dissoc[goog.typeOf(coll)];
      if(or__3824__auto____6763) {
        return or__3824__auto____6763
      }else {
        var or__3824__auto____6764 = cljs.core._dissoc["_"];
        if(or__3824__auto____6764) {
          return or__3824__auto____6764
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
void 0;
void 0;
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____6768 = coll;
    if(and__3822__auto____6768) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____6768
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6769 = cljs.core._key[goog.typeOf(coll)];
      if(or__3824__auto____6769) {
        return or__3824__auto____6769
      }else {
        var or__3824__auto____6770 = cljs.core._key["_"];
        if(or__3824__auto____6770) {
          return or__3824__auto____6770
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____6774 = coll;
    if(and__3822__auto____6774) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____6774
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6775 = cljs.core._val[goog.typeOf(coll)];
      if(or__3824__auto____6775) {
        return or__3824__auto____6775
      }else {
        var or__3824__auto____6776 = cljs.core._val["_"];
        if(or__3824__auto____6776) {
          return or__3824__auto____6776
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____6780 = coll;
    if(and__3822__auto____6780) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____6780
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    return function() {
      var or__3824__auto____6781 = cljs.core._disjoin[goog.typeOf(coll)];
      if(or__3824__auto____6781) {
        return or__3824__auto____6781
      }else {
        var or__3824__auto____6782 = cljs.core._disjoin["_"];
        if(or__3824__auto____6782) {
          return or__3824__auto____6782
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
void 0;
void 0;
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____6786 = coll;
    if(and__3822__auto____6786) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____6786
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6787 = cljs.core._peek[goog.typeOf(coll)];
      if(or__3824__auto____6787) {
        return or__3824__auto____6787
      }else {
        var or__3824__auto____6788 = cljs.core._peek["_"];
        if(or__3824__auto____6788) {
          return or__3824__auto____6788
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____6792 = coll;
    if(and__3822__auto____6792) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____6792
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6793 = cljs.core._pop[goog.typeOf(coll)];
      if(or__3824__auto____6793) {
        return or__3824__auto____6793
      }else {
        var or__3824__auto____6794 = cljs.core._pop["_"];
        if(or__3824__auto____6794) {
          return or__3824__auto____6794
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____6798 = coll;
    if(and__3822__auto____6798) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____6798
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    return function() {
      var or__3824__auto____6799 = cljs.core._assoc_n[goog.typeOf(coll)];
      if(or__3824__auto____6799) {
        return or__3824__auto____6799
      }else {
        var or__3824__auto____6800 = cljs.core._assoc_n["_"];
        if(or__3824__auto____6800) {
          return or__3824__auto____6800
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
void 0;
void 0;
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____6804 = o;
    if(and__3822__auto____6804) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____6804
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____6805 = cljs.core._deref[goog.typeOf(o)];
      if(or__3824__auto____6805) {
        return or__3824__auto____6805
      }else {
        var or__3824__auto____6806 = cljs.core._deref["_"];
        if(or__3824__auto____6806) {
          return or__3824__auto____6806
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____6810 = o;
    if(and__3822__auto____6810) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____6810
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    return function() {
      var or__3824__auto____6811 = cljs.core._deref_with_timeout[goog.typeOf(o)];
      if(or__3824__auto____6811) {
        return or__3824__auto____6811
      }else {
        var or__3824__auto____6812 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____6812) {
          return or__3824__auto____6812
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
void 0;
void 0;
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____6816 = o;
    if(and__3822__auto____6816) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____6816
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____6817 = cljs.core._meta[goog.typeOf(o)];
      if(or__3824__auto____6817) {
        return or__3824__auto____6817
      }else {
        var or__3824__auto____6818 = cljs.core._meta["_"];
        if(or__3824__auto____6818) {
          return or__3824__auto____6818
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____6822 = o;
    if(and__3822__auto____6822) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____6822
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    return function() {
      var or__3824__auto____6823 = cljs.core._with_meta[goog.typeOf(o)];
      if(or__3824__auto____6823) {
        return or__3824__auto____6823
      }else {
        var or__3824__auto____6824 = cljs.core._with_meta["_"];
        if(or__3824__auto____6824) {
          return or__3824__auto____6824
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
void 0;
void 0;
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____6831 = coll;
      if(and__3822__auto____6831) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____6831
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      return function() {
        var or__3824__auto____6832 = cljs.core._reduce[goog.typeOf(coll)];
        if(or__3824__auto____6832) {
          return or__3824__auto____6832
        }else {
          var or__3824__auto____6833 = cljs.core._reduce["_"];
          if(or__3824__auto____6833) {
            return or__3824__auto____6833
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____6834 = coll;
      if(and__3822__auto____6834) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____6834
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      return function() {
        var or__3824__auto____6835 = cljs.core._reduce[goog.typeOf(coll)];
        if(or__3824__auto____6835) {
          return or__3824__auto____6835
        }else {
          var or__3824__auto____6836 = cljs.core._reduce["_"];
          if(or__3824__auto____6836) {
            return or__3824__auto____6836
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
void 0;
void 0;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____6840 = coll;
    if(and__3822__auto____6840) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____6840
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    return function() {
      var or__3824__auto____6841 = cljs.core._kv_reduce[goog.typeOf(coll)];
      if(or__3824__auto____6841) {
        return or__3824__auto____6841
      }else {
        var or__3824__auto____6842 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____6842) {
          return or__3824__auto____6842
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
void 0;
void 0;
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____6846 = o;
    if(and__3822__auto____6846) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____6846
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    return function() {
      var or__3824__auto____6847 = cljs.core._equiv[goog.typeOf(o)];
      if(or__3824__auto____6847) {
        return or__3824__auto____6847
      }else {
        var or__3824__auto____6848 = cljs.core._equiv["_"];
        if(or__3824__auto____6848) {
          return or__3824__auto____6848
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
void 0;
void 0;
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____6852 = o;
    if(and__3822__auto____6852) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____6852
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____6853 = cljs.core._hash[goog.typeOf(o)];
      if(or__3824__auto____6853) {
        return or__3824__auto____6853
      }else {
        var or__3824__auto____6854 = cljs.core._hash["_"];
        if(or__3824__auto____6854) {
          return or__3824__auto____6854
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____6858 = o;
    if(and__3822__auto____6858) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____6858
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____6859 = cljs.core._seq[goog.typeOf(o)];
      if(or__3824__auto____6859) {
        return or__3824__auto____6859
      }else {
        var or__3824__auto____6860 = cljs.core._seq["_"];
        if(or__3824__auto____6860) {
          return or__3824__auto____6860
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.ISequential = {};
void 0;
void 0;
cljs.core.IList = {};
void 0;
void 0;
cljs.core.IRecord = {};
void 0;
void 0;
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____6864 = coll;
    if(and__3822__auto____6864) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____6864
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6865 = cljs.core._rseq[goog.typeOf(coll)];
      if(or__3824__auto____6865) {
        return or__3824__auto____6865
      }else {
        var or__3824__auto____6866 = cljs.core._rseq["_"];
        if(or__3824__auto____6866) {
          return or__3824__auto____6866
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____6870 = coll;
    if(and__3822__auto____6870) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____6870
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    return function() {
      var or__3824__auto____6871 = cljs.core._sorted_seq[goog.typeOf(coll)];
      if(or__3824__auto____6871) {
        return or__3824__auto____6871
      }else {
        var or__3824__auto____6872 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____6872) {
          return or__3824__auto____6872
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____6876 = coll;
    if(and__3822__auto____6876) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____6876
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    return function() {
      var or__3824__auto____6877 = cljs.core._sorted_seq_from[goog.typeOf(coll)];
      if(or__3824__auto____6877) {
        return or__3824__auto____6877
      }else {
        var or__3824__auto____6878 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____6878) {
          return or__3824__auto____6878
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____6882 = coll;
    if(and__3822__auto____6882) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____6882
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    return function() {
      var or__3824__auto____6883 = cljs.core._entry_key[goog.typeOf(coll)];
      if(or__3824__auto____6883) {
        return or__3824__auto____6883
      }else {
        var or__3824__auto____6884 = cljs.core._entry_key["_"];
        if(or__3824__auto____6884) {
          return or__3824__auto____6884
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____6888 = coll;
    if(and__3822__auto____6888) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____6888
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6889 = cljs.core._comparator[goog.typeOf(coll)];
      if(or__3824__auto____6889) {
        return or__3824__auto____6889
      }else {
        var or__3824__auto____6890 = cljs.core._comparator["_"];
        if(or__3824__auto____6890) {
          return or__3824__auto____6890
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____6894 = o;
    if(and__3822__auto____6894) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____6894
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    return function() {
      var or__3824__auto____6895 = cljs.core._pr_seq[goog.typeOf(o)];
      if(or__3824__auto____6895) {
        return or__3824__auto____6895
      }else {
        var or__3824__auto____6896 = cljs.core._pr_seq["_"];
        if(or__3824__auto____6896) {
          return or__3824__auto____6896
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
void 0;
void 0;
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____6900 = d;
    if(and__3822__auto____6900) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____6900
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    return function() {
      var or__3824__auto____6901 = cljs.core._realized_QMARK_[goog.typeOf(d)];
      if(or__3824__auto____6901) {
        return or__3824__auto____6901
      }else {
        var or__3824__auto____6902 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____6902) {
          return or__3824__auto____6902
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
void 0;
void 0;
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____6906 = this$;
    if(and__3822__auto____6906) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____6906
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    return function() {
      var or__3824__auto____6907 = cljs.core._notify_watches[goog.typeOf(this$)];
      if(or__3824__auto____6907) {
        return or__3824__auto____6907
      }else {
        var or__3824__auto____6908 = cljs.core._notify_watches["_"];
        if(or__3824__auto____6908) {
          return or__3824__auto____6908
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____6912 = this$;
    if(and__3822__auto____6912) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____6912
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    return function() {
      var or__3824__auto____6913 = cljs.core._add_watch[goog.typeOf(this$)];
      if(or__3824__auto____6913) {
        return or__3824__auto____6913
      }else {
        var or__3824__auto____6914 = cljs.core._add_watch["_"];
        if(or__3824__auto____6914) {
          return or__3824__auto____6914
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____6918 = this$;
    if(and__3822__auto____6918) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____6918
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    return function() {
      var or__3824__auto____6919 = cljs.core._remove_watch[goog.typeOf(this$)];
      if(or__3824__auto____6919) {
        return or__3824__auto____6919
      }else {
        var or__3824__auto____6920 = cljs.core._remove_watch["_"];
        if(or__3824__auto____6920) {
          return or__3824__auto____6920
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
void 0;
void 0;
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____6924 = coll;
    if(and__3822__auto____6924) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____6924
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6925 = cljs.core._as_transient[goog.typeOf(coll)];
      if(or__3824__auto____6925) {
        return or__3824__auto____6925
      }else {
        var or__3824__auto____6926 = cljs.core._as_transient["_"];
        if(or__3824__auto____6926) {
          return or__3824__auto____6926
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____6930 = tcoll;
    if(and__3822__auto____6930) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____6930
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    return function() {
      var or__3824__auto____6931 = cljs.core._conj_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____6931) {
        return or__3824__auto____6931
      }else {
        var or__3824__auto____6932 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____6932) {
          return or__3824__auto____6932
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____6936 = tcoll;
    if(and__3822__auto____6936) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____6936
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    return function() {
      var or__3824__auto____6937 = cljs.core._persistent_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____6937) {
        return or__3824__auto____6937
      }else {
        var or__3824__auto____6938 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____6938) {
          return or__3824__auto____6938
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
void 0;
void 0;
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____6942 = tcoll;
    if(and__3822__auto____6942) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____6942
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    return function() {
      var or__3824__auto____6943 = cljs.core._assoc_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____6943) {
        return or__3824__auto____6943
      }else {
        var or__3824__auto____6944 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____6944) {
          return or__3824__auto____6944
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
void 0;
void 0;
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____6948 = tcoll;
    if(and__3822__auto____6948) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____6948
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    return function() {
      var or__3824__auto____6949 = cljs.core._dissoc_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____6949) {
        return or__3824__auto____6949
      }else {
        var or__3824__auto____6950 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____6950) {
          return or__3824__auto____6950
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
void 0;
void 0;
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____6954 = tcoll;
    if(and__3822__auto____6954) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____6954
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    return function() {
      var or__3824__auto____6955 = cljs.core._assoc_n_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____6955) {
        return or__3824__auto____6955
      }else {
        var or__3824__auto____6956 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____6956) {
          return or__3824__auto____6956
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____6960 = tcoll;
    if(and__3822__auto____6960) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____6960
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    return function() {
      var or__3824__auto____6961 = cljs.core._pop_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____6961) {
        return or__3824__auto____6961
      }else {
        var or__3824__auto____6962 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____6962) {
          return or__3824__auto____6962
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
void 0;
void 0;
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____6966 = tcoll;
    if(and__3822__auto____6966) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____6966
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    return function() {
      var or__3824__auto____6967 = cljs.core._disjoin_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____6967) {
        return or__3824__auto____6967
      }else {
        var or__3824__auto____6968 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____6968) {
          return or__3824__auto____6968
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
void 0;
void 0;
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____6972 = x;
    if(and__3822__auto____6972) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____6972
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    return function() {
      var or__3824__auto____6973 = cljs.core._compare[goog.typeOf(x)];
      if(or__3824__auto____6973) {
        return or__3824__auto____6973
      }else {
        var or__3824__auto____6974 = cljs.core._compare["_"];
        if(or__3824__auto____6974) {
          return or__3824__auto____6974
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
void 0;
void 0;
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____6978 = coll;
    if(and__3822__auto____6978) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____6978
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6979 = cljs.core._drop_first[goog.typeOf(coll)];
      if(or__3824__auto____6979) {
        return or__3824__auto____6979
      }else {
        var or__3824__auto____6980 = cljs.core._drop_first["_"];
        if(or__3824__auto____6980) {
          return or__3824__auto____6980
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____6984 = coll;
    if(and__3822__auto____6984) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____6984
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6985 = cljs.core._chunked_first[goog.typeOf(coll)];
      if(or__3824__auto____6985) {
        return or__3824__auto____6985
      }else {
        var or__3824__auto____6986 = cljs.core._chunked_first["_"];
        if(or__3824__auto____6986) {
          return or__3824__auto____6986
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____6990 = coll;
    if(and__3822__auto____6990) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____6990
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6991 = cljs.core._chunked_rest[goog.typeOf(coll)];
      if(or__3824__auto____6991) {
        return or__3824__auto____6991
      }else {
        var or__3824__auto____6992 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____6992) {
          return or__3824__auto____6992
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____6996 = coll;
    if(and__3822__auto____6996) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____6996
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____6997 = cljs.core._chunked_next[goog.typeOf(coll)];
      if(or__3824__auto____6997) {
        return or__3824__auto____6997
      }else {
        var or__3824__auto____6998 = cljs.core._chunked_next["_"];
        if(or__3824__auto____6998) {
          return or__3824__auto____6998
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
void 0;
void 0;
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____7000 = x === y;
    if(or__3824__auto____7000) {
      return or__3824__auto____7000
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__7001__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7002 = y;
            var G__7003 = cljs.core.first.call(null, more);
            var G__7004 = cljs.core.next.call(null, more);
            x = G__7002;
            y = G__7003;
            more = G__7004;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7001 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7001__delegate.call(this, x, y, more)
    };
    G__7001.cljs$lang$maxFixedArity = 2;
    G__7001.cljs$lang$applyTo = function(arglist__7005) {
      var x = cljs.core.first(arglist__7005);
      var y = cljs.core.first(cljs.core.next(arglist__7005));
      var more = cljs.core.rest(cljs.core.next(arglist__7005));
      return G__7001__delegate(x, y, more)
    };
    G__7001.cljs$lang$arity$variadic = G__7001__delegate;
    return G__7001
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
void 0;
void 0;
void 0;
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__7006 = null;
  var G__7006__2 = function(o, k) {
    return null
  };
  var G__7006__3 = function(o, k, not_found) {
    return not_found
  };
  G__7006 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7006__2.call(this, o, k);
      case 3:
        return G__7006__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7006
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__7007 = null;
  var G__7007__2 = function(_, f) {
    return f.call(null)
  };
  var G__7007__3 = function(_, f, start) {
    return start
  };
  G__7007 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7007__2.call(this, _, f);
      case 3:
        return G__7007__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7007
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__7008 = null;
  var G__7008__2 = function(_, n) {
    return null
  };
  var G__7008__3 = function(_, n, not_found) {
    return not_found
  };
  G__7008 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7008__2.call(this, _, n);
      case 3:
        return G__7008__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7008
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  return o.toString() === other.toString()
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
void 0;
void 0;
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__7021 = cljs.core._count.call(null, cicoll);
    if(cnt__7021 === 0) {
      return f.call(null)
    }else {
      var val__7022 = cljs.core._nth.call(null, cicoll, 0);
      var n__7023 = 1;
      while(true) {
        if(n__7023 < cnt__7021) {
          var nval__7024 = f.call(null, val__7022, cljs.core._nth.call(null, cicoll, n__7023));
          if(cljs.core.reduced_QMARK_.call(null, nval__7024)) {
            return cljs.core.deref.call(null, nval__7024)
          }else {
            var G__7033 = nval__7024;
            var G__7034 = n__7023 + 1;
            val__7022 = G__7033;
            n__7023 = G__7034;
            continue
          }
        }else {
          return val__7022
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__7025 = cljs.core._count.call(null, cicoll);
    var val__7026 = val;
    var n__7027 = 0;
    while(true) {
      if(n__7027 < cnt__7025) {
        var nval__7028 = f.call(null, val__7026, cljs.core._nth.call(null, cicoll, n__7027));
        if(cljs.core.reduced_QMARK_.call(null, nval__7028)) {
          return cljs.core.deref.call(null, nval__7028)
        }else {
          var G__7035 = nval__7028;
          var G__7036 = n__7027 + 1;
          val__7026 = G__7035;
          n__7027 = G__7036;
          continue
        }
      }else {
        return val__7026
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__7029 = cljs.core._count.call(null, cicoll);
    var val__7030 = val;
    var n__7031 = idx;
    while(true) {
      if(n__7031 < cnt__7029) {
        var nval__7032 = f.call(null, val__7030, cljs.core._nth.call(null, cicoll, n__7031));
        if(cljs.core.reduced_QMARK_.call(null, nval__7032)) {
          return cljs.core.deref.call(null, nval__7032)
        }else {
          var G__7037 = nval__7032;
          var G__7038 = n__7031 + 1;
          val__7030 = G__7037;
          n__7031 = G__7038;
          continue
        }
      }else {
        return val__7030
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__7051 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__7052 = arr[0];
      var n__7053 = 1;
      while(true) {
        if(n__7053 < cnt__7051) {
          var nval__7054 = f.call(null, val__7052, arr[n__7053]);
          if(cljs.core.reduced_QMARK_.call(null, nval__7054)) {
            return cljs.core.deref.call(null, nval__7054)
          }else {
            var G__7063 = nval__7054;
            var G__7064 = n__7053 + 1;
            val__7052 = G__7063;
            n__7053 = G__7064;
            continue
          }
        }else {
          return val__7052
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__7055 = arr.length;
    var val__7056 = val;
    var n__7057 = 0;
    while(true) {
      if(n__7057 < cnt__7055) {
        var nval__7058 = f.call(null, val__7056, arr[n__7057]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7058)) {
          return cljs.core.deref.call(null, nval__7058)
        }else {
          var G__7065 = nval__7058;
          var G__7066 = n__7057 + 1;
          val__7056 = G__7065;
          n__7057 = G__7066;
          continue
        }
      }else {
        return val__7056
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__7059 = arr.length;
    var val__7060 = val;
    var n__7061 = idx;
    while(true) {
      if(n__7061 < cnt__7059) {
        var nval__7062 = f.call(null, val__7060, arr[n__7061]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7062)) {
          return cljs.core.deref.call(null, nval__7062)
        }else {
          var G__7067 = nval__7062;
          var G__7068 = n__7061 + 1;
          val__7060 = G__7067;
          n__7061 = G__7068;
          continue
        }
      }else {
        return val__7060
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7069 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__7070 = this;
  if(this__7070.i + 1 < this__7070.a.length) {
    return new cljs.core.IndexedSeq(this__7070.a, this__7070.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7071 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__7072 = this;
  var c__7073 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__7073 > 0) {
    return new cljs.core.RSeq(coll, c__7073 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__7074 = this;
  var this__7075 = this;
  return cljs.core.pr_str.call(null, this__7075)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__7076 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7076.a)) {
    return cljs.core.ci_reduce.call(null, this__7076.a, f, this__7076.a[this__7076.i], this__7076.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__7076.a[this__7076.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__7077 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7077.a)) {
    return cljs.core.ci_reduce.call(null, this__7077.a, f, start, this__7077.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__7078 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7079 = this;
  return this__7079.a.length - this__7079.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__7080 = this;
  return this__7080.a[this__7080.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__7081 = this;
  if(this__7081.i + 1 < this__7081.a.length) {
    return new cljs.core.IndexedSeq(this__7081.a, this__7081.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7082 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__7083 = this;
  var i__7084 = n + this__7083.i;
  if(i__7084 < this__7083.a.length) {
    return this__7083.a[i__7084]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__7085 = this;
  var i__7086 = n + this__7085.i;
  if(i__7086 < this__7085.a.length) {
    return this__7085.a[i__7086]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__7087 = null;
  var G__7087__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__7087__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__7087 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7087__2.call(this, array, f);
      case 3:
        return G__7087__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7087
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__7088 = null;
  var G__7088__2 = function(array, k) {
    return array[k]
  };
  var G__7088__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__7088 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7088__2.call(this, array, k);
      case 3:
        return G__7088__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7088
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__7089 = null;
  var G__7089__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__7089__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__7089 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7089__2.call(this, array, n);
      case 3:
        return G__7089__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7089
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7090 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7091 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__7092 = this;
  var this__7093 = this;
  return cljs.core.pr_str.call(null, this__7093)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7094 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7095 = this;
  return this__7095.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7096 = this;
  return cljs.core._nth.call(null, this__7096.ci, this__7096.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7097 = this;
  if(this__7097.i > 0) {
    return new cljs.core.RSeq(this__7097.ci, this__7097.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7098 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__7099 = this;
  return new cljs.core.RSeq(this__7099.ci, this__7099.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7100 = this;
  return this__7100.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7104__7105 = coll;
      if(G__7104__7105) {
        if(function() {
          var or__3824__auto____7106 = G__7104__7105.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____7106) {
            return or__3824__auto____7106
          }else {
            return G__7104__7105.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__7104__7105.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7104__7105)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__7104__7105)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7111__7112 = coll;
      if(G__7111__7112) {
        if(function() {
          var or__3824__auto____7113 = G__7111__7112.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____7113) {
            return or__3824__auto____7113
          }else {
            return G__7111__7112.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7111__7112.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7111__7112)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7111__7112)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__7114 = cljs.core.seq.call(null, coll);
      if(s__7114 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__7114)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__7119__7120 = coll;
      if(G__7119__7120) {
        if(function() {
          var or__3824__auto____7121 = G__7119__7120.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____7121) {
            return or__3824__auto____7121
          }else {
            return G__7119__7120.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7119__7120.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7119__7120)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7119__7120)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__7122 = cljs.core.seq.call(null, coll);
      if(!(s__7122 == null)) {
        return cljs.core._rest.call(null, s__7122)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__7126__7127 = coll;
      if(G__7126__7127) {
        if(function() {
          var or__3824__auto____7128 = G__7126__7127.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____7128) {
            return or__3824__auto____7128
          }else {
            return G__7126__7127.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__7126__7127.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7126__7127)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__7126__7127)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__7130 = cljs.core.next.call(null, s);
    if(!(sn__7130 == null)) {
      var G__7131 = sn__7130;
      s = G__7131;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__7132__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__7133 = conj.call(null, coll, x);
          var G__7134 = cljs.core.first.call(null, xs);
          var G__7135 = cljs.core.next.call(null, xs);
          coll = G__7133;
          x = G__7134;
          xs = G__7135;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__7132 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7132__delegate.call(this, coll, x, xs)
    };
    G__7132.cljs$lang$maxFixedArity = 2;
    G__7132.cljs$lang$applyTo = function(arglist__7136) {
      var coll = cljs.core.first(arglist__7136);
      var x = cljs.core.first(cljs.core.next(arglist__7136));
      var xs = cljs.core.rest(cljs.core.next(arglist__7136));
      return G__7132__delegate(coll, x, xs)
    };
    G__7132.cljs$lang$arity$variadic = G__7132__delegate;
    return G__7132
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
void 0;
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__7139 = cljs.core.seq.call(null, coll);
  var acc__7140 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__7139)) {
      return acc__7140 + cljs.core._count.call(null, s__7139)
    }else {
      var G__7141 = cljs.core.next.call(null, s__7139);
      var G__7142 = acc__7140 + 1;
      s__7139 = G__7141;
      acc__7140 = G__7142;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
void 0;
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__7149__7150 = coll;
        if(G__7149__7150) {
          if(function() {
            var or__3824__auto____7151 = G__7149__7150.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____7151) {
              return or__3824__auto____7151
            }else {
              return G__7149__7150.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7149__7150.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7149__7150)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7149__7150)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__7152__7153 = coll;
        if(G__7152__7153) {
          if(function() {
            var or__3824__auto____7154 = G__7152__7153.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____7154) {
              return or__3824__auto____7154
            }else {
              return G__7152__7153.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__7152__7153.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7152__7153)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7152__7153)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__7157__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__7156 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__7158 = ret__7156;
          var G__7159 = cljs.core.first.call(null, kvs);
          var G__7160 = cljs.core.second.call(null, kvs);
          var G__7161 = cljs.core.nnext.call(null, kvs);
          coll = G__7158;
          k = G__7159;
          v = G__7160;
          kvs = G__7161;
          continue
        }else {
          return ret__7156
        }
        break
      }
    };
    var G__7157 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7157__delegate.call(this, coll, k, v, kvs)
    };
    G__7157.cljs$lang$maxFixedArity = 3;
    G__7157.cljs$lang$applyTo = function(arglist__7162) {
      var coll = cljs.core.first(arglist__7162);
      var k = cljs.core.first(cljs.core.next(arglist__7162));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7162)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7162)));
      return G__7157__delegate(coll, k, v, kvs)
    };
    G__7157.cljs$lang$arity$variadic = G__7157__delegate;
    return G__7157
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__7165__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7164 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7166 = ret__7164;
          var G__7167 = cljs.core.first.call(null, ks);
          var G__7168 = cljs.core.next.call(null, ks);
          coll = G__7166;
          k = G__7167;
          ks = G__7168;
          continue
        }else {
          return ret__7164
        }
        break
      }
    };
    var G__7165 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7165__delegate.call(this, coll, k, ks)
    };
    G__7165.cljs$lang$maxFixedArity = 2;
    G__7165.cljs$lang$applyTo = function(arglist__7169) {
      var coll = cljs.core.first(arglist__7169);
      var k = cljs.core.first(cljs.core.next(arglist__7169));
      var ks = cljs.core.rest(cljs.core.next(arglist__7169));
      return G__7165__delegate(coll, k, ks)
    };
    G__7165.cljs$lang$arity$variadic = G__7165__delegate;
    return G__7165
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__7173__7174 = o;
    if(G__7173__7174) {
      if(function() {
        var or__3824__auto____7175 = G__7173__7174.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____7175) {
          return or__3824__auto____7175
        }else {
          return G__7173__7174.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__7173__7174.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7173__7174)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7173__7174)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__7178__delegate = function(coll, k, ks) {
      while(true) {
        var ret__7177 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__7179 = ret__7177;
          var G__7180 = cljs.core.first.call(null, ks);
          var G__7181 = cljs.core.next.call(null, ks);
          coll = G__7179;
          k = G__7180;
          ks = G__7181;
          continue
        }else {
          return ret__7177
        }
        break
      }
    };
    var G__7178 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7178__delegate.call(this, coll, k, ks)
    };
    G__7178.cljs$lang$maxFixedArity = 2;
    G__7178.cljs$lang$applyTo = function(arglist__7182) {
      var coll = cljs.core.first(arglist__7182);
      var k = cljs.core.first(cljs.core.next(arglist__7182));
      var ks = cljs.core.rest(cljs.core.next(arglist__7182));
      return G__7178__delegate(coll, k, ks)
    };
    G__7178.cljs$lang$arity$variadic = G__7178__delegate;
    return G__7178
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__7184 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__7184;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__7184
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__7186 = cljs.core.string_hash_cache[k];
  if(!(h__7186 == null)) {
    return h__7186
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____7188 = goog.isString(o);
      if(and__3822__auto____7188) {
        return check_cache
      }else {
        return and__3822__auto____7188
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7192__7193 = x;
    if(G__7192__7193) {
      if(function() {
        var or__3824__auto____7194 = G__7192__7193.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____7194) {
          return or__3824__auto____7194
        }else {
          return G__7192__7193.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__7192__7193.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7192__7193)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__7192__7193)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7198__7199 = x;
    if(G__7198__7199) {
      if(function() {
        var or__3824__auto____7200 = G__7198__7199.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____7200) {
          return or__3824__auto____7200
        }else {
          return G__7198__7199.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__7198__7199.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7198__7199)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__7198__7199)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__7204__7205 = x;
  if(G__7204__7205) {
    if(function() {
      var or__3824__auto____7206 = G__7204__7205.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____7206) {
        return or__3824__auto____7206
      }else {
        return G__7204__7205.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__7204__7205.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7204__7205)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__7204__7205)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__7210__7211 = x;
  if(G__7210__7211) {
    if(function() {
      var or__3824__auto____7212 = G__7210__7211.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____7212) {
        return or__3824__auto____7212
      }else {
        return G__7210__7211.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__7210__7211.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7210__7211)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__7210__7211)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__7216__7217 = x;
  if(G__7216__7217) {
    if(function() {
      var or__3824__auto____7218 = G__7216__7217.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____7218) {
        return or__3824__auto____7218
      }else {
        return G__7216__7217.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__7216__7217.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7216__7217)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__7216__7217)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__7222__7223 = x;
  if(G__7222__7223) {
    if(function() {
      var or__3824__auto____7224 = G__7222__7223.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____7224) {
        return or__3824__auto____7224
      }else {
        return G__7222__7223.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__7222__7223.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7222__7223)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__7222__7223)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__7228__7229 = x;
  if(G__7228__7229) {
    if(function() {
      var or__3824__auto____7230 = G__7228__7229.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____7230) {
        return or__3824__auto____7230
      }else {
        return G__7228__7229.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__7228__7229.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7228__7229)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7228__7229)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__7234__7235 = x;
    if(G__7234__7235) {
      if(function() {
        var or__3824__auto____7236 = G__7234__7235.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____7236) {
          return or__3824__auto____7236
        }else {
          return G__7234__7235.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__7234__7235.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7234__7235)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__7234__7235)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__7240__7241 = x;
  if(G__7240__7241) {
    if(function() {
      var or__3824__auto____7242 = G__7240__7241.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____7242) {
        return or__3824__auto____7242
      }else {
        return G__7240__7241.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__7240__7241.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7240__7241)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__7240__7241)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__7246__7247 = x;
  if(G__7246__7247) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____7248 = null;
      if(cljs.core.truth_(or__3824__auto____7248)) {
        return or__3824__auto____7248
      }else {
        return G__7246__7247.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__7246__7247.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7246__7247)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__7246__7247)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__7249__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__7249 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7249__delegate.call(this, keyvals)
    };
    G__7249.cljs$lang$maxFixedArity = 0;
    G__7249.cljs$lang$applyTo = function(arglist__7250) {
      var keyvals = cljs.core.seq(arglist__7250);
      return G__7249__delegate(keyvals)
    };
    G__7249.cljs$lang$arity$variadic = G__7249__delegate;
    return G__7249
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(falsecljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__7252 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__7252.push(key)
  });
  return keys__7252
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__7256 = i;
  var j__7257 = j;
  var len__7258 = len;
  while(true) {
    if(len__7258 === 0) {
      return to
    }else {
      to[j__7257] = from[i__7256];
      var G__7259 = i__7256 + 1;
      var G__7260 = j__7257 + 1;
      var G__7261 = len__7258 - 1;
      i__7256 = G__7259;
      j__7257 = G__7260;
      len__7258 = G__7261;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__7265 = i + (len - 1);
  var j__7266 = j + (len - 1);
  var len__7267 = len;
  while(true) {
    if(len__7267 === 0) {
      return to
    }else {
      to[j__7266] = from[i__7265];
      var G__7268 = i__7265 - 1;
      var G__7269 = j__7266 - 1;
      var G__7270 = len__7267 - 1;
      i__7265 = G__7268;
      j__7266 = G__7269;
      len__7267 = G__7270;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__7274__7275 = s;
    if(G__7274__7275) {
      if(function() {
        var or__3824__auto____7276 = G__7274__7275.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____7276) {
          return or__3824__auto____7276
        }else {
          return G__7274__7275.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__7274__7275.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7274__7275)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7274__7275)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__7280__7281 = s;
  if(G__7280__7281) {
    if(function() {
      var or__3824__auto____7282 = G__7280__7281.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____7282) {
        return or__3824__auto____7282
      }else {
        return G__7280__7281.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__7280__7281.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7280__7281)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__7280__7281)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____7285 = goog.isString(x);
  if(and__3822__auto____7285) {
    return!function() {
      var or__3824__auto____7286 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____7286) {
        return or__3824__auto____7286
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____7285
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____7288 = goog.isString(x);
  if(and__3822__auto____7288) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____7288
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____7290 = goog.isString(x);
  if(and__3822__auto____7290) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____7290
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____7295 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____7295) {
    return or__3824__auto____7295
  }else {
    var G__7296__7297 = f;
    if(G__7296__7297) {
      if(function() {
        var or__3824__auto____7298 = G__7296__7297.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____7298) {
          return or__3824__auto____7298
        }else {
          return G__7296__7297.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__7296__7297.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7296__7297)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__7296__7297)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____7300 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____7300) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____7300
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____7303 = coll;
    if(cljs.core.truth_(and__3822__auto____7303)) {
      var and__3822__auto____7304 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____7304) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____7304
      }
    }else {
      return and__3822__auto____7303
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__7313__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__7309 = cljs.core.set([y, x]);
        var xs__7310 = more;
        while(true) {
          var x__7311 = cljs.core.first.call(null, xs__7310);
          var etc__7312 = cljs.core.next.call(null, xs__7310);
          if(cljs.core.truth_(xs__7310)) {
            if(cljs.core.contains_QMARK_.call(null, s__7309, x__7311)) {
              return false
            }else {
              var G__7314 = cljs.core.conj.call(null, s__7309, x__7311);
              var G__7315 = etc__7312;
              s__7309 = G__7314;
              xs__7310 = G__7315;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__7313 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7313__delegate.call(this, x, y, more)
    };
    G__7313.cljs$lang$maxFixedArity = 2;
    G__7313.cljs$lang$applyTo = function(arglist__7316) {
      var x = cljs.core.first(arglist__7316);
      var y = cljs.core.first(cljs.core.next(arglist__7316));
      var more = cljs.core.rest(cljs.core.next(arglist__7316));
      return G__7313__delegate(x, y, more)
    };
    G__7313.cljs$lang$arity$variadic = G__7313__delegate;
    return G__7313
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__7320__7321 = x;
            if(G__7320__7321) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____7322 = null;
                if(cljs.core.truth_(or__3824__auto____7322)) {
                  return or__3824__auto____7322
                }else {
                  return G__7320__7321.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__7320__7321.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7320__7321)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__7320__7321)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__7327 = cljs.core.count.call(null, xs);
    var yl__7328 = cljs.core.count.call(null, ys);
    if(xl__7327 < yl__7328) {
      return-1
    }else {
      if(xl__7327 > yl__7328) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__7327, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__7329 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____7330 = d__7329 === 0;
        if(and__3822__auto____7330) {
          return n + 1 < len
        }else {
          return and__3822__auto____7330
        }
      }()) {
        var G__7331 = xs;
        var G__7332 = ys;
        var G__7333 = len;
        var G__7334 = n + 1;
        xs = G__7331;
        ys = G__7332;
        len = G__7333;
        n = G__7334;
        continue
      }else {
        return d__7329
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__7336 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__7336)) {
        return r__7336
      }else {
        if(cljs.core.truth_(r__7336)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
void 0;
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__7338 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__7338, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__7338)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____7344 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____7344) {
      var s__7345 = temp__3971__auto____7344;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__7345), cljs.core.next.call(null, s__7345))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__7346 = val;
    var coll__7347 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__7347) {
        var nval__7348 = f.call(null, val__7346, cljs.core.first.call(null, coll__7347));
        if(cljs.core.reduced_QMARK_.call(null, nval__7348)) {
          return cljs.core.deref.call(null, nval__7348)
        }else {
          var G__7349 = nval__7348;
          var G__7350 = cljs.core.next.call(null, coll__7347);
          val__7346 = G__7349;
          coll__7347 = G__7350;
          continue
        }
      }else {
        return val__7346
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
void 0;
cljs.core.shuffle = function shuffle(coll) {
  var a__7352 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__7352);
  return cljs.core.vec.call(null, a__7352)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__7359__7360 = coll;
      if(G__7359__7360) {
        if(function() {
          var or__3824__auto____7361 = G__7359__7360.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____7361) {
            return or__3824__auto____7361
          }else {
            return G__7359__7360.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7359__7360.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7359__7360)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7359__7360)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__7362__7363 = coll;
      if(G__7362__7363) {
        if(function() {
          var or__3824__auto____7364 = G__7362__7363.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____7364) {
            return or__3824__auto____7364
          }else {
            return G__7362__7363.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__7362__7363.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7362__7363)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__7362__7363)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__7365 = this;
  return this__7365.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__7366__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__7366 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7366__delegate.call(this, x, y, more)
    };
    G__7366.cljs$lang$maxFixedArity = 2;
    G__7366.cljs$lang$applyTo = function(arglist__7367) {
      var x = cljs.core.first(arglist__7367);
      var y = cljs.core.first(cljs.core.next(arglist__7367));
      var more = cljs.core.rest(cljs.core.next(arglist__7367));
      return G__7366__delegate(x, y, more)
    };
    G__7366.cljs$lang$arity$variadic = G__7366__delegate;
    return G__7366
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__7368__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__7368 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7368__delegate.call(this, x, y, more)
    };
    G__7368.cljs$lang$maxFixedArity = 2;
    G__7368.cljs$lang$applyTo = function(arglist__7369) {
      var x = cljs.core.first(arglist__7369);
      var y = cljs.core.first(cljs.core.next(arglist__7369));
      var more = cljs.core.rest(cljs.core.next(arglist__7369));
      return G__7368__delegate(x, y, more)
    };
    G__7368.cljs$lang$arity$variadic = G__7368__delegate;
    return G__7368
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__7370__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__7370 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7370__delegate.call(this, x, y, more)
    };
    G__7370.cljs$lang$maxFixedArity = 2;
    G__7370.cljs$lang$applyTo = function(arglist__7371) {
      var x = cljs.core.first(arglist__7371);
      var y = cljs.core.first(cljs.core.next(arglist__7371));
      var more = cljs.core.rest(cljs.core.next(arglist__7371));
      return G__7370__delegate(x, y, more)
    };
    G__7370.cljs$lang$arity$variadic = G__7370__delegate;
    return G__7370
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__7372__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__7372 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7372__delegate.call(this, x, y, more)
    };
    G__7372.cljs$lang$maxFixedArity = 2;
    G__7372.cljs$lang$applyTo = function(arglist__7373) {
      var x = cljs.core.first(arglist__7373);
      var y = cljs.core.first(cljs.core.next(arglist__7373));
      var more = cljs.core.rest(cljs.core.next(arglist__7373));
      return G__7372__delegate(x, y, more)
    };
    G__7372.cljs$lang$arity$variadic = G__7372__delegate;
    return G__7372
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__7374__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__7375 = y;
            var G__7376 = cljs.core.first.call(null, more);
            var G__7377 = cljs.core.next.call(null, more);
            x = G__7375;
            y = G__7376;
            more = G__7377;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7374 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7374__delegate.call(this, x, y, more)
    };
    G__7374.cljs$lang$maxFixedArity = 2;
    G__7374.cljs$lang$applyTo = function(arglist__7378) {
      var x = cljs.core.first(arglist__7378);
      var y = cljs.core.first(cljs.core.next(arglist__7378));
      var more = cljs.core.rest(cljs.core.next(arglist__7378));
      return G__7374__delegate(x, y, more)
    };
    G__7374.cljs$lang$arity$variadic = G__7374__delegate;
    return G__7374
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__7379__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7380 = y;
            var G__7381 = cljs.core.first.call(null, more);
            var G__7382 = cljs.core.next.call(null, more);
            x = G__7380;
            y = G__7381;
            more = G__7382;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7379 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7379__delegate.call(this, x, y, more)
    };
    G__7379.cljs$lang$maxFixedArity = 2;
    G__7379.cljs$lang$applyTo = function(arglist__7383) {
      var x = cljs.core.first(arglist__7383);
      var y = cljs.core.first(cljs.core.next(arglist__7383));
      var more = cljs.core.rest(cljs.core.next(arglist__7383));
      return G__7379__delegate(x, y, more)
    };
    G__7379.cljs$lang$arity$variadic = G__7379__delegate;
    return G__7379
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__7384__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__7385 = y;
            var G__7386 = cljs.core.first.call(null, more);
            var G__7387 = cljs.core.next.call(null, more);
            x = G__7385;
            y = G__7386;
            more = G__7387;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7384 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7384__delegate.call(this, x, y, more)
    };
    G__7384.cljs$lang$maxFixedArity = 2;
    G__7384.cljs$lang$applyTo = function(arglist__7388) {
      var x = cljs.core.first(arglist__7388);
      var y = cljs.core.first(cljs.core.next(arglist__7388));
      var more = cljs.core.rest(cljs.core.next(arglist__7388));
      return G__7384__delegate(x, y, more)
    };
    G__7384.cljs$lang$arity$variadic = G__7384__delegate;
    return G__7384
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__7389__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__7390 = y;
            var G__7391 = cljs.core.first.call(null, more);
            var G__7392 = cljs.core.next.call(null, more);
            x = G__7390;
            y = G__7391;
            more = G__7392;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7389 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7389__delegate.call(this, x, y, more)
    };
    G__7389.cljs$lang$maxFixedArity = 2;
    G__7389.cljs$lang$applyTo = function(arglist__7393) {
      var x = cljs.core.first(arglist__7393);
      var y = cljs.core.first(cljs.core.next(arglist__7393));
      var more = cljs.core.rest(cljs.core.next(arglist__7393));
      return G__7389__delegate(x, y, more)
    };
    G__7389.cljs$lang$arity$variadic = G__7389__delegate;
    return G__7389
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__7394__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__7394 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7394__delegate.call(this, x, y, more)
    };
    G__7394.cljs$lang$maxFixedArity = 2;
    G__7394.cljs$lang$applyTo = function(arglist__7395) {
      var x = cljs.core.first(arglist__7395);
      var y = cljs.core.first(cljs.core.next(arglist__7395));
      var more = cljs.core.rest(cljs.core.next(arglist__7395));
      return G__7394__delegate(x, y, more)
    };
    G__7394.cljs$lang$arity$variadic = G__7394__delegate;
    return G__7394
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__7396__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__7396 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7396__delegate.call(this, x, y, more)
    };
    G__7396.cljs$lang$maxFixedArity = 2;
    G__7396.cljs$lang$applyTo = function(arglist__7397) {
      var x = cljs.core.first(arglist__7397);
      var y = cljs.core.first(cljs.core.next(arglist__7397));
      var more = cljs.core.rest(cljs.core.next(arglist__7397));
      return G__7396__delegate(x, y, more)
    };
    G__7396.cljs$lang$arity$variadic = G__7396__delegate;
    return G__7396
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__7399 = n % d;
  return cljs.core.fix.call(null, (n - rem__7399) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__7401 = cljs.core.quot.call(null, n, d);
  return n - d * q__7401
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__7404 = v - (v >> 1 & 1431655765);
  var v__7405 = (v__7404 & 858993459) + (v__7404 >> 2 & 858993459);
  return(v__7405 + (v__7405 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__7406__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7407 = y;
            var G__7408 = cljs.core.first.call(null, more);
            var G__7409 = cljs.core.next.call(null, more);
            x = G__7407;
            y = G__7408;
            more = G__7409;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7406 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7406__delegate.call(this, x, y, more)
    };
    G__7406.cljs$lang$maxFixedArity = 2;
    G__7406.cljs$lang$applyTo = function(arglist__7410) {
      var x = cljs.core.first(arglist__7410);
      var y = cljs.core.first(cljs.core.next(arglist__7410));
      var more = cljs.core.rest(cljs.core.next(arglist__7410));
      return G__7406__delegate(x, y, more)
    };
    G__7406.cljs$lang$arity$variadic = G__7406__delegate;
    return G__7406
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__7414 = n;
  var xs__7415 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7416 = xs__7415;
      if(and__3822__auto____7416) {
        return n__7414 > 0
      }else {
        return and__3822__auto____7416
      }
    }())) {
      var G__7417 = n__7414 - 1;
      var G__7418 = cljs.core.next.call(null, xs__7415);
      n__7414 = G__7417;
      xs__7415 = G__7418;
      continue
    }else {
      return xs__7415
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__7419__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7420 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__7421 = cljs.core.next.call(null, more);
            sb = G__7420;
            more = G__7421;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__7419 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7419__delegate.call(this, x, ys)
    };
    G__7419.cljs$lang$maxFixedArity = 1;
    G__7419.cljs$lang$applyTo = function(arglist__7422) {
      var x = cljs.core.first(arglist__7422);
      var ys = cljs.core.rest(arglist__7422);
      return G__7419__delegate(x, ys)
    };
    G__7419.cljs$lang$arity$variadic = G__7419__delegate;
    return G__7419
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__7423__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7424 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__7425 = cljs.core.next.call(null, more);
            sb = G__7424;
            more = G__7425;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__7423 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7423__delegate.call(this, x, ys)
    };
    G__7423.cljs$lang$maxFixedArity = 1;
    G__7423.cljs$lang$applyTo = function(arglist__7426) {
      var x = cljs.core.first(arglist__7426);
      var ys = cljs.core.rest(arglist__7426);
      return G__7423__delegate(x, ys)
    };
    G__7423.cljs$lang$arity$variadic = G__7423__delegate;
    return G__7423
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__7429 = cljs.core.seq.call(null, x);
    var ys__7430 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__7429 == null) {
        return ys__7430 == null
      }else {
        if(ys__7430 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__7429), cljs.core.first.call(null, ys__7430))) {
            var G__7431 = cljs.core.next.call(null, xs__7429);
            var G__7432 = cljs.core.next.call(null, ys__7430);
            xs__7429 = G__7431;
            ys__7430 = G__7432;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__7433_SHARP_, p2__7434_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__7433_SHARP_, cljs.core.hash.call(null, p2__7434_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
void 0;
void 0;
cljs.core.hash_imap = function hash_imap(m) {
  var h__7438 = 0;
  var s__7439 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__7439) {
      var e__7440 = cljs.core.first.call(null, s__7439);
      var G__7441 = (h__7438 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__7440)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__7440)))) % 4503599627370496;
      var G__7442 = cljs.core.next.call(null, s__7439);
      h__7438 = G__7441;
      s__7439 = G__7442;
      continue
    }else {
      return h__7438
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__7446 = 0;
  var s__7447 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__7447) {
      var e__7448 = cljs.core.first.call(null, s__7447);
      var G__7449 = (h__7446 + cljs.core.hash.call(null, e__7448)) % 4503599627370496;
      var G__7450 = cljs.core.next.call(null, s__7447);
      h__7446 = G__7449;
      s__7447 = G__7450;
      continue
    }else {
      return h__7446
    }
    break
  }
};
void 0;
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__7471__7472 = cljs.core.seq.call(null, fn_map);
  if(G__7471__7472) {
    var G__7474__7476 = cljs.core.first.call(null, G__7471__7472);
    var vec__7475__7477 = G__7474__7476;
    var key_name__7478 = cljs.core.nth.call(null, vec__7475__7477, 0, null);
    var f__7479 = cljs.core.nth.call(null, vec__7475__7477, 1, null);
    var G__7471__7480 = G__7471__7472;
    var G__7474__7481 = G__7474__7476;
    var G__7471__7482 = G__7471__7480;
    while(true) {
      var vec__7483__7484 = G__7474__7481;
      var key_name__7485 = cljs.core.nth.call(null, vec__7483__7484, 0, null);
      var f__7486 = cljs.core.nth.call(null, vec__7483__7484, 1, null);
      var G__7471__7487 = G__7471__7482;
      var str_name__7488 = cljs.core.name.call(null, key_name__7485);
      obj[str_name__7488] = f__7486;
      var temp__3974__auto____7489 = cljs.core.next.call(null, G__7471__7487);
      if(temp__3974__auto____7489) {
        var G__7471__7490 = temp__3974__auto____7489;
        var G__7491 = cljs.core.first.call(null, G__7471__7490);
        var G__7492 = G__7471__7490;
        G__7474__7481 = G__7491;
        G__7471__7482 = G__7492;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7493 = this;
  var h__2153__auto____7494 = this__7493.__hash;
  if(!(h__2153__auto____7494 == null)) {
    return h__2153__auto____7494
  }else {
    var h__2153__auto____7495 = cljs.core.hash_coll.call(null, coll);
    this__7493.__hash = h__2153__auto____7495;
    return h__2153__auto____7495
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7496 = this;
  if(this__7496.count === 1) {
    return null
  }else {
    return this__7496.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7497 = this;
  return new cljs.core.List(this__7497.meta, o, coll, this__7497.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__7498 = this;
  var this__7499 = this;
  return cljs.core.pr_str.call(null, this__7499)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7500 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7501 = this;
  return this__7501.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__7502 = this;
  return this__7502.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__7503 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7504 = this;
  return this__7504.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7505 = this;
  if(this__7505.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__7505.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7506 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7507 = this;
  return new cljs.core.List(meta, this__7507.first, this__7507.rest, this__7507.count, this__7507.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7508 = this;
  return this__7508.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7509 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7510 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7511 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7512 = this;
  return new cljs.core.List(this__7512.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__7513 = this;
  var this__7514 = this;
  return cljs.core.pr_str.call(null, this__7514)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7515 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7516 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__7517 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__7518 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7519 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7520 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7521 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7522 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7523 = this;
  return this__7523.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7524 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__7528__7529 = coll;
  if(G__7528__7529) {
    if(function() {
      var or__3824__auto____7530 = G__7528__7529.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____7530) {
        return or__3824__auto____7530
      }else {
        return G__7528__7529.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__7528__7529.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__7528__7529)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__7528__7529)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__7531__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__7531 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7531__delegate.call(this, x, y, z, items)
    };
    G__7531.cljs$lang$maxFixedArity = 3;
    G__7531.cljs$lang$applyTo = function(arglist__7532) {
      var x = cljs.core.first(arglist__7532);
      var y = cljs.core.first(cljs.core.next(arglist__7532));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7532)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7532)));
      return G__7531__delegate(x, y, z, items)
    };
    G__7531.cljs$lang$arity$variadic = G__7531__delegate;
    return G__7531
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7533 = this;
  var h__2153__auto____7534 = this__7533.__hash;
  if(!(h__2153__auto____7534 == null)) {
    return h__2153__auto____7534
  }else {
    var h__2153__auto____7535 = cljs.core.hash_coll.call(null, coll);
    this__7533.__hash = h__2153__auto____7535;
    return h__2153__auto____7535
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7536 = this;
  if(this__7536.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__7536.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7537 = this;
  return new cljs.core.Cons(null, o, coll, this__7537.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__7538 = this;
  var this__7539 = this;
  return cljs.core.pr_str.call(null, this__7539)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7540 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7541 = this;
  return this__7541.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7542 = this;
  if(this__7542.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__7542.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7543 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7544 = this;
  return new cljs.core.Cons(meta, this__7544.first, this__7544.rest, this__7544.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7545 = this;
  return this__7545.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7546 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__7546.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____7551 = coll == null;
    if(or__3824__auto____7551) {
      return or__3824__auto____7551
    }else {
      var G__7552__7553 = coll;
      if(G__7552__7553) {
        if(function() {
          var or__3824__auto____7554 = G__7552__7553.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____7554) {
            return or__3824__auto____7554
          }else {
            return G__7552__7553.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__7552__7553.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7552__7553)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__7552__7553)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__7558__7559 = x;
  if(G__7558__7559) {
    if(function() {
      var or__3824__auto____7560 = G__7558__7559.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____7560) {
        return or__3824__auto____7560
      }else {
        return G__7558__7559.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__7558__7559.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__7558__7559)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__7558__7559)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__7561 = null;
  var G__7561__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__7561__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__7561 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7561__2.call(this, string, f);
      case 3:
        return G__7561__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7561
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__7562 = null;
  var G__7562__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__7562__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__7562 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7562__2.call(this, string, k);
      case 3:
        return G__7562__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7562
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__7563 = null;
  var G__7563__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__7563__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__7563 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7563__2.call(this, string, n);
      case 3:
        return G__7563__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7563
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function(this_sym7566, coll) {
  var this__7567 = this;
  var this_sym7566__7568 = this;
  var ___7569 = this_sym7566__7568;
  if(coll == null) {
    return null
  }else {
    var strobj__7570 = coll.strobj;
    if(strobj__7570 == null) {
      return cljs.core._lookup.call(null, coll, this__7567.k, null)
    }else {
      return strobj__7570[this__7567.k]
    }
  }
};
cljs.core.Keyword.prototype.apply = function(this_sym7564, args7565) {
  var this__7571 = this;
  return this_sym7564.call.apply(this_sym7564, [this_sym7564].concat(args7565.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__7580 = null;
  var G__7580__2 = function(this_sym7574, coll) {
    var this_sym7574__7576 = this;
    var this__7577 = this_sym7574__7576;
    return cljs.core._lookup.call(null, coll, this__7577.toString(), null)
  };
  var G__7580__3 = function(this_sym7575, coll, not_found) {
    var this_sym7575__7578 = this;
    var this__7579 = this_sym7575__7578;
    return cljs.core._lookup.call(null, coll, this__7579.toString(), not_found)
  };
  G__7580 = function(this_sym7575, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7580__2.call(this, this_sym7575, coll);
      case 3:
        return G__7580__3.call(this, this_sym7575, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7580
}();
String.prototype.apply = function(this_sym7572, args7573) {
  return this_sym7572.call.apply(this_sym7572, [this_sym7572].concat(args7573.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__7582 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__7582
  }else {
    lazy_seq.x = x__7582.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7583 = this;
  var h__2153__auto____7584 = this__7583.__hash;
  if(!(h__2153__auto____7584 == null)) {
    return h__2153__auto____7584
  }else {
    var h__2153__auto____7585 = cljs.core.hash_coll.call(null, coll);
    this__7583.__hash = h__2153__auto____7585;
    return h__2153__auto____7585
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__7586 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7587 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__7588 = this;
  var this__7589 = this;
  return cljs.core.pr_str.call(null, this__7589)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7590 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7591 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7592 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7593 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7594 = this;
  return new cljs.core.LazySeq(meta, this__7594.realized, this__7594.x, this__7594.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7595 = this;
  return this__7595.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7596 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__7596.meta)
};
cljs.core.LazySeq;
void 0;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7597 = this;
  return this__7597.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__7598 = this;
  var ___7599 = this;
  this__7598.buf[this__7598.end] = o;
  return this__7598.end = this__7598.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__7600 = this;
  var ___7601 = this;
  var ret__7602 = new cljs.core.ArrayChunk(this__7600.buf, 0, this__7600.end);
  this__7600.buf = null;
  return ret__7602
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__7603 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__7603.arr[this__7603.off], this__7603.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__7604 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__7604.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__7605 = this;
  if(this__7605.off === this__7605.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__7605.arr, this__7605.off + 1, this__7605.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__7606 = this;
  return this__7606.arr[this__7606.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__7607 = this;
  if(function() {
    var and__3822__auto____7608 = i >= 0;
    if(and__3822__auto____7608) {
      return i < this__7607.end - this__7607.off
    }else {
      return and__3822__auto____7608
    }
  }()) {
    return this__7607.arr[this__7607.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7609 = this;
  return this__7609.end - this__7609.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__7610 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7611 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__7612 = this;
  return cljs.core._nth.call(null, this__7612.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__7613 = this;
  if(cljs.core._count.call(null, this__7613.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__7613.chunk), this__7613.more, this__7613.meta)
  }else {
    if(this__7613.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__7613.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__7614 = this;
  if(this__7614.more == null) {
    return null
  }else {
    return this__7614.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7615 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__7616 = this;
  return new cljs.core.ChunkedCons(this__7616.chunk, this__7616.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7617 = this;
  return this__7617.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__7618 = this;
  return this__7618.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__7619 = this;
  if(this__7619.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__7619.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__7623__7624 = s;
    if(G__7623__7624) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____7625 = null;
        if(cljs.core.truth_(or__3824__auto____7625)) {
          return or__3824__auto____7625
        }else {
          return G__7623__7624.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__7623__7624.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__7623__7624)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__7623__7624)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__7628 = [];
  var s__7629 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__7629)) {
      ary__7628.push(cljs.core.first.call(null, s__7629));
      var G__7630 = cljs.core.next.call(null, s__7629);
      s__7629 = G__7630;
      continue
    }else {
      return ary__7628
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__7634 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__7635 = 0;
  var xs__7636 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__7636) {
      ret__7634[i__7635] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__7636));
      var G__7637 = i__7635 + 1;
      var G__7638 = cljs.core.next.call(null, xs__7636);
      i__7635 = G__7637;
      xs__7636 = G__7638;
      continue
    }else {
    }
    break
  }
  return ret__7634
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__7646 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__7647 = cljs.core.seq.call(null, init_val_or_seq);
      var i__7648 = 0;
      var s__7649 = s__7647;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____7650 = s__7649;
          if(and__3822__auto____7650) {
            return i__7648 < size
          }else {
            return and__3822__auto____7650
          }
        }())) {
          a__7646[i__7648] = cljs.core.first.call(null, s__7649);
          var G__7653 = i__7648 + 1;
          var G__7654 = cljs.core.next.call(null, s__7649);
          i__7648 = G__7653;
          s__7649 = G__7654;
          continue
        }else {
          return a__7646
        }
        break
      }
    }else {
      var n__2492__auto____7651 = size;
      var i__7652 = 0;
      while(true) {
        if(i__7652 < n__2492__auto____7651) {
          a__7646[i__7652] = init_val_or_seq;
          var G__7655 = i__7652 + 1;
          i__7652 = G__7655;
          continue
        }else {
        }
        break
      }
      return a__7646
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__7663 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__7664 = cljs.core.seq.call(null, init_val_or_seq);
      var i__7665 = 0;
      var s__7666 = s__7664;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____7667 = s__7666;
          if(and__3822__auto____7667) {
            return i__7665 < size
          }else {
            return and__3822__auto____7667
          }
        }())) {
          a__7663[i__7665] = cljs.core.first.call(null, s__7666);
          var G__7670 = i__7665 + 1;
          var G__7671 = cljs.core.next.call(null, s__7666);
          i__7665 = G__7670;
          s__7666 = G__7671;
          continue
        }else {
          return a__7663
        }
        break
      }
    }else {
      var n__2492__auto____7668 = size;
      var i__7669 = 0;
      while(true) {
        if(i__7669 < n__2492__auto____7668) {
          a__7663[i__7669] = init_val_or_seq;
          var G__7672 = i__7669 + 1;
          i__7669 = G__7672;
          continue
        }else {
        }
        break
      }
      return a__7663
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__7680 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__7681 = cljs.core.seq.call(null, init_val_or_seq);
      var i__7682 = 0;
      var s__7683 = s__7681;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____7684 = s__7683;
          if(and__3822__auto____7684) {
            return i__7682 < size
          }else {
            return and__3822__auto____7684
          }
        }())) {
          a__7680[i__7682] = cljs.core.first.call(null, s__7683);
          var G__7687 = i__7682 + 1;
          var G__7688 = cljs.core.next.call(null, s__7683);
          i__7682 = G__7687;
          s__7683 = G__7688;
          continue
        }else {
          return a__7680
        }
        break
      }
    }else {
      var n__2492__auto____7685 = size;
      var i__7686 = 0;
      while(true) {
        if(i__7686 < n__2492__auto____7685) {
          a__7680[i__7686] = init_val_or_seq;
          var G__7689 = i__7686 + 1;
          i__7686 = G__7689;
          continue
        }else {
        }
        break
      }
      return a__7680
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__7694 = s;
    var i__7695 = n;
    var sum__7696 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____7697 = i__7695 > 0;
        if(and__3822__auto____7697) {
          return cljs.core.seq.call(null, s__7694)
        }else {
          return and__3822__auto____7697
        }
      }())) {
        var G__7698 = cljs.core.next.call(null, s__7694);
        var G__7699 = i__7695 - 1;
        var G__7700 = sum__7696 + 1;
        s__7694 = G__7698;
        i__7695 = G__7699;
        sum__7696 = G__7700;
        continue
      }else {
        return sum__7696
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__7705 = cljs.core.seq.call(null, x);
      if(s__7705) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__7705)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__7705), concat.call(null, cljs.core.chunk_rest.call(null, s__7705), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__7705), concat.call(null, cljs.core.rest.call(null, s__7705), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__7709__delegate = function(x, y, zs) {
      var cat__7708 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__7707 = cljs.core.seq.call(null, xys);
          if(xys__7707) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__7707)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__7707), cat.call(null, cljs.core.chunk_rest.call(null, xys__7707), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__7707), cat.call(null, cljs.core.rest.call(null, xys__7707), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__7708.call(null, concat.call(null, x, y), zs)
    };
    var G__7709 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7709__delegate.call(this, x, y, zs)
    };
    G__7709.cljs$lang$maxFixedArity = 2;
    G__7709.cljs$lang$applyTo = function(arglist__7710) {
      var x = cljs.core.first(arglist__7710);
      var y = cljs.core.first(cljs.core.next(arglist__7710));
      var zs = cljs.core.rest(cljs.core.next(arglist__7710));
      return G__7709__delegate(x, y, zs)
    };
    G__7709.cljs$lang$arity$variadic = G__7709__delegate;
    return G__7709
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__7711__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__7711 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__7711__delegate.call(this, a, b, c, d, more)
    };
    G__7711.cljs$lang$maxFixedArity = 4;
    G__7711.cljs$lang$applyTo = function(arglist__7712) {
      var a = cljs.core.first(arglist__7712);
      var b = cljs.core.first(cljs.core.next(arglist__7712));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7712)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7712))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7712))));
      return G__7711__delegate(a, b, c, d, more)
    };
    G__7711.cljs$lang$arity$variadic = G__7711__delegate;
    return G__7711
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
void 0;
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__7754 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__7755 = cljs.core._first.call(null, args__7754);
    var args__7756 = cljs.core._rest.call(null, args__7754);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__7755)
      }else {
        return f.call(null, a__7755)
      }
    }else {
      var b__7757 = cljs.core._first.call(null, args__7756);
      var args__7758 = cljs.core._rest.call(null, args__7756);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__7755, b__7757)
        }else {
          return f.call(null, a__7755, b__7757)
        }
      }else {
        var c__7759 = cljs.core._first.call(null, args__7758);
        var args__7760 = cljs.core._rest.call(null, args__7758);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__7755, b__7757, c__7759)
          }else {
            return f.call(null, a__7755, b__7757, c__7759)
          }
        }else {
          var d__7761 = cljs.core._first.call(null, args__7760);
          var args__7762 = cljs.core._rest.call(null, args__7760);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__7755, b__7757, c__7759, d__7761)
            }else {
              return f.call(null, a__7755, b__7757, c__7759, d__7761)
            }
          }else {
            var e__7763 = cljs.core._first.call(null, args__7762);
            var args__7764 = cljs.core._rest.call(null, args__7762);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__7755, b__7757, c__7759, d__7761, e__7763)
              }else {
                return f.call(null, a__7755, b__7757, c__7759, d__7761, e__7763)
              }
            }else {
              var f__7765 = cljs.core._first.call(null, args__7764);
              var args__7766 = cljs.core._rest.call(null, args__7764);
              if(argc === 6) {
                if(f__7765.cljs$lang$arity$6) {
                  return f__7765.cljs$lang$arity$6(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765)
                }else {
                  return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765)
                }
              }else {
                var g__7767 = cljs.core._first.call(null, args__7766);
                var args__7768 = cljs.core._rest.call(null, args__7766);
                if(argc === 7) {
                  if(f__7765.cljs$lang$arity$7) {
                    return f__7765.cljs$lang$arity$7(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767)
                  }else {
                    return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767)
                  }
                }else {
                  var h__7769 = cljs.core._first.call(null, args__7768);
                  var args__7770 = cljs.core._rest.call(null, args__7768);
                  if(argc === 8) {
                    if(f__7765.cljs$lang$arity$8) {
                      return f__7765.cljs$lang$arity$8(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769)
                    }else {
                      return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769)
                    }
                  }else {
                    var i__7771 = cljs.core._first.call(null, args__7770);
                    var args__7772 = cljs.core._rest.call(null, args__7770);
                    if(argc === 9) {
                      if(f__7765.cljs$lang$arity$9) {
                        return f__7765.cljs$lang$arity$9(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771)
                      }else {
                        return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771)
                      }
                    }else {
                      var j__7773 = cljs.core._first.call(null, args__7772);
                      var args__7774 = cljs.core._rest.call(null, args__7772);
                      if(argc === 10) {
                        if(f__7765.cljs$lang$arity$10) {
                          return f__7765.cljs$lang$arity$10(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773)
                        }else {
                          return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773)
                        }
                      }else {
                        var k__7775 = cljs.core._first.call(null, args__7774);
                        var args__7776 = cljs.core._rest.call(null, args__7774);
                        if(argc === 11) {
                          if(f__7765.cljs$lang$arity$11) {
                            return f__7765.cljs$lang$arity$11(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775)
                          }else {
                            return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775)
                          }
                        }else {
                          var l__7777 = cljs.core._first.call(null, args__7776);
                          var args__7778 = cljs.core._rest.call(null, args__7776);
                          if(argc === 12) {
                            if(f__7765.cljs$lang$arity$12) {
                              return f__7765.cljs$lang$arity$12(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777)
                            }else {
                              return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777)
                            }
                          }else {
                            var m__7779 = cljs.core._first.call(null, args__7778);
                            var args__7780 = cljs.core._rest.call(null, args__7778);
                            if(argc === 13) {
                              if(f__7765.cljs$lang$arity$13) {
                                return f__7765.cljs$lang$arity$13(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779)
                              }else {
                                return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779)
                              }
                            }else {
                              var n__7781 = cljs.core._first.call(null, args__7780);
                              var args__7782 = cljs.core._rest.call(null, args__7780);
                              if(argc === 14) {
                                if(f__7765.cljs$lang$arity$14) {
                                  return f__7765.cljs$lang$arity$14(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781)
                                }else {
                                  return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781)
                                }
                              }else {
                                var o__7783 = cljs.core._first.call(null, args__7782);
                                var args__7784 = cljs.core._rest.call(null, args__7782);
                                if(argc === 15) {
                                  if(f__7765.cljs$lang$arity$15) {
                                    return f__7765.cljs$lang$arity$15(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783)
                                  }else {
                                    return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783)
                                  }
                                }else {
                                  var p__7785 = cljs.core._first.call(null, args__7784);
                                  var args__7786 = cljs.core._rest.call(null, args__7784);
                                  if(argc === 16) {
                                    if(f__7765.cljs$lang$arity$16) {
                                      return f__7765.cljs$lang$arity$16(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785)
                                    }else {
                                      return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785)
                                    }
                                  }else {
                                    var q__7787 = cljs.core._first.call(null, args__7786);
                                    var args__7788 = cljs.core._rest.call(null, args__7786);
                                    if(argc === 17) {
                                      if(f__7765.cljs$lang$arity$17) {
                                        return f__7765.cljs$lang$arity$17(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785, q__7787)
                                      }else {
                                        return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785, q__7787)
                                      }
                                    }else {
                                      var r__7789 = cljs.core._first.call(null, args__7788);
                                      var args__7790 = cljs.core._rest.call(null, args__7788);
                                      if(argc === 18) {
                                        if(f__7765.cljs$lang$arity$18) {
                                          return f__7765.cljs$lang$arity$18(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785, q__7787, r__7789)
                                        }else {
                                          return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785, q__7787, r__7789)
                                        }
                                      }else {
                                        var s__7791 = cljs.core._first.call(null, args__7790);
                                        var args__7792 = cljs.core._rest.call(null, args__7790);
                                        if(argc === 19) {
                                          if(f__7765.cljs$lang$arity$19) {
                                            return f__7765.cljs$lang$arity$19(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785, q__7787, r__7789, s__7791)
                                          }else {
                                            return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785, q__7787, r__7789, s__7791)
                                          }
                                        }else {
                                          var t__7793 = cljs.core._first.call(null, args__7792);
                                          var args__7794 = cljs.core._rest.call(null, args__7792);
                                          if(argc === 20) {
                                            if(f__7765.cljs$lang$arity$20) {
                                              return f__7765.cljs$lang$arity$20(a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785, q__7787, r__7789, s__7791, t__7793)
                                            }else {
                                              return f__7765.call(null, a__7755, b__7757, c__7759, d__7761, e__7763, f__7765, g__7767, h__7769, i__7771, j__7773, k__7775, l__7777, m__7779, n__7781, o__7783, p__7785, q__7787, r__7789, s__7791, t__7793)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
void 0;
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__7809 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__7810 = cljs.core.bounded_count.call(null, args, fixed_arity__7809 + 1);
      if(bc__7810 <= fixed_arity__7809) {
        return cljs.core.apply_to.call(null, f, bc__7810, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__7811 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__7812 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__7813 = cljs.core.bounded_count.call(null, arglist__7811, fixed_arity__7812 + 1);
      if(bc__7813 <= fixed_arity__7812) {
        return cljs.core.apply_to.call(null, f, bc__7813, arglist__7811)
      }else {
        return f.cljs$lang$applyTo(arglist__7811)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__7811))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__7814 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__7815 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__7816 = cljs.core.bounded_count.call(null, arglist__7814, fixed_arity__7815 + 1);
      if(bc__7816 <= fixed_arity__7815) {
        return cljs.core.apply_to.call(null, f, bc__7816, arglist__7814)
      }else {
        return f.cljs$lang$applyTo(arglist__7814)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__7814))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__7817 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__7818 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__7819 = cljs.core.bounded_count.call(null, arglist__7817, fixed_arity__7818 + 1);
      if(bc__7819 <= fixed_arity__7818) {
        return cljs.core.apply_to.call(null, f, bc__7819, arglist__7817)
      }else {
        return f.cljs$lang$applyTo(arglist__7817)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__7817))
    }
  };
  var apply__6 = function() {
    var G__7823__delegate = function(f, a, b, c, d, args) {
      var arglist__7820 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__7821 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__7822 = cljs.core.bounded_count.call(null, arglist__7820, fixed_arity__7821 + 1);
        if(bc__7822 <= fixed_arity__7821) {
          return cljs.core.apply_to.call(null, f, bc__7822, arglist__7820)
        }else {
          return f.cljs$lang$applyTo(arglist__7820)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__7820))
      }
    };
    var G__7823 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__7823__delegate.call(this, f, a, b, c, d, args)
    };
    G__7823.cljs$lang$maxFixedArity = 5;
    G__7823.cljs$lang$applyTo = function(arglist__7824) {
      var f = cljs.core.first(arglist__7824);
      var a = cljs.core.first(cljs.core.next(arglist__7824));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7824)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7824))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7824)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7824)))));
      return G__7823__delegate(f, a, b, c, d, args)
    };
    G__7823.cljs$lang$arity$variadic = G__7823__delegate;
    return G__7823
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__7825) {
    var obj = cljs.core.first(arglist__7825);
    var f = cljs.core.first(cljs.core.next(arglist__7825));
    var args = cljs.core.rest(cljs.core.next(arglist__7825));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__7826__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__7826 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7826__delegate.call(this, x, y, more)
    };
    G__7826.cljs$lang$maxFixedArity = 2;
    G__7826.cljs$lang$applyTo = function(arglist__7827) {
      var x = cljs.core.first(arglist__7827);
      var y = cljs.core.first(cljs.core.next(arglist__7827));
      var more = cljs.core.rest(cljs.core.next(arglist__7827));
      return G__7826__delegate(x, y, more)
    };
    G__7826.cljs$lang$arity$variadic = G__7826__delegate;
    return G__7826
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__7828 = pred;
        var G__7829 = cljs.core.next.call(null, coll);
        pred = G__7828;
        coll = G__7829;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____7831 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____7831)) {
        return or__3824__auto____7831
      }else {
        var G__7832 = pred;
        var G__7833 = cljs.core.next.call(null, coll);
        pred = G__7832;
        coll = G__7833;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__7834 = null;
    var G__7834__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__7834__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__7834__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__7834__3 = function() {
      var G__7835__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__7835 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__7835__delegate.call(this, x, y, zs)
      };
      G__7835.cljs$lang$maxFixedArity = 2;
      G__7835.cljs$lang$applyTo = function(arglist__7836) {
        var x = cljs.core.first(arglist__7836);
        var y = cljs.core.first(cljs.core.next(arglist__7836));
        var zs = cljs.core.rest(cljs.core.next(arglist__7836));
        return G__7835__delegate(x, y, zs)
      };
      G__7835.cljs$lang$arity$variadic = G__7835__delegate;
      return G__7835
    }();
    G__7834 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7834__0.call(this);
        case 1:
          return G__7834__1.call(this, x);
        case 2:
          return G__7834__2.call(this, x, y);
        default:
          return G__7834__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__7834.cljs$lang$maxFixedArity = 2;
    G__7834.cljs$lang$applyTo = G__7834__3.cljs$lang$applyTo;
    return G__7834
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__7837__delegate = function(args) {
      return x
    };
    var G__7837 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7837__delegate.call(this, args)
    };
    G__7837.cljs$lang$maxFixedArity = 0;
    G__7837.cljs$lang$applyTo = function(arglist__7838) {
      var args = cljs.core.seq(arglist__7838);
      return G__7837__delegate(args)
    };
    G__7837.cljs$lang$arity$variadic = G__7837__delegate;
    return G__7837
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__7845 = null;
      var G__7845__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__7845__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__7845__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__7845__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__7845__4 = function() {
        var G__7846__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__7846 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__7846__delegate.call(this, x, y, z, args)
        };
        G__7846.cljs$lang$maxFixedArity = 3;
        G__7846.cljs$lang$applyTo = function(arglist__7847) {
          var x = cljs.core.first(arglist__7847);
          var y = cljs.core.first(cljs.core.next(arglist__7847));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7847)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7847)));
          return G__7846__delegate(x, y, z, args)
        };
        G__7846.cljs$lang$arity$variadic = G__7846__delegate;
        return G__7846
      }();
      G__7845 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7845__0.call(this);
          case 1:
            return G__7845__1.call(this, x);
          case 2:
            return G__7845__2.call(this, x, y);
          case 3:
            return G__7845__3.call(this, x, y, z);
          default:
            return G__7845__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__7845.cljs$lang$maxFixedArity = 3;
      G__7845.cljs$lang$applyTo = G__7845__4.cljs$lang$applyTo;
      return G__7845
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__7848 = null;
      var G__7848__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__7848__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__7848__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__7848__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__7848__4 = function() {
        var G__7849__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__7849 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__7849__delegate.call(this, x, y, z, args)
        };
        G__7849.cljs$lang$maxFixedArity = 3;
        G__7849.cljs$lang$applyTo = function(arglist__7850) {
          var x = cljs.core.first(arglist__7850);
          var y = cljs.core.first(cljs.core.next(arglist__7850));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7850)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7850)));
          return G__7849__delegate(x, y, z, args)
        };
        G__7849.cljs$lang$arity$variadic = G__7849__delegate;
        return G__7849
      }();
      G__7848 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7848__0.call(this);
          case 1:
            return G__7848__1.call(this, x);
          case 2:
            return G__7848__2.call(this, x, y);
          case 3:
            return G__7848__3.call(this, x, y, z);
          default:
            return G__7848__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__7848.cljs$lang$maxFixedArity = 3;
      G__7848.cljs$lang$applyTo = G__7848__4.cljs$lang$applyTo;
      return G__7848
    }()
  };
  var comp__4 = function() {
    var G__7851__delegate = function(f1, f2, f3, fs) {
      var fs__7842 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__7852__delegate = function(args) {
          var ret__7843 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__7842), args);
          var fs__7844 = cljs.core.next.call(null, fs__7842);
          while(true) {
            if(fs__7844) {
              var G__7853 = cljs.core.first.call(null, fs__7844).call(null, ret__7843);
              var G__7854 = cljs.core.next.call(null, fs__7844);
              ret__7843 = G__7853;
              fs__7844 = G__7854;
              continue
            }else {
              return ret__7843
            }
            break
          }
        };
        var G__7852 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__7852__delegate.call(this, args)
        };
        G__7852.cljs$lang$maxFixedArity = 0;
        G__7852.cljs$lang$applyTo = function(arglist__7855) {
          var args = cljs.core.seq(arglist__7855);
          return G__7852__delegate(args)
        };
        G__7852.cljs$lang$arity$variadic = G__7852__delegate;
        return G__7852
      }()
    };
    var G__7851 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7851__delegate.call(this, f1, f2, f3, fs)
    };
    G__7851.cljs$lang$maxFixedArity = 3;
    G__7851.cljs$lang$applyTo = function(arglist__7856) {
      var f1 = cljs.core.first(arglist__7856);
      var f2 = cljs.core.first(cljs.core.next(arglist__7856));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7856)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7856)));
      return G__7851__delegate(f1, f2, f3, fs)
    };
    G__7851.cljs$lang$arity$variadic = G__7851__delegate;
    return G__7851
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__7857__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__7857 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__7857__delegate.call(this, args)
      };
      G__7857.cljs$lang$maxFixedArity = 0;
      G__7857.cljs$lang$applyTo = function(arglist__7858) {
        var args = cljs.core.seq(arglist__7858);
        return G__7857__delegate(args)
      };
      G__7857.cljs$lang$arity$variadic = G__7857__delegate;
      return G__7857
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__7859__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__7859 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__7859__delegate.call(this, args)
      };
      G__7859.cljs$lang$maxFixedArity = 0;
      G__7859.cljs$lang$applyTo = function(arglist__7860) {
        var args = cljs.core.seq(arglist__7860);
        return G__7859__delegate(args)
      };
      G__7859.cljs$lang$arity$variadic = G__7859__delegate;
      return G__7859
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__7861__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__7861 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__7861__delegate.call(this, args)
      };
      G__7861.cljs$lang$maxFixedArity = 0;
      G__7861.cljs$lang$applyTo = function(arglist__7862) {
        var args = cljs.core.seq(arglist__7862);
        return G__7861__delegate(args)
      };
      G__7861.cljs$lang$arity$variadic = G__7861__delegate;
      return G__7861
    }()
  };
  var partial__5 = function() {
    var G__7863__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__7864__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__7864 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__7864__delegate.call(this, args)
        };
        G__7864.cljs$lang$maxFixedArity = 0;
        G__7864.cljs$lang$applyTo = function(arglist__7865) {
          var args = cljs.core.seq(arglist__7865);
          return G__7864__delegate(args)
        };
        G__7864.cljs$lang$arity$variadic = G__7864__delegate;
        return G__7864
      }()
    };
    var G__7863 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__7863__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__7863.cljs$lang$maxFixedArity = 4;
    G__7863.cljs$lang$applyTo = function(arglist__7866) {
      var f = cljs.core.first(arglist__7866);
      var arg1 = cljs.core.first(cljs.core.next(arglist__7866));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7866)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7866))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7866))));
      return G__7863__delegate(f, arg1, arg2, arg3, more)
    };
    G__7863.cljs$lang$arity$variadic = G__7863__delegate;
    return G__7863
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__7867 = null;
      var G__7867__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__7867__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__7867__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__7867__4 = function() {
        var G__7868__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__7868 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__7868__delegate.call(this, a, b, c, ds)
        };
        G__7868.cljs$lang$maxFixedArity = 3;
        G__7868.cljs$lang$applyTo = function(arglist__7869) {
          var a = cljs.core.first(arglist__7869);
          var b = cljs.core.first(cljs.core.next(arglist__7869));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7869)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7869)));
          return G__7868__delegate(a, b, c, ds)
        };
        G__7868.cljs$lang$arity$variadic = G__7868__delegate;
        return G__7868
      }();
      G__7867 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__7867__1.call(this, a);
          case 2:
            return G__7867__2.call(this, a, b);
          case 3:
            return G__7867__3.call(this, a, b, c);
          default:
            return G__7867__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__7867.cljs$lang$maxFixedArity = 3;
      G__7867.cljs$lang$applyTo = G__7867__4.cljs$lang$applyTo;
      return G__7867
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__7870 = null;
      var G__7870__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__7870__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__7870__4 = function() {
        var G__7871__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__7871 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__7871__delegate.call(this, a, b, c, ds)
        };
        G__7871.cljs$lang$maxFixedArity = 3;
        G__7871.cljs$lang$applyTo = function(arglist__7872) {
          var a = cljs.core.first(arglist__7872);
          var b = cljs.core.first(cljs.core.next(arglist__7872));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7872)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7872)));
          return G__7871__delegate(a, b, c, ds)
        };
        G__7871.cljs$lang$arity$variadic = G__7871__delegate;
        return G__7871
      }();
      G__7870 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7870__2.call(this, a, b);
          case 3:
            return G__7870__3.call(this, a, b, c);
          default:
            return G__7870__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__7870.cljs$lang$maxFixedArity = 3;
      G__7870.cljs$lang$applyTo = G__7870__4.cljs$lang$applyTo;
      return G__7870
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__7873 = null;
      var G__7873__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__7873__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__7873__4 = function() {
        var G__7874__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__7874 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__7874__delegate.call(this, a, b, c, ds)
        };
        G__7874.cljs$lang$maxFixedArity = 3;
        G__7874.cljs$lang$applyTo = function(arglist__7875) {
          var a = cljs.core.first(arglist__7875);
          var b = cljs.core.first(cljs.core.next(arglist__7875));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7875)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7875)));
          return G__7874__delegate(a, b, c, ds)
        };
        G__7874.cljs$lang$arity$variadic = G__7874__delegate;
        return G__7874
      }();
      G__7873 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7873__2.call(this, a, b);
          case 3:
            return G__7873__3.call(this, a, b, c);
          default:
            return G__7873__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__7873.cljs$lang$maxFixedArity = 3;
      G__7873.cljs$lang$applyTo = G__7873__4.cljs$lang$applyTo;
      return G__7873
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__7891 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____7899 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____7899) {
        var s__7900 = temp__3974__auto____7899;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__7900)) {
          var c__7901 = cljs.core.chunk_first.call(null, s__7900);
          var size__7902 = cljs.core.count.call(null, c__7901);
          var b__7903 = cljs.core.chunk_buffer.call(null, size__7902);
          var n__2492__auto____7904 = size__7902;
          var i__7905 = 0;
          while(true) {
            if(i__7905 < n__2492__auto____7904) {
              cljs.core.chunk_append.call(null, b__7903, f.call(null, idx + i__7905, cljs.core._nth.call(null, c__7901, i__7905)));
              var G__7906 = i__7905 + 1;
              i__7905 = G__7906;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7903), mapi.call(null, idx + size__7902, cljs.core.chunk_rest.call(null, s__7900)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__7900)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__7900)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__7891.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____7916 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____7916) {
      var s__7917 = temp__3974__auto____7916;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__7917)) {
        var c__7918 = cljs.core.chunk_first.call(null, s__7917);
        var size__7919 = cljs.core.count.call(null, c__7918);
        var b__7920 = cljs.core.chunk_buffer.call(null, size__7919);
        var n__2492__auto____7921 = size__7919;
        var i__7922 = 0;
        while(true) {
          if(i__7922 < n__2492__auto____7921) {
            var x__7923 = f.call(null, cljs.core._nth.call(null, c__7918, i__7922));
            if(x__7923 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__7920, x__7923)
            }
            var G__7925 = i__7922 + 1;
            i__7922 = G__7925;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7920), keep.call(null, f, cljs.core.chunk_rest.call(null, s__7917)))
      }else {
        var x__7924 = f.call(null, cljs.core.first.call(null, s__7917));
        if(x__7924 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__7917))
        }else {
          return cljs.core.cons.call(null, x__7924, keep.call(null, f, cljs.core.rest.call(null, s__7917)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__7951 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____7961 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____7961) {
        var s__7962 = temp__3974__auto____7961;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__7962)) {
          var c__7963 = cljs.core.chunk_first.call(null, s__7962);
          var size__7964 = cljs.core.count.call(null, c__7963);
          var b__7965 = cljs.core.chunk_buffer.call(null, size__7964);
          var n__2492__auto____7966 = size__7964;
          var i__7967 = 0;
          while(true) {
            if(i__7967 < n__2492__auto____7966) {
              var x__7968 = f.call(null, idx + i__7967, cljs.core._nth.call(null, c__7963, i__7967));
              if(x__7968 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__7965, x__7968)
              }
              var G__7970 = i__7967 + 1;
              i__7967 = G__7970;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7965), keepi.call(null, idx + size__7964, cljs.core.chunk_rest.call(null, s__7962)))
        }else {
          var x__7969 = f.call(null, idx, cljs.core.first.call(null, s__7962));
          if(x__7969 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__7962))
          }else {
            return cljs.core.cons.call(null, x__7969, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__7962)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__7951.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8056 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8056)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____8056
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8057 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8057)) {
            var and__3822__auto____8058 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8058)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____8058
            }
          }else {
            return and__3822__auto____8057
          }
        }())
      };
      var ep1__4 = function() {
        var G__8127__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8059 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8059)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____8059
            }
          }())
        };
        var G__8127 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8127__delegate.call(this, x, y, z, args)
        };
        G__8127.cljs$lang$maxFixedArity = 3;
        G__8127.cljs$lang$applyTo = function(arglist__8128) {
          var x = cljs.core.first(arglist__8128);
          var y = cljs.core.first(cljs.core.next(arglist__8128));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8128)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8128)));
          return G__8127__delegate(x, y, z, args)
        };
        G__8127.cljs$lang$arity$variadic = G__8127__delegate;
        return G__8127
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8071 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8071)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____8071
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8072 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8072)) {
            var and__3822__auto____8073 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8073)) {
              var and__3822__auto____8074 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8074)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____8074
              }
            }else {
              return and__3822__auto____8073
            }
          }else {
            return and__3822__auto____8072
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8075 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8075)) {
            var and__3822__auto____8076 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____8076)) {
              var and__3822__auto____8077 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____8077)) {
                var and__3822__auto____8078 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____8078)) {
                  var and__3822__auto____8079 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8079)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____8079
                  }
                }else {
                  return and__3822__auto____8078
                }
              }else {
                return and__3822__auto____8077
              }
            }else {
              return and__3822__auto____8076
            }
          }else {
            return and__3822__auto____8075
          }
        }())
      };
      var ep2__4 = function() {
        var G__8129__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8080 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8080)) {
              return cljs.core.every_QMARK_.call(null, function(p1__7926_SHARP_) {
                var and__3822__auto____8081 = p1.call(null, p1__7926_SHARP_);
                if(cljs.core.truth_(and__3822__auto____8081)) {
                  return p2.call(null, p1__7926_SHARP_)
                }else {
                  return and__3822__auto____8081
                }
              }, args)
            }else {
              return and__3822__auto____8080
            }
          }())
        };
        var G__8129 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8129__delegate.call(this, x, y, z, args)
        };
        G__8129.cljs$lang$maxFixedArity = 3;
        G__8129.cljs$lang$applyTo = function(arglist__8130) {
          var x = cljs.core.first(arglist__8130);
          var y = cljs.core.first(cljs.core.next(arglist__8130));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8130)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8130)));
          return G__8129__delegate(x, y, z, args)
        };
        G__8129.cljs$lang$arity$variadic = G__8129__delegate;
        return G__8129
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8100 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8100)) {
            var and__3822__auto____8101 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8101)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____8101
            }
          }else {
            return and__3822__auto____8100
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8102 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8102)) {
            var and__3822__auto____8103 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8103)) {
              var and__3822__auto____8104 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8104)) {
                var and__3822__auto____8105 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____8105)) {
                  var and__3822__auto____8106 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8106)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____8106
                  }
                }else {
                  return and__3822__auto____8105
                }
              }else {
                return and__3822__auto____8104
              }
            }else {
              return and__3822__auto____8103
            }
          }else {
            return and__3822__auto____8102
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____8107 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____8107)) {
            var and__3822__auto____8108 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8108)) {
              var and__3822__auto____8109 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____8109)) {
                var and__3822__auto____8110 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____8110)) {
                  var and__3822__auto____8111 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____8111)) {
                    var and__3822__auto____8112 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____8112)) {
                      var and__3822__auto____8113 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____8113)) {
                        var and__3822__auto____8114 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____8114)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____8114
                        }
                      }else {
                        return and__3822__auto____8113
                      }
                    }else {
                      return and__3822__auto____8112
                    }
                  }else {
                    return and__3822__auto____8111
                  }
                }else {
                  return and__3822__auto____8110
                }
              }else {
                return and__3822__auto____8109
              }
            }else {
              return and__3822__auto____8108
            }
          }else {
            return and__3822__auto____8107
          }
        }())
      };
      var ep3__4 = function() {
        var G__8131__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____8115 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____8115)) {
              return cljs.core.every_QMARK_.call(null, function(p1__7927_SHARP_) {
                var and__3822__auto____8116 = p1.call(null, p1__7927_SHARP_);
                if(cljs.core.truth_(and__3822__auto____8116)) {
                  var and__3822__auto____8117 = p2.call(null, p1__7927_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____8117)) {
                    return p3.call(null, p1__7927_SHARP_)
                  }else {
                    return and__3822__auto____8117
                  }
                }else {
                  return and__3822__auto____8116
                }
              }, args)
            }else {
              return and__3822__auto____8115
            }
          }())
        };
        var G__8131 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8131__delegate.call(this, x, y, z, args)
        };
        G__8131.cljs$lang$maxFixedArity = 3;
        G__8131.cljs$lang$applyTo = function(arglist__8132) {
          var x = cljs.core.first(arglist__8132);
          var y = cljs.core.first(cljs.core.next(arglist__8132));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8132)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8132)));
          return G__8131__delegate(x, y, z, args)
        };
        G__8131.cljs$lang$arity$variadic = G__8131__delegate;
        return G__8131
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__8133__delegate = function(p1, p2, p3, ps) {
      var ps__8118 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__7928_SHARP_) {
            return p1__7928_SHARP_.call(null, x)
          }, ps__8118)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__7929_SHARP_) {
            var and__3822__auto____8123 = p1__7929_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8123)) {
              return p1__7929_SHARP_.call(null, y)
            }else {
              return and__3822__auto____8123
            }
          }, ps__8118)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__7930_SHARP_) {
            var and__3822__auto____8124 = p1__7930_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____8124)) {
              var and__3822__auto____8125 = p1__7930_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____8125)) {
                return p1__7930_SHARP_.call(null, z)
              }else {
                return and__3822__auto____8125
              }
            }else {
              return and__3822__auto____8124
            }
          }, ps__8118)
        };
        var epn__4 = function() {
          var G__8134__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____8126 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____8126)) {
                return cljs.core.every_QMARK_.call(null, function(p1__7931_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__7931_SHARP_, args)
                }, ps__8118)
              }else {
                return and__3822__auto____8126
              }
            }())
          };
          var G__8134 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8134__delegate.call(this, x, y, z, args)
          };
          G__8134.cljs$lang$maxFixedArity = 3;
          G__8134.cljs$lang$applyTo = function(arglist__8135) {
            var x = cljs.core.first(arglist__8135);
            var y = cljs.core.first(cljs.core.next(arglist__8135));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8135)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8135)));
            return G__8134__delegate(x, y, z, args)
          };
          G__8134.cljs$lang$arity$variadic = G__8134__delegate;
          return G__8134
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__8133 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8133__delegate.call(this, p1, p2, p3, ps)
    };
    G__8133.cljs$lang$maxFixedArity = 3;
    G__8133.cljs$lang$applyTo = function(arglist__8136) {
      var p1 = cljs.core.first(arglist__8136);
      var p2 = cljs.core.first(cljs.core.next(arglist__8136));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8136)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8136)));
      return G__8133__delegate(p1, p2, p3, ps)
    };
    G__8133.cljs$lang$arity$variadic = G__8133__delegate;
    return G__8133
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____8217 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8217)) {
          return or__3824__auto____8217
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____8218 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8218)) {
          return or__3824__auto____8218
        }else {
          var or__3824__auto____8219 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8219)) {
            return or__3824__auto____8219
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__8288__delegate = function(x, y, z, args) {
          var or__3824__auto____8220 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8220)) {
            return or__3824__auto____8220
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__8288 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8288__delegate.call(this, x, y, z, args)
        };
        G__8288.cljs$lang$maxFixedArity = 3;
        G__8288.cljs$lang$applyTo = function(arglist__8289) {
          var x = cljs.core.first(arglist__8289);
          var y = cljs.core.first(cljs.core.next(arglist__8289));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8289)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8289)));
          return G__8288__delegate(x, y, z, args)
        };
        G__8288.cljs$lang$arity$variadic = G__8288__delegate;
        return G__8288
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____8232 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8232)) {
          return or__3824__auto____8232
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____8233 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8233)) {
          return or__3824__auto____8233
        }else {
          var or__3824__auto____8234 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8234)) {
            return or__3824__auto____8234
          }else {
            var or__3824__auto____8235 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8235)) {
              return or__3824__auto____8235
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____8236 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8236)) {
          return or__3824__auto____8236
        }else {
          var or__3824__auto____8237 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____8237)) {
            return or__3824__auto____8237
          }else {
            var or__3824__auto____8238 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____8238)) {
              return or__3824__auto____8238
            }else {
              var or__3824__auto____8239 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____8239)) {
                return or__3824__auto____8239
              }else {
                var or__3824__auto____8240 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8240)) {
                  return or__3824__auto____8240
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__8290__delegate = function(x, y, z, args) {
          var or__3824__auto____8241 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8241)) {
            return or__3824__auto____8241
          }else {
            return cljs.core.some.call(null, function(p1__7971_SHARP_) {
              var or__3824__auto____8242 = p1.call(null, p1__7971_SHARP_);
              if(cljs.core.truth_(or__3824__auto____8242)) {
                return or__3824__auto____8242
              }else {
                return p2.call(null, p1__7971_SHARP_)
              }
            }, args)
          }
        };
        var G__8290 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8290__delegate.call(this, x, y, z, args)
        };
        G__8290.cljs$lang$maxFixedArity = 3;
        G__8290.cljs$lang$applyTo = function(arglist__8291) {
          var x = cljs.core.first(arglist__8291);
          var y = cljs.core.first(cljs.core.next(arglist__8291));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8291)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8291)));
          return G__8290__delegate(x, y, z, args)
        };
        G__8290.cljs$lang$arity$variadic = G__8290__delegate;
        return G__8290
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____8261 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8261)) {
          return or__3824__auto____8261
        }else {
          var or__3824__auto____8262 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8262)) {
            return or__3824__auto____8262
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____8263 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8263)) {
          return or__3824__auto____8263
        }else {
          var or__3824__auto____8264 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8264)) {
            return or__3824__auto____8264
          }else {
            var or__3824__auto____8265 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8265)) {
              return or__3824__auto____8265
            }else {
              var or__3824__auto____8266 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8266)) {
                return or__3824__auto____8266
              }else {
                var or__3824__auto____8267 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8267)) {
                  return or__3824__auto____8267
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____8268 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____8268)) {
          return or__3824__auto____8268
        }else {
          var or__3824__auto____8269 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____8269)) {
            return or__3824__auto____8269
          }else {
            var or__3824__auto____8270 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8270)) {
              return or__3824__auto____8270
            }else {
              var or__3824__auto____8271 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8271)) {
                return or__3824__auto____8271
              }else {
                var or__3824__auto____8272 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____8272)) {
                  return or__3824__auto____8272
                }else {
                  var or__3824__auto____8273 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____8273)) {
                    return or__3824__auto____8273
                  }else {
                    var or__3824__auto____8274 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____8274)) {
                      return or__3824__auto____8274
                    }else {
                      var or__3824__auto____8275 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____8275)) {
                        return or__3824__auto____8275
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__8292__delegate = function(x, y, z, args) {
          var or__3824__auto____8276 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____8276)) {
            return or__3824__auto____8276
          }else {
            return cljs.core.some.call(null, function(p1__7972_SHARP_) {
              var or__3824__auto____8277 = p1.call(null, p1__7972_SHARP_);
              if(cljs.core.truth_(or__3824__auto____8277)) {
                return or__3824__auto____8277
              }else {
                var or__3824__auto____8278 = p2.call(null, p1__7972_SHARP_);
                if(cljs.core.truth_(or__3824__auto____8278)) {
                  return or__3824__auto____8278
                }else {
                  return p3.call(null, p1__7972_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__8292 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8292__delegate.call(this, x, y, z, args)
        };
        G__8292.cljs$lang$maxFixedArity = 3;
        G__8292.cljs$lang$applyTo = function(arglist__8293) {
          var x = cljs.core.first(arglist__8293);
          var y = cljs.core.first(cljs.core.next(arglist__8293));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8293)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8293)));
          return G__8292__delegate(x, y, z, args)
        };
        G__8292.cljs$lang$arity$variadic = G__8292__delegate;
        return G__8292
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__8294__delegate = function(p1, p2, p3, ps) {
      var ps__8279 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__7973_SHARP_) {
            return p1__7973_SHARP_.call(null, x)
          }, ps__8279)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__7974_SHARP_) {
            var or__3824__auto____8284 = p1__7974_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8284)) {
              return or__3824__auto____8284
            }else {
              return p1__7974_SHARP_.call(null, y)
            }
          }, ps__8279)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__7975_SHARP_) {
            var or__3824__auto____8285 = p1__7975_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____8285)) {
              return or__3824__auto____8285
            }else {
              var or__3824__auto____8286 = p1__7975_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____8286)) {
                return or__3824__auto____8286
              }else {
                return p1__7975_SHARP_.call(null, z)
              }
            }
          }, ps__8279)
        };
        var spn__4 = function() {
          var G__8295__delegate = function(x, y, z, args) {
            var or__3824__auto____8287 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____8287)) {
              return or__3824__auto____8287
            }else {
              return cljs.core.some.call(null, function(p1__7976_SHARP_) {
                return cljs.core.some.call(null, p1__7976_SHARP_, args)
              }, ps__8279)
            }
          };
          var G__8295 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__8295__delegate.call(this, x, y, z, args)
          };
          G__8295.cljs$lang$maxFixedArity = 3;
          G__8295.cljs$lang$applyTo = function(arglist__8296) {
            var x = cljs.core.first(arglist__8296);
            var y = cljs.core.first(cljs.core.next(arglist__8296));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8296)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8296)));
            return G__8295__delegate(x, y, z, args)
          };
          G__8295.cljs$lang$arity$variadic = G__8295__delegate;
          return G__8295
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__8294 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8294__delegate.call(this, p1, p2, p3, ps)
    };
    G__8294.cljs$lang$maxFixedArity = 3;
    G__8294.cljs$lang$applyTo = function(arglist__8297) {
      var p1 = cljs.core.first(arglist__8297);
      var p2 = cljs.core.first(cljs.core.next(arglist__8297));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8297)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8297)));
      return G__8294__delegate(p1, p2, p3, ps)
    };
    G__8294.cljs$lang$arity$variadic = G__8294__delegate;
    return G__8294
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8316 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8316) {
        var s__8317 = temp__3974__auto____8316;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8317)) {
          var c__8318 = cljs.core.chunk_first.call(null, s__8317);
          var size__8319 = cljs.core.count.call(null, c__8318);
          var b__8320 = cljs.core.chunk_buffer.call(null, size__8319);
          var n__2492__auto____8321 = size__8319;
          var i__8322 = 0;
          while(true) {
            if(i__8322 < n__2492__auto____8321) {
              cljs.core.chunk_append.call(null, b__8320, f.call(null, cljs.core._nth.call(null, c__8318, i__8322)));
              var G__8334 = i__8322 + 1;
              i__8322 = G__8334;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8320), map.call(null, f, cljs.core.chunk_rest.call(null, s__8317)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__8317)), map.call(null, f, cljs.core.rest.call(null, s__8317)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8323 = cljs.core.seq.call(null, c1);
      var s2__8324 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____8325 = s1__8323;
        if(and__3822__auto____8325) {
          return s2__8324
        }else {
          return and__3822__auto____8325
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8323), cljs.core.first.call(null, s2__8324)), map.call(null, f, cljs.core.rest.call(null, s1__8323), cljs.core.rest.call(null, s2__8324)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8326 = cljs.core.seq.call(null, c1);
      var s2__8327 = cljs.core.seq.call(null, c2);
      var s3__8328 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____8329 = s1__8326;
        if(and__3822__auto____8329) {
          var and__3822__auto____8330 = s2__8327;
          if(and__3822__auto____8330) {
            return s3__8328
          }else {
            return and__3822__auto____8330
          }
        }else {
          return and__3822__auto____8329
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__8326), cljs.core.first.call(null, s2__8327), cljs.core.first.call(null, s3__8328)), map.call(null, f, cljs.core.rest.call(null, s1__8326), cljs.core.rest.call(null, s2__8327), cljs.core.rest.call(null, s3__8328)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__8335__delegate = function(f, c1, c2, c3, colls) {
      var step__8333 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__8332 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8332)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__8332), step.call(null, map.call(null, cljs.core.rest, ss__8332)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__8137_SHARP_) {
        return cljs.core.apply.call(null, f, p1__8137_SHARP_)
      }, step__8333.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__8335 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8335__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8335.cljs$lang$maxFixedArity = 4;
    G__8335.cljs$lang$applyTo = function(arglist__8336) {
      var f = cljs.core.first(arglist__8336);
      var c1 = cljs.core.first(cljs.core.next(arglist__8336));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8336)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8336))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8336))));
      return G__8335__delegate(f, c1, c2, c3, colls)
    };
    G__8335.cljs$lang$arity$variadic = G__8335__delegate;
    return G__8335
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____8339 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8339) {
        var s__8340 = temp__3974__auto____8339;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__8340), take.call(null, n - 1, cljs.core.rest.call(null, s__8340)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__8346 = function(n, coll) {
    while(true) {
      var s__8344 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____8345 = n > 0;
        if(and__3822__auto____8345) {
          return s__8344
        }else {
          return and__3822__auto____8345
        }
      }())) {
        var G__8347 = n - 1;
        var G__8348 = cljs.core.rest.call(null, s__8344);
        n = G__8347;
        coll = G__8348;
        continue
      }else {
        return s__8344
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8346.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__8351 = cljs.core.seq.call(null, coll);
  var lead__8352 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__8352) {
      var G__8353 = cljs.core.next.call(null, s__8351);
      var G__8354 = cljs.core.next.call(null, lead__8352);
      s__8351 = G__8353;
      lead__8352 = G__8354;
      continue
    }else {
      return s__8351
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__8360 = function(pred, coll) {
    while(true) {
      var s__8358 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____8359 = s__8358;
        if(and__3822__auto____8359) {
          return pred.call(null, cljs.core.first.call(null, s__8358))
        }else {
          return and__3822__auto____8359
        }
      }())) {
        var G__8361 = pred;
        var G__8362 = cljs.core.rest.call(null, s__8358);
        pred = G__8361;
        coll = G__8362;
        continue
      }else {
        return s__8358
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__8360.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8365 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8365) {
      var s__8366 = temp__3974__auto____8365;
      return cljs.core.concat.call(null, s__8366, cycle.call(null, s__8366))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__8371 = cljs.core.seq.call(null, c1);
      var s2__8372 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____8373 = s1__8371;
        if(and__3822__auto____8373) {
          return s2__8372
        }else {
          return and__3822__auto____8373
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__8371), cljs.core.cons.call(null, cljs.core.first.call(null, s2__8372), interleave.call(null, cljs.core.rest.call(null, s1__8371), cljs.core.rest.call(null, s2__8372))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__8375__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__8374 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__8374)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__8374), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__8374)))
        }else {
          return null
        }
      }, null)
    };
    var G__8375 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8375__delegate.call(this, c1, c2, colls)
    };
    G__8375.cljs$lang$maxFixedArity = 2;
    G__8375.cljs$lang$applyTo = function(arglist__8376) {
      var c1 = cljs.core.first(arglist__8376);
      var c2 = cljs.core.first(cljs.core.next(arglist__8376));
      var colls = cljs.core.rest(cljs.core.next(arglist__8376));
      return G__8375__delegate(c1, c2, colls)
    };
    G__8375.cljs$lang$arity$variadic = G__8375__delegate;
    return G__8375
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__8386 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____8384 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____8384) {
        var coll__8385 = temp__3971__auto____8384;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__8385), cat.call(null, cljs.core.rest.call(null, coll__8385), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__8386.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__8387__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__8387 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8387__delegate.call(this, f, coll, colls)
    };
    G__8387.cljs$lang$maxFixedArity = 2;
    G__8387.cljs$lang$applyTo = function(arglist__8388) {
      var f = cljs.core.first(arglist__8388);
      var coll = cljs.core.first(cljs.core.next(arglist__8388));
      var colls = cljs.core.rest(cljs.core.next(arglist__8388));
      return G__8387__delegate(f, coll, colls)
    };
    G__8387.cljs$lang$arity$variadic = G__8387__delegate;
    return G__8387
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8398 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8398) {
      var s__8399 = temp__3974__auto____8398;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8399)) {
        var c__8400 = cljs.core.chunk_first.call(null, s__8399);
        var size__8401 = cljs.core.count.call(null, c__8400);
        var b__8402 = cljs.core.chunk_buffer.call(null, size__8401);
        var n__2492__auto____8403 = size__8401;
        var i__8404 = 0;
        while(true) {
          if(i__8404 < n__2492__auto____8403) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__8400, i__8404)))) {
              cljs.core.chunk_append.call(null, b__8402, cljs.core._nth.call(null, c__8400, i__8404))
            }else {
            }
            var G__8407 = i__8404 + 1;
            i__8404 = G__8407;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8402), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__8399)))
      }else {
        var f__8405 = cljs.core.first.call(null, s__8399);
        var r__8406 = cljs.core.rest.call(null, s__8399);
        if(cljs.core.truth_(pred.call(null, f__8405))) {
          return cljs.core.cons.call(null, f__8405, filter.call(null, pred, r__8406))
        }else {
          return filter.call(null, pred, r__8406)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__8410 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__8410.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__8408_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__8408_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__8414__8415 = to;
    if(G__8414__8415) {
      if(function() {
        var or__3824__auto____8416 = G__8414__8415.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____8416) {
          return or__3824__auto____8416
        }else {
          return G__8414__8415.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__8414__8415.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8414__8415)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__8414__8415)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__8417__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__8417 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8417__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__8417.cljs$lang$maxFixedArity = 4;
    G__8417.cljs$lang$applyTo = function(arglist__8418) {
      var f = cljs.core.first(arglist__8418);
      var c1 = cljs.core.first(cljs.core.next(arglist__8418));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8418)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8418))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8418))));
      return G__8417__delegate(f, c1, c2, c3, colls)
    };
    G__8417.cljs$lang$arity$variadic = G__8417__delegate;
    return G__8417
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8425 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8425) {
        var s__8426 = temp__3974__auto____8425;
        var p__8427 = cljs.core.take.call(null, n, s__8426);
        if(n === cljs.core.count.call(null, p__8427)) {
          return cljs.core.cons.call(null, p__8427, partition.call(null, n, step, cljs.core.drop.call(null, step, s__8426)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8428 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8428) {
        var s__8429 = temp__3974__auto____8428;
        var p__8430 = cljs.core.take.call(null, n, s__8429);
        if(n === cljs.core.count.call(null, p__8430)) {
          return cljs.core.cons.call(null, p__8430, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__8429)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__8430, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__8435 = cljs.core.lookup_sentinel;
    var m__8436 = m;
    var ks__8437 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__8437) {
        var m__8438 = cljs.core._lookup.call(null, m__8436, cljs.core.first.call(null, ks__8437), sentinel__8435);
        if(sentinel__8435 === m__8438) {
          return not_found
        }else {
          var G__8439 = sentinel__8435;
          var G__8440 = m__8438;
          var G__8441 = cljs.core.next.call(null, ks__8437);
          sentinel__8435 = G__8439;
          m__8436 = G__8440;
          ks__8437 = G__8441;
          continue
        }
      }else {
        return m__8436
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__8442, v) {
  var vec__8447__8448 = p__8442;
  var k__8449 = cljs.core.nth.call(null, vec__8447__8448, 0, null);
  var ks__8450 = cljs.core.nthnext.call(null, vec__8447__8448, 1);
  if(cljs.core.truth_(ks__8450)) {
    return cljs.core.assoc.call(null, m, k__8449, assoc_in.call(null, cljs.core._lookup.call(null, m, k__8449, null), ks__8450, v))
  }else {
    return cljs.core.assoc.call(null, m, k__8449, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__8451, f, args) {
    var vec__8456__8457 = p__8451;
    var k__8458 = cljs.core.nth.call(null, vec__8456__8457, 0, null);
    var ks__8459 = cljs.core.nthnext.call(null, vec__8456__8457, 1);
    if(cljs.core.truth_(ks__8459)) {
      return cljs.core.assoc.call(null, m, k__8458, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__8458, null), ks__8459, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__8458, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__8458, null), args))
    }
  };
  var update_in = function(m, p__8451, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__8451, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__8460) {
    var m = cljs.core.first(arglist__8460);
    var p__8451 = cljs.core.first(cljs.core.next(arglist__8460));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8460)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8460)));
    return update_in__delegate(m, p__8451, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8463 = this;
  var h__2153__auto____8464 = this__8463.__hash;
  if(!(h__2153__auto____8464 == null)) {
    return h__2153__auto____8464
  }else {
    var h__2153__auto____8465 = cljs.core.hash_coll.call(null, coll);
    this__8463.__hash = h__2153__auto____8465;
    return h__2153__auto____8465
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8466 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8467 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__8468 = this;
  var new_array__8469 = this__8468.array.slice();
  new_array__8469[k] = v;
  return new cljs.core.Vector(this__8468.meta, new_array__8469, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__8500 = null;
  var G__8500__2 = function(this_sym8470, k) {
    var this__8472 = this;
    var this_sym8470__8473 = this;
    var coll__8474 = this_sym8470__8473;
    return coll__8474.cljs$core$ILookup$_lookup$arity$2(coll__8474, k)
  };
  var G__8500__3 = function(this_sym8471, k, not_found) {
    var this__8472 = this;
    var this_sym8471__8475 = this;
    var coll__8476 = this_sym8471__8475;
    return coll__8476.cljs$core$ILookup$_lookup$arity$3(coll__8476, k, not_found)
  };
  G__8500 = function(this_sym8471, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8500__2.call(this, this_sym8471, k);
      case 3:
        return G__8500__3.call(this, this_sym8471, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8500
}();
cljs.core.Vector.prototype.apply = function(this_sym8461, args8462) {
  var this__8477 = this;
  return this_sym8461.call.apply(this_sym8461, [this_sym8461].concat(args8462.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8478 = this;
  var new_array__8479 = this__8478.array.slice();
  new_array__8479.push(o);
  return new cljs.core.Vector(this__8478.meta, new_array__8479, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__8480 = this;
  var this__8481 = this;
  return cljs.core.pr_str.call(null, this__8481)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__8482 = this;
  return cljs.core.ci_reduce.call(null, this__8482.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__8483 = this;
  return cljs.core.ci_reduce.call(null, this__8483.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8484 = this;
  if(this__8484.array.length > 0) {
    var vector_seq__8485 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__8484.array.length) {
          return cljs.core.cons.call(null, this__8484.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__8485.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8486 = this;
  return this__8486.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8487 = this;
  var count__8488 = this__8487.array.length;
  if(count__8488 > 0) {
    return this__8487.array[count__8488 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8489 = this;
  if(this__8489.array.length > 0) {
    var new_array__8490 = this__8489.array.slice();
    new_array__8490.pop();
    return new cljs.core.Vector(this__8489.meta, new_array__8490, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__8491 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8492 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8493 = this;
  return new cljs.core.Vector(meta, this__8493.array, this__8493.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8494 = this;
  return this__8494.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8495 = this;
  if(function() {
    var and__3822__auto____8496 = 0 <= n;
    if(and__3822__auto____8496) {
      return n < this__8495.array.length
    }else {
      return and__3822__auto____8496
    }
  }()) {
    return this__8495.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8497 = this;
  if(function() {
    var and__3822__auto____8498 = 0 <= n;
    if(and__3822__auto____8498) {
      return n < this__8497.array.length
    }else {
      return and__3822__auto____8498
    }
  }()) {
    return this__8497.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8499 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__8499.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2271__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__8502 = pv.cnt;
  if(cnt__8502 < 32) {
    return 0
  }else {
    return cnt__8502 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__8508 = level;
  var ret__8509 = node;
  while(true) {
    if(ll__8508 === 0) {
      return ret__8509
    }else {
      var embed__8510 = ret__8509;
      var r__8511 = cljs.core.pv_fresh_node.call(null, edit);
      var ___8512 = cljs.core.pv_aset.call(null, r__8511, 0, embed__8510);
      var G__8513 = ll__8508 - 5;
      var G__8514 = r__8511;
      ll__8508 = G__8513;
      ret__8509 = G__8514;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__8520 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__8521 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__8520, subidx__8521, tailnode);
    return ret__8520
  }else {
    var child__8522 = cljs.core.pv_aget.call(null, parent, subidx__8521);
    if(!(child__8522 == null)) {
      var node_to_insert__8523 = push_tail.call(null, pv, level - 5, child__8522, tailnode);
      cljs.core.pv_aset.call(null, ret__8520, subidx__8521, node_to_insert__8523);
      return ret__8520
    }else {
      var node_to_insert__8524 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__8520, subidx__8521, node_to_insert__8524);
      return ret__8520
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____8528 = 0 <= i;
    if(and__3822__auto____8528) {
      return i < pv.cnt
    }else {
      return and__3822__auto____8528
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__8529 = pv.root;
      var level__8530 = pv.shift;
      while(true) {
        if(level__8530 > 0) {
          var G__8531 = cljs.core.pv_aget.call(null, node__8529, i >>> level__8530 & 31);
          var G__8532 = level__8530 - 5;
          node__8529 = G__8531;
          level__8530 = G__8532;
          continue
        }else {
          return node__8529.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__8535 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__8535, i & 31, val);
    return ret__8535
  }else {
    var subidx__8536 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__8535, subidx__8536, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__8536), i, val));
    return ret__8535
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__8542 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__8543 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__8542));
    if(function() {
      var and__3822__auto____8544 = new_child__8543 == null;
      if(and__3822__auto____8544) {
        return subidx__8542 === 0
      }else {
        return and__3822__auto____8544
      }
    }()) {
      return null
    }else {
      var ret__8545 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__8545, subidx__8542, new_child__8543);
      return ret__8545
    }
  }else {
    if(subidx__8542 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__8546 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__8546, subidx__8542, null);
        return ret__8546
      }else {
        return null
      }
    }
  }
};
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__8549 = this;
  return new cljs.core.TransientVector(this__8549.cnt, this__8549.shift, cljs.core.tv_editable_root.call(null, this__8549.root), cljs.core.tv_editable_tail.call(null, this__8549.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8550 = this;
  var h__2153__auto____8551 = this__8550.__hash;
  if(!(h__2153__auto____8551 == null)) {
    return h__2153__auto____8551
  }else {
    var h__2153__auto____8552 = cljs.core.hash_coll.call(null, coll);
    this__8550.__hash = h__2153__auto____8552;
    return h__2153__auto____8552
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8553 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8554 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__8555 = this;
  if(function() {
    var and__3822__auto____8556 = 0 <= k;
    if(and__3822__auto____8556) {
      return k < this__8555.cnt
    }else {
      return and__3822__auto____8556
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__8557 = this__8555.tail.slice();
      new_tail__8557[k & 31] = v;
      return new cljs.core.PersistentVector(this__8555.meta, this__8555.cnt, this__8555.shift, this__8555.root, new_tail__8557, null)
    }else {
      return new cljs.core.PersistentVector(this__8555.meta, this__8555.cnt, this__8555.shift, cljs.core.do_assoc.call(null, coll, this__8555.shift, this__8555.root, k, v), this__8555.tail, null)
    }
  }else {
    if(k === this__8555.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__8555.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__8605 = null;
  var G__8605__2 = function(this_sym8558, k) {
    var this__8560 = this;
    var this_sym8558__8561 = this;
    var coll__8562 = this_sym8558__8561;
    return coll__8562.cljs$core$ILookup$_lookup$arity$2(coll__8562, k)
  };
  var G__8605__3 = function(this_sym8559, k, not_found) {
    var this__8560 = this;
    var this_sym8559__8563 = this;
    var coll__8564 = this_sym8559__8563;
    return coll__8564.cljs$core$ILookup$_lookup$arity$3(coll__8564, k, not_found)
  };
  G__8605 = function(this_sym8559, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8605__2.call(this, this_sym8559, k);
      case 3:
        return G__8605__3.call(this, this_sym8559, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8605
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym8547, args8548) {
  var this__8565 = this;
  return this_sym8547.call.apply(this_sym8547, [this_sym8547].concat(args8548.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__8566 = this;
  var step_init__8567 = [0, init];
  var i__8568 = 0;
  while(true) {
    if(i__8568 < this__8566.cnt) {
      var arr__8569 = cljs.core.array_for.call(null, v, i__8568);
      var len__8570 = arr__8569.length;
      var init__8574 = function() {
        var j__8571 = 0;
        var init__8572 = step_init__8567[1];
        while(true) {
          if(j__8571 < len__8570) {
            var init__8573 = f.call(null, init__8572, j__8571 + i__8568, arr__8569[j__8571]);
            if(cljs.core.reduced_QMARK_.call(null, init__8573)) {
              return init__8573
            }else {
              var G__8606 = j__8571 + 1;
              var G__8607 = init__8573;
              j__8571 = G__8606;
              init__8572 = G__8607;
              continue
            }
          }else {
            step_init__8567[0] = len__8570;
            step_init__8567[1] = init__8572;
            return init__8572
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__8574)) {
        return cljs.core.deref.call(null, init__8574)
      }else {
        var G__8608 = i__8568 + step_init__8567[0];
        i__8568 = G__8608;
        continue
      }
    }else {
      return step_init__8567[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8575 = this;
  if(this__8575.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__8576 = this__8575.tail.slice();
    new_tail__8576.push(o);
    return new cljs.core.PersistentVector(this__8575.meta, this__8575.cnt + 1, this__8575.shift, this__8575.root, new_tail__8576, null)
  }else {
    var root_overflow_QMARK___8577 = this__8575.cnt >>> 5 > 1 << this__8575.shift;
    var new_shift__8578 = root_overflow_QMARK___8577 ? this__8575.shift + 5 : this__8575.shift;
    var new_root__8580 = root_overflow_QMARK___8577 ? function() {
      var n_r__8579 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__8579, 0, this__8575.root);
      cljs.core.pv_aset.call(null, n_r__8579, 1, cljs.core.new_path.call(null, null, this__8575.shift, new cljs.core.VectorNode(null, this__8575.tail)));
      return n_r__8579
    }() : cljs.core.push_tail.call(null, coll, this__8575.shift, this__8575.root, new cljs.core.VectorNode(null, this__8575.tail));
    return new cljs.core.PersistentVector(this__8575.meta, this__8575.cnt + 1, new_shift__8578, new_root__8580, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8581 = this;
  if(this__8581.cnt > 0) {
    return new cljs.core.RSeq(coll, this__8581.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__8582 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__8583 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__8584 = this;
  var this__8585 = this;
  return cljs.core.pr_str.call(null, this__8585)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__8586 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__8587 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8588 = this;
  if(this__8588.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8589 = this;
  return this__8589.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8590 = this;
  if(this__8590.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__8590.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8591 = this;
  if(this__8591.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__8591.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__8591.meta)
    }else {
      if(1 < this__8591.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__8591.meta, this__8591.cnt - 1, this__8591.shift, this__8591.root, this__8591.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__8592 = cljs.core.array_for.call(null, coll, this__8591.cnt - 2);
          var nr__8593 = cljs.core.pop_tail.call(null, coll, this__8591.shift, this__8591.root);
          var new_root__8594 = nr__8593 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__8593;
          var cnt_1__8595 = this__8591.cnt - 1;
          if(function() {
            var and__3822__auto____8596 = 5 < this__8591.shift;
            if(and__3822__auto____8596) {
              return cljs.core.pv_aget.call(null, new_root__8594, 1) == null
            }else {
              return and__3822__auto____8596
            }
          }()) {
            return new cljs.core.PersistentVector(this__8591.meta, cnt_1__8595, this__8591.shift - 5, cljs.core.pv_aget.call(null, new_root__8594, 0), new_tail__8592, null)
          }else {
            return new cljs.core.PersistentVector(this__8591.meta, cnt_1__8595, this__8591.shift, new_root__8594, new_tail__8592, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__8597 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8598 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8599 = this;
  return new cljs.core.PersistentVector(meta, this__8599.cnt, this__8599.shift, this__8599.root, this__8599.tail, this__8599.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8600 = this;
  return this__8600.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8601 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8602 = this;
  if(function() {
    var and__3822__auto____8603 = 0 <= n;
    if(and__3822__auto____8603) {
      return n < this__8602.cnt
    }else {
      return and__3822__auto____8603
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8604 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__8604.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__8609 = xs.length;
  var xs__8610 = no_clone === true ? xs : xs.slice();
  if(l__8609 < 32) {
    return new cljs.core.PersistentVector(null, l__8609, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__8610, null)
  }else {
    var node__8611 = xs__8610.slice(0, 32);
    var v__8612 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__8611, null);
    var i__8613 = 32;
    var out__8614 = cljs.core._as_transient.call(null, v__8612);
    while(true) {
      if(i__8613 < l__8609) {
        var G__8615 = i__8613 + 1;
        var G__8616 = cljs.core.conj_BANG_.call(null, out__8614, xs__8610[i__8613]);
        i__8613 = G__8615;
        out__8614 = G__8616;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__8614)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__8617) {
    var args = cljs.core.seq(arglist__8617);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8618 = this;
  if(this__8618.off + 1 < this__8618.node.length) {
    var s__8619 = cljs.core.chunked_seq.call(null, this__8618.vec, this__8618.node, this__8618.i, this__8618.off + 1);
    if(s__8619 == null) {
      return null
    }else {
      return s__8619
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8620 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8621 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8622 = this;
  return this__8622.node[this__8622.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8623 = this;
  if(this__8623.off + 1 < this__8623.node.length) {
    var s__8624 = cljs.core.chunked_seq.call(null, this__8623.vec, this__8623.node, this__8623.i, this__8623.off + 1);
    if(s__8624 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__8624
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8625 = this;
  var l__8626 = this__8625.node.length;
  var s__8627 = this__8625.i + l__8626 < cljs.core._count.call(null, this__8625.vec) ? cljs.core.chunked_seq.call(null, this__8625.vec, this__8625.i + l__8626, 0) : null;
  if(s__8627 == null) {
    return null
  }else {
    return s__8627
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8628 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8629 = this;
  return cljs.core.chunked_seq.call(null, this__8629.vec, this__8629.node, this__8629.i, this__8629.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__8630 = this;
  return this__8630.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8631 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__8631.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8632 = this;
  return cljs.core.array_chunk.call(null, this__8632.node, this__8632.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8633 = this;
  var l__8634 = this__8633.node.length;
  var s__8635 = this__8633.i + l__8634 < cljs.core._count.call(null, this__8633.vec) ? cljs.core.chunked_seq.call(null, this__8633.vec, this__8633.i + l__8634, 0) : null;
  if(s__8635 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__8635
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8638 = this;
  var h__2153__auto____8639 = this__8638.__hash;
  if(!(h__2153__auto____8639 == null)) {
    return h__2153__auto____8639
  }else {
    var h__2153__auto____8640 = cljs.core.hash_coll.call(null, coll);
    this__8638.__hash = h__2153__auto____8640;
    return h__2153__auto____8640
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8641 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8642 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__8643 = this;
  var v_pos__8644 = this__8643.start + key;
  return new cljs.core.Subvec(this__8643.meta, cljs.core._assoc.call(null, this__8643.v, v_pos__8644, val), this__8643.start, this__8643.end > v_pos__8644 + 1 ? this__8643.end : v_pos__8644 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__8670 = null;
  var G__8670__2 = function(this_sym8645, k) {
    var this__8647 = this;
    var this_sym8645__8648 = this;
    var coll__8649 = this_sym8645__8648;
    return coll__8649.cljs$core$ILookup$_lookup$arity$2(coll__8649, k)
  };
  var G__8670__3 = function(this_sym8646, k, not_found) {
    var this__8647 = this;
    var this_sym8646__8650 = this;
    var coll__8651 = this_sym8646__8650;
    return coll__8651.cljs$core$ILookup$_lookup$arity$3(coll__8651, k, not_found)
  };
  G__8670 = function(this_sym8646, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8670__2.call(this, this_sym8646, k);
      case 3:
        return G__8670__3.call(this, this_sym8646, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8670
}();
cljs.core.Subvec.prototype.apply = function(this_sym8636, args8637) {
  var this__8652 = this;
  return this_sym8636.call.apply(this_sym8636, [this_sym8636].concat(args8637.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8653 = this;
  return new cljs.core.Subvec(this__8653.meta, cljs.core._assoc_n.call(null, this__8653.v, this__8653.end, o), this__8653.start, this__8653.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__8654 = this;
  var this__8655 = this;
  return cljs.core.pr_str.call(null, this__8655)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8656 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8657 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8658 = this;
  var subvec_seq__8659 = function subvec_seq(i) {
    if(i === this__8658.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__8658.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__8659.call(null, this__8658.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8660 = this;
  return this__8660.end - this__8660.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8661 = this;
  return cljs.core._nth.call(null, this__8661.v, this__8661.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8662 = this;
  if(this__8662.start === this__8662.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__8662.meta, this__8662.v, this__8662.start, this__8662.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__8663 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8664 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8665 = this;
  return new cljs.core.Subvec(meta, this__8665.v, this__8665.start, this__8665.end, this__8665.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8666 = this;
  return this__8666.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8667 = this;
  return cljs.core._nth.call(null, this__8667.v, this__8667.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8668 = this;
  return cljs.core._nth.call(null, this__8668.v, this__8668.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8669 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__8669.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__8672 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__8672, 0, tl.length);
  return ret__8672
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__8676 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__8677 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__8676, subidx__8677, level === 5 ? tail_node : function() {
    var child__8678 = cljs.core.pv_aget.call(null, ret__8676, subidx__8677);
    if(!(child__8678 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__8678, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__8676
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__8683 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__8684 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__8685 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__8683, subidx__8684));
    if(function() {
      var and__3822__auto____8686 = new_child__8685 == null;
      if(and__3822__auto____8686) {
        return subidx__8684 === 0
      }else {
        return and__3822__auto____8686
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__8683, subidx__8684, new_child__8685);
      return node__8683
    }
  }else {
    if(subidx__8684 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__8683, subidx__8684, null);
        return node__8683
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____8691 = 0 <= i;
    if(and__3822__auto____8691) {
      return i < tv.cnt
    }else {
      return and__3822__auto____8691
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__8692 = tv.root;
      var node__8693 = root__8692;
      var level__8694 = tv.shift;
      while(true) {
        if(level__8694 > 0) {
          var G__8695 = cljs.core.tv_ensure_editable.call(null, root__8692.edit, cljs.core.pv_aget.call(null, node__8693, i >>> level__8694 & 31));
          var G__8696 = level__8694 - 5;
          node__8693 = G__8695;
          level__8694 = G__8696;
          continue
        }else {
          return node__8693.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__8736 = null;
  var G__8736__2 = function(this_sym8699, k) {
    var this__8701 = this;
    var this_sym8699__8702 = this;
    var coll__8703 = this_sym8699__8702;
    return coll__8703.cljs$core$ILookup$_lookup$arity$2(coll__8703, k)
  };
  var G__8736__3 = function(this_sym8700, k, not_found) {
    var this__8701 = this;
    var this_sym8700__8704 = this;
    var coll__8705 = this_sym8700__8704;
    return coll__8705.cljs$core$ILookup$_lookup$arity$3(coll__8705, k, not_found)
  };
  G__8736 = function(this_sym8700, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8736__2.call(this, this_sym8700, k);
      case 3:
        return G__8736__3.call(this, this_sym8700, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8736
}();
cljs.core.TransientVector.prototype.apply = function(this_sym8697, args8698) {
  var this__8706 = this;
  return this_sym8697.call.apply(this_sym8697, [this_sym8697].concat(args8698.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8707 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8708 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8709 = this;
  if(this__8709.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8710 = this;
  if(function() {
    var and__3822__auto____8711 = 0 <= n;
    if(and__3822__auto____8711) {
      return n < this__8710.cnt
    }else {
      return and__3822__auto____8711
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8712 = this;
  if(this__8712.root.edit) {
    return this__8712.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__8713 = this;
  if(this__8713.root.edit) {
    if(function() {
      var and__3822__auto____8714 = 0 <= n;
      if(and__3822__auto____8714) {
        return n < this__8713.cnt
      }else {
        return and__3822__auto____8714
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__8713.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__8719 = function go(level, node) {
          var node__8717 = cljs.core.tv_ensure_editable.call(null, this__8713.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__8717, n & 31, val);
            return node__8717
          }else {
            var subidx__8718 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__8717, subidx__8718, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__8717, subidx__8718)));
            return node__8717
          }
        }.call(null, this__8713.shift, this__8713.root);
        this__8713.root = new_root__8719;
        return tcoll
      }
    }else {
      if(n === this__8713.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__8713.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__8720 = this;
  if(this__8720.root.edit) {
    if(this__8720.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__8720.cnt) {
        this__8720.cnt = 0;
        return tcoll
      }else {
        if((this__8720.cnt - 1 & 31) > 0) {
          this__8720.cnt = this__8720.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__8721 = cljs.core.editable_array_for.call(null, tcoll, this__8720.cnt - 2);
            var new_root__8723 = function() {
              var nr__8722 = cljs.core.tv_pop_tail.call(null, tcoll, this__8720.shift, this__8720.root);
              if(!(nr__8722 == null)) {
                return nr__8722
              }else {
                return new cljs.core.VectorNode(this__8720.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____8724 = 5 < this__8720.shift;
              if(and__3822__auto____8724) {
                return cljs.core.pv_aget.call(null, new_root__8723, 1) == null
              }else {
                return and__3822__auto____8724
              }
            }()) {
              var new_root__8725 = cljs.core.tv_ensure_editable.call(null, this__8720.root.edit, cljs.core.pv_aget.call(null, new_root__8723, 0));
              this__8720.root = new_root__8725;
              this__8720.shift = this__8720.shift - 5;
              this__8720.cnt = this__8720.cnt - 1;
              this__8720.tail = new_tail__8721;
              return tcoll
            }else {
              this__8720.root = new_root__8723;
              this__8720.cnt = this__8720.cnt - 1;
              this__8720.tail = new_tail__8721;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__8726 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__8727 = this;
  if(this__8727.root.edit) {
    if(this__8727.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__8727.tail[this__8727.cnt & 31] = o;
      this__8727.cnt = this__8727.cnt + 1;
      return tcoll
    }else {
      var tail_node__8728 = new cljs.core.VectorNode(this__8727.root.edit, this__8727.tail);
      var new_tail__8729 = cljs.core.make_array.call(null, 32);
      new_tail__8729[0] = o;
      this__8727.tail = new_tail__8729;
      if(this__8727.cnt >>> 5 > 1 << this__8727.shift) {
        var new_root_array__8730 = cljs.core.make_array.call(null, 32);
        var new_shift__8731 = this__8727.shift + 5;
        new_root_array__8730[0] = this__8727.root;
        new_root_array__8730[1] = cljs.core.new_path.call(null, this__8727.root.edit, this__8727.shift, tail_node__8728);
        this__8727.root = new cljs.core.VectorNode(this__8727.root.edit, new_root_array__8730);
        this__8727.shift = new_shift__8731;
        this__8727.cnt = this__8727.cnt + 1;
        return tcoll
      }else {
        var new_root__8732 = cljs.core.tv_push_tail.call(null, tcoll, this__8727.shift, this__8727.root, tail_node__8728);
        this__8727.root = new_root__8732;
        this__8727.cnt = this__8727.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__8733 = this;
  if(this__8733.root.edit) {
    this__8733.root.edit = null;
    var len__8734 = this__8733.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__8735 = cljs.core.make_array.call(null, len__8734);
    cljs.core.array_copy.call(null, this__8733.tail, 0, trimmed_tail__8735, 0, len__8734);
    return new cljs.core.PersistentVector(null, this__8733.cnt, this__8733.shift, this__8733.root, trimmed_tail__8735, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8737 = this;
  var h__2153__auto____8738 = this__8737.__hash;
  if(!(h__2153__auto____8738 == null)) {
    return h__2153__auto____8738
  }else {
    var h__2153__auto____8739 = cljs.core.hash_coll.call(null, coll);
    this__8737.__hash = h__2153__auto____8739;
    return h__2153__auto____8739
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8740 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__8741 = this;
  var this__8742 = this;
  return cljs.core.pr_str.call(null, this__8742)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8743 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8744 = this;
  return cljs.core._first.call(null, this__8744.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8745 = this;
  var temp__3971__auto____8746 = cljs.core.next.call(null, this__8745.front);
  if(temp__3971__auto____8746) {
    var f1__8747 = temp__3971__auto____8746;
    return new cljs.core.PersistentQueueSeq(this__8745.meta, f1__8747, this__8745.rear, null)
  }else {
    if(this__8745.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__8745.meta, this__8745.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8748 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8749 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__8749.front, this__8749.rear, this__8749.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8750 = this;
  return this__8750.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8751 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8751.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8752 = this;
  var h__2153__auto____8753 = this__8752.__hash;
  if(!(h__2153__auto____8753 == null)) {
    return h__2153__auto____8753
  }else {
    var h__2153__auto____8754 = cljs.core.hash_coll.call(null, coll);
    this__8752.__hash = h__2153__auto____8754;
    return h__2153__auto____8754
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8755 = this;
  if(cljs.core.truth_(this__8755.front)) {
    return new cljs.core.PersistentQueue(this__8755.meta, this__8755.count + 1, this__8755.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____8756 = this__8755.rear;
      if(cljs.core.truth_(or__3824__auto____8756)) {
        return or__3824__auto____8756
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__8755.meta, this__8755.count + 1, cljs.core.conj.call(null, this__8755.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__8757 = this;
  var this__8758 = this;
  return cljs.core.pr_str.call(null, this__8758)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8759 = this;
  var rear__8760 = cljs.core.seq.call(null, this__8759.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____8761 = this__8759.front;
    if(cljs.core.truth_(or__3824__auto____8761)) {
      return or__3824__auto____8761
    }else {
      return rear__8760
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__8759.front, cljs.core.seq.call(null, rear__8760), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8762 = this;
  return this__8762.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8763 = this;
  return cljs.core._first.call(null, this__8763.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8764 = this;
  if(cljs.core.truth_(this__8764.front)) {
    var temp__3971__auto____8765 = cljs.core.next.call(null, this__8764.front);
    if(temp__3971__auto____8765) {
      var f1__8766 = temp__3971__auto____8765;
      return new cljs.core.PersistentQueue(this__8764.meta, this__8764.count - 1, f1__8766, this__8764.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__8764.meta, this__8764.count - 1, cljs.core.seq.call(null, this__8764.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8767 = this;
  return cljs.core.first.call(null, this__8767.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8768 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8769 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8770 = this;
  return new cljs.core.PersistentQueue(meta, this__8770.count, this__8770.front, this__8770.rear, this__8770.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8771 = this;
  return this__8771.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8772 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__8773 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__8776 = array.length;
  var i__8777 = 0;
  while(true) {
    if(i__8777 < len__8776) {
      if(k === array[i__8777]) {
        return i__8777
      }else {
        var G__8778 = i__8777 + incr;
        i__8777 = G__8778;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__8781 = cljs.core.hash.call(null, a);
  var b__8782 = cljs.core.hash.call(null, b);
  if(a__8781 < b__8782) {
    return-1
  }else {
    if(a__8781 > b__8782) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__8790 = m.keys;
  var len__8791 = ks__8790.length;
  var so__8792 = m.strobj;
  var out__8793 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__8794 = 0;
  var out__8795 = cljs.core.transient$.call(null, out__8793);
  while(true) {
    if(i__8794 < len__8791) {
      var k__8796 = ks__8790[i__8794];
      var G__8797 = i__8794 + 1;
      var G__8798 = cljs.core.assoc_BANG_.call(null, out__8795, k__8796, so__8792[k__8796]);
      i__8794 = G__8797;
      out__8795 = G__8798;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__8795, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__8804 = {};
  var l__8805 = ks.length;
  var i__8806 = 0;
  while(true) {
    if(i__8806 < l__8805) {
      var k__8807 = ks[i__8806];
      new_obj__8804[k__8807] = obj[k__8807];
      var G__8808 = i__8806 + 1;
      i__8806 = G__8808;
      continue
    }else {
    }
    break
  }
  return new_obj__8804
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__8811 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8812 = this;
  var h__2153__auto____8813 = this__8812.__hash;
  if(!(h__2153__auto____8813 == null)) {
    return h__2153__auto____8813
  }else {
    var h__2153__auto____8814 = cljs.core.hash_imap.call(null, coll);
    this__8812.__hash = h__2153__auto____8814;
    return h__2153__auto____8814
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8815 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8816 = this;
  if(function() {
    var and__3822__auto____8817 = goog.isString(k);
    if(and__3822__auto____8817) {
      return!(cljs.core.scan_array.call(null, 1, k, this__8816.keys) == null)
    }else {
      return and__3822__auto____8817
    }
  }()) {
    return this__8816.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__8818 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____8819 = this__8818.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____8819) {
        return or__3824__auto____8819
      }else {
        return this__8818.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__8818.keys) == null)) {
        var new_strobj__8820 = cljs.core.obj_clone.call(null, this__8818.strobj, this__8818.keys);
        new_strobj__8820[k] = v;
        return new cljs.core.ObjMap(this__8818.meta, this__8818.keys, new_strobj__8820, this__8818.update_count + 1, null)
      }else {
        var new_strobj__8821 = cljs.core.obj_clone.call(null, this__8818.strobj, this__8818.keys);
        var new_keys__8822 = this__8818.keys.slice();
        new_strobj__8821[k] = v;
        new_keys__8822.push(k);
        return new cljs.core.ObjMap(this__8818.meta, new_keys__8822, new_strobj__8821, this__8818.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__8823 = this;
  if(function() {
    var and__3822__auto____8824 = goog.isString(k);
    if(and__3822__auto____8824) {
      return!(cljs.core.scan_array.call(null, 1, k, this__8823.keys) == null)
    }else {
      return and__3822__auto____8824
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__8846 = null;
  var G__8846__2 = function(this_sym8825, k) {
    var this__8827 = this;
    var this_sym8825__8828 = this;
    var coll__8829 = this_sym8825__8828;
    return coll__8829.cljs$core$ILookup$_lookup$arity$2(coll__8829, k)
  };
  var G__8846__3 = function(this_sym8826, k, not_found) {
    var this__8827 = this;
    var this_sym8826__8830 = this;
    var coll__8831 = this_sym8826__8830;
    return coll__8831.cljs$core$ILookup$_lookup$arity$3(coll__8831, k, not_found)
  };
  G__8846 = function(this_sym8826, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8846__2.call(this, this_sym8826, k);
      case 3:
        return G__8846__3.call(this, this_sym8826, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8846
}();
cljs.core.ObjMap.prototype.apply = function(this_sym8809, args8810) {
  var this__8832 = this;
  return this_sym8809.call.apply(this_sym8809, [this_sym8809].concat(args8810.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__8833 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__8834 = this;
  var this__8835 = this;
  return cljs.core.pr_str.call(null, this__8835)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8836 = this;
  if(this__8836.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__8799_SHARP_) {
      return cljs.core.vector.call(null, p1__8799_SHARP_, this__8836.strobj[p1__8799_SHARP_])
    }, this__8836.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8837 = this;
  return this__8837.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8838 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8839 = this;
  return new cljs.core.ObjMap(meta, this__8839.keys, this__8839.strobj, this__8839.update_count, this__8839.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8840 = this;
  return this__8840.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8841 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__8841.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__8842 = this;
  if(function() {
    var and__3822__auto____8843 = goog.isString(k);
    if(and__3822__auto____8843) {
      return!(cljs.core.scan_array.call(null, 1, k, this__8842.keys) == null)
    }else {
      return and__3822__auto____8843
    }
  }()) {
    var new_keys__8844 = this__8842.keys.slice();
    var new_strobj__8845 = cljs.core.obj_clone.call(null, this__8842.strobj, this__8842.keys);
    new_keys__8844.splice(cljs.core.scan_array.call(null, 1, k, new_keys__8844), 1);
    cljs.core.js_delete.call(null, new_strobj__8845, k);
    return new cljs.core.ObjMap(this__8842.meta, new_keys__8844, new_strobj__8845, this__8842.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8850 = this;
  var h__2153__auto____8851 = this__8850.__hash;
  if(!(h__2153__auto____8851 == null)) {
    return h__2153__auto____8851
  }else {
    var h__2153__auto____8852 = cljs.core.hash_imap.call(null, coll);
    this__8850.__hash = h__2153__auto____8852;
    return h__2153__auto____8852
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8853 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8854 = this;
  var bucket__8855 = this__8854.hashobj[cljs.core.hash.call(null, k)];
  var i__8856 = cljs.core.truth_(bucket__8855) ? cljs.core.scan_array.call(null, 2, k, bucket__8855) : null;
  if(cljs.core.truth_(i__8856)) {
    return bucket__8855[i__8856 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__8857 = this;
  var h__8858 = cljs.core.hash.call(null, k);
  var bucket__8859 = this__8857.hashobj[h__8858];
  if(cljs.core.truth_(bucket__8859)) {
    var new_bucket__8860 = bucket__8859.slice();
    var new_hashobj__8861 = goog.object.clone(this__8857.hashobj);
    new_hashobj__8861[h__8858] = new_bucket__8860;
    var temp__3971__auto____8862 = cljs.core.scan_array.call(null, 2, k, new_bucket__8860);
    if(cljs.core.truth_(temp__3971__auto____8862)) {
      var i__8863 = temp__3971__auto____8862;
      new_bucket__8860[i__8863 + 1] = v;
      return new cljs.core.HashMap(this__8857.meta, this__8857.count, new_hashobj__8861, null)
    }else {
      new_bucket__8860.push(k, v);
      return new cljs.core.HashMap(this__8857.meta, this__8857.count + 1, new_hashobj__8861, null)
    }
  }else {
    var new_hashobj__8864 = goog.object.clone(this__8857.hashobj);
    new_hashobj__8864[h__8858] = [k, v];
    return new cljs.core.HashMap(this__8857.meta, this__8857.count + 1, new_hashobj__8864, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__8865 = this;
  var bucket__8866 = this__8865.hashobj[cljs.core.hash.call(null, k)];
  var i__8867 = cljs.core.truth_(bucket__8866) ? cljs.core.scan_array.call(null, 2, k, bucket__8866) : null;
  if(cljs.core.truth_(i__8867)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__8892 = null;
  var G__8892__2 = function(this_sym8868, k) {
    var this__8870 = this;
    var this_sym8868__8871 = this;
    var coll__8872 = this_sym8868__8871;
    return coll__8872.cljs$core$ILookup$_lookup$arity$2(coll__8872, k)
  };
  var G__8892__3 = function(this_sym8869, k, not_found) {
    var this__8870 = this;
    var this_sym8869__8873 = this;
    var coll__8874 = this_sym8869__8873;
    return coll__8874.cljs$core$ILookup$_lookup$arity$3(coll__8874, k, not_found)
  };
  G__8892 = function(this_sym8869, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8892__2.call(this, this_sym8869, k);
      case 3:
        return G__8892__3.call(this, this_sym8869, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8892
}();
cljs.core.HashMap.prototype.apply = function(this_sym8848, args8849) {
  var this__8875 = this;
  return this_sym8848.call.apply(this_sym8848, [this_sym8848].concat(args8849.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__8876 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__8877 = this;
  var this__8878 = this;
  return cljs.core.pr_str.call(null, this__8878)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8879 = this;
  if(this__8879.count > 0) {
    var hashes__8880 = cljs.core.js_keys.call(null, this__8879.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__8847_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__8879.hashobj[p1__8847_SHARP_]))
    }, hashes__8880)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8881 = this;
  return this__8881.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8882 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8883 = this;
  return new cljs.core.HashMap(meta, this__8883.count, this__8883.hashobj, this__8883.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8884 = this;
  return this__8884.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8885 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__8885.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__8886 = this;
  var h__8887 = cljs.core.hash.call(null, k);
  var bucket__8888 = this__8886.hashobj[h__8887];
  var i__8889 = cljs.core.truth_(bucket__8888) ? cljs.core.scan_array.call(null, 2, k, bucket__8888) : null;
  if(cljs.core.not.call(null, i__8889)) {
    return coll
  }else {
    var new_hashobj__8890 = goog.object.clone(this__8886.hashobj);
    if(3 > bucket__8888.length) {
      cljs.core.js_delete.call(null, new_hashobj__8890, h__8887)
    }else {
      var new_bucket__8891 = bucket__8888.slice();
      new_bucket__8891.splice(i__8889, 2);
      new_hashobj__8890[h__8887] = new_bucket__8891
    }
    return new cljs.core.HashMap(this__8886.meta, this__8886.count - 1, new_hashobj__8890, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__8893 = ks.length;
  var i__8894 = 0;
  var out__8895 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__8894 < len__8893) {
      var G__8896 = i__8894 + 1;
      var G__8897 = cljs.core.assoc.call(null, out__8895, ks[i__8894], vs[i__8894]);
      i__8894 = G__8896;
      out__8895 = G__8897;
      continue
    }else {
      return out__8895
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__8901 = m.arr;
  var len__8902 = arr__8901.length;
  var i__8903 = 0;
  while(true) {
    if(len__8902 <= i__8903) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__8901[i__8903], k)) {
        return i__8903
      }else {
        if("\ufdd0'else") {
          var G__8904 = i__8903 + 2;
          i__8903 = G__8904;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
void 0;
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__8907 = this;
  return new cljs.core.TransientArrayMap({}, this__8907.arr.length, this__8907.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8908 = this;
  var h__2153__auto____8909 = this__8908.__hash;
  if(!(h__2153__auto____8909 == null)) {
    return h__2153__auto____8909
  }else {
    var h__2153__auto____8910 = cljs.core.hash_imap.call(null, coll);
    this__8908.__hash = h__2153__auto____8910;
    return h__2153__auto____8910
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__8911 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__8912 = this;
  var idx__8913 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__8913 === -1) {
    return not_found
  }else {
    return this__8912.arr[idx__8913 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__8914 = this;
  var idx__8915 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__8915 === -1) {
    if(this__8914.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__8914.meta, this__8914.cnt + 1, function() {
        var G__8916__8917 = this__8914.arr.slice();
        G__8916__8917.push(k);
        G__8916__8917.push(v);
        return G__8916__8917
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__8914.arr[idx__8915 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__8914.meta, this__8914.cnt, function() {
          var G__8918__8919 = this__8914.arr.slice();
          G__8918__8919[idx__8915 + 1] = v;
          return G__8918__8919
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__8920 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__8952 = null;
  var G__8952__2 = function(this_sym8921, k) {
    var this__8923 = this;
    var this_sym8921__8924 = this;
    var coll__8925 = this_sym8921__8924;
    return coll__8925.cljs$core$ILookup$_lookup$arity$2(coll__8925, k)
  };
  var G__8952__3 = function(this_sym8922, k, not_found) {
    var this__8923 = this;
    var this_sym8922__8926 = this;
    var coll__8927 = this_sym8922__8926;
    return coll__8927.cljs$core$ILookup$_lookup$arity$3(coll__8927, k, not_found)
  };
  G__8952 = function(this_sym8922, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8952__2.call(this, this_sym8922, k);
      case 3:
        return G__8952__3.call(this, this_sym8922, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8952
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym8905, args8906) {
  var this__8928 = this;
  return this_sym8905.call.apply(this_sym8905, [this_sym8905].concat(args8906.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__8929 = this;
  var len__8930 = this__8929.arr.length;
  var i__8931 = 0;
  var init__8932 = init;
  while(true) {
    if(i__8931 < len__8930) {
      var init__8933 = f.call(null, init__8932, this__8929.arr[i__8931], this__8929.arr[i__8931 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__8933)) {
        return cljs.core.deref.call(null, init__8933)
      }else {
        var G__8953 = i__8931 + 2;
        var G__8954 = init__8933;
        i__8931 = G__8953;
        init__8932 = G__8954;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__8934 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__8935 = this;
  var this__8936 = this;
  return cljs.core.pr_str.call(null, this__8936)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8937 = this;
  if(this__8937.cnt > 0) {
    var len__8938 = this__8937.arr.length;
    var array_map_seq__8939 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__8938) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__8937.arr[i], this__8937.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__8939.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8940 = this;
  return this__8940.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8941 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8942 = this;
  return new cljs.core.PersistentArrayMap(meta, this__8942.cnt, this__8942.arr, this__8942.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8943 = this;
  return this__8943.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8944 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__8944.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__8945 = this;
  var idx__8946 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__8946 >= 0) {
    var len__8947 = this__8945.arr.length;
    var new_len__8948 = len__8947 - 2;
    if(new_len__8948 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__8949 = cljs.core.make_array.call(null, new_len__8948);
      var s__8950 = 0;
      var d__8951 = 0;
      while(true) {
        if(s__8950 >= len__8947) {
          return new cljs.core.PersistentArrayMap(this__8945.meta, this__8945.cnt - 1, new_arr__8949, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__8945.arr[s__8950])) {
            var G__8955 = s__8950 + 2;
            var G__8956 = d__8951;
            s__8950 = G__8955;
            d__8951 = G__8956;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__8949[d__8951] = this__8945.arr[s__8950];
              new_arr__8949[d__8951 + 1] = this__8945.arr[s__8950 + 1];
              var G__8957 = s__8950 + 2;
              var G__8958 = d__8951 + 2;
              s__8950 = G__8957;
              d__8951 = G__8958;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__8959 = cljs.core.count.call(null, ks);
  var i__8960 = 0;
  var out__8961 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__8960 < len__8959) {
      var G__8962 = i__8960 + 1;
      var G__8963 = cljs.core.assoc_BANG_.call(null, out__8961, ks[i__8960], vs[i__8960]);
      i__8960 = G__8962;
      out__8961 = G__8963;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__8961)
    }
    break
  }
};
void 0;
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__8964 = this;
  if(cljs.core.truth_(this__8964.editable_QMARK_)) {
    var idx__8965 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__8965 >= 0) {
      this__8964.arr[idx__8965] = this__8964.arr[this__8964.len - 2];
      this__8964.arr[idx__8965 + 1] = this__8964.arr[this__8964.len - 1];
      var G__8966__8967 = this__8964.arr;
      G__8966__8967.pop();
      G__8966__8967.pop();
      G__8966__8967;
      this__8964.len = this__8964.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__8968 = this;
  if(cljs.core.truth_(this__8968.editable_QMARK_)) {
    var idx__8969 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__8969 === -1) {
      if(this__8968.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__8968.len = this__8968.len + 2;
        this__8968.arr.push(key);
        this__8968.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__8968.len, this__8968.arr), key, val)
      }
    }else {
      if(val === this__8968.arr[idx__8969 + 1]) {
        return tcoll
      }else {
        this__8968.arr[idx__8969 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__8970 = this;
  if(cljs.core.truth_(this__8970.editable_QMARK_)) {
    if(function() {
      var G__8971__8972 = o;
      if(G__8971__8972) {
        if(function() {
          var or__3824__auto____8973 = G__8971__8972.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____8973) {
            return or__3824__auto____8973
          }else {
            return G__8971__8972.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__8971__8972.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__8971__8972)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__8971__8972)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__8974 = cljs.core.seq.call(null, o);
      var tcoll__8975 = tcoll;
      while(true) {
        var temp__3971__auto____8976 = cljs.core.first.call(null, es__8974);
        if(cljs.core.truth_(temp__3971__auto____8976)) {
          var e__8977 = temp__3971__auto____8976;
          var G__8983 = cljs.core.next.call(null, es__8974);
          var G__8984 = tcoll__8975.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__8975, cljs.core.key.call(null, e__8977), cljs.core.val.call(null, e__8977));
          es__8974 = G__8983;
          tcoll__8975 = G__8984;
          continue
        }else {
          return tcoll__8975
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__8978 = this;
  if(cljs.core.truth_(this__8978.editable_QMARK_)) {
    this__8978.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__8978.len, 2), this__8978.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__8979 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__8980 = this;
  if(cljs.core.truth_(this__8980.editable_QMARK_)) {
    var idx__8981 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__8981 === -1) {
      return not_found
    }else {
      return this__8980.arr[idx__8981 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__8982 = this;
  if(cljs.core.truth_(this__8982.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__8982.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
void 0;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__8987 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__8988 = 0;
  while(true) {
    if(i__8988 < len) {
      var G__8989 = cljs.core.assoc_BANG_.call(null, out__8987, arr[i__8988], arr[i__8988 + 1]);
      var G__8990 = i__8988 + 2;
      out__8987 = G__8989;
      i__8988 = G__8990;
      continue
    }else {
      return out__8987
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2271__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__8995__8996 = arr.slice();
    G__8995__8996[i] = a;
    return G__8995__8996
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__8997__8998 = arr.slice();
    G__8997__8998[i] = a;
    G__8997__8998[j] = b;
    return G__8997__8998
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__9000 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__9000, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__9000, 2 * i, new_arr__9000.length - 2 * i);
  return new_arr__9000
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__9003 = inode.ensure_editable(edit);
    editable__9003.arr[i] = a;
    return editable__9003
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__9004 = inode.ensure_editable(edit);
    editable__9004.arr[i] = a;
    editable__9004.arr[j] = b;
    return editable__9004
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__9011 = arr.length;
  var i__9012 = 0;
  var init__9013 = init;
  while(true) {
    if(i__9012 < len__9011) {
      var init__9016 = function() {
        var k__9014 = arr[i__9012];
        if(!(k__9014 == null)) {
          return f.call(null, init__9013, k__9014, arr[i__9012 + 1])
        }else {
          var node__9015 = arr[i__9012 + 1];
          if(!(node__9015 == null)) {
            return node__9015.kv_reduce(f, init__9013)
          }else {
            return init__9013
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9016)) {
        return cljs.core.deref.call(null, init__9016)
      }else {
        var G__9017 = i__9012 + 2;
        var G__9018 = init__9016;
        i__9012 = G__9017;
        init__9013 = G__9018;
        continue
      }
    }else {
      return init__9013
    }
    break
  }
};
void 0;
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__9019 = this;
  var inode__9020 = this;
  if(this__9019.bitmap === bit) {
    return null
  }else {
    var editable__9021 = inode__9020.ensure_editable(e);
    var earr__9022 = editable__9021.arr;
    var len__9023 = earr__9022.length;
    editable__9021.bitmap = bit ^ editable__9021.bitmap;
    cljs.core.array_copy.call(null, earr__9022, 2 * (i + 1), earr__9022, 2 * i, len__9023 - 2 * (i + 1));
    earr__9022[len__9023 - 2] = null;
    earr__9022[len__9023 - 1] = null;
    return editable__9021
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9024 = this;
  var inode__9025 = this;
  var bit__9026 = 1 << (hash >>> shift & 31);
  var idx__9027 = cljs.core.bitmap_indexed_node_index.call(null, this__9024.bitmap, bit__9026);
  if((this__9024.bitmap & bit__9026) === 0) {
    var n__9028 = cljs.core.bit_count.call(null, this__9024.bitmap);
    if(2 * n__9028 < this__9024.arr.length) {
      var editable__9029 = inode__9025.ensure_editable(edit);
      var earr__9030 = editable__9029.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__9030, 2 * idx__9027, earr__9030, 2 * (idx__9027 + 1), 2 * (n__9028 - idx__9027));
      earr__9030[2 * idx__9027] = key;
      earr__9030[2 * idx__9027 + 1] = val;
      editable__9029.bitmap = editable__9029.bitmap | bit__9026;
      return editable__9029
    }else {
      if(n__9028 >= 16) {
        var nodes__9031 = cljs.core.make_array.call(null, 32);
        var jdx__9032 = hash >>> shift & 31;
        nodes__9031[jdx__9032] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__9033 = 0;
        var j__9034 = 0;
        while(true) {
          if(i__9033 < 32) {
            if((this__9024.bitmap >>> i__9033 & 1) === 0) {
              var G__9087 = i__9033 + 1;
              var G__9088 = j__9034;
              i__9033 = G__9087;
              j__9034 = G__9088;
              continue
            }else {
              nodes__9031[i__9033] = !(this__9024.arr[j__9034] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__9024.arr[j__9034]), this__9024.arr[j__9034], this__9024.arr[j__9034 + 1], added_leaf_QMARK_) : this__9024.arr[j__9034 + 1];
              var G__9089 = i__9033 + 1;
              var G__9090 = j__9034 + 2;
              i__9033 = G__9089;
              j__9034 = G__9090;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__9028 + 1, nodes__9031)
      }else {
        if("\ufdd0'else") {
          var new_arr__9035 = cljs.core.make_array.call(null, 2 * (n__9028 + 4));
          cljs.core.array_copy.call(null, this__9024.arr, 0, new_arr__9035, 0, 2 * idx__9027);
          new_arr__9035[2 * idx__9027] = key;
          new_arr__9035[2 * idx__9027 + 1] = val;
          cljs.core.array_copy.call(null, this__9024.arr, 2 * idx__9027, new_arr__9035, 2 * (idx__9027 + 1), 2 * (n__9028 - idx__9027));
          added_leaf_QMARK_.val = true;
          var editable__9036 = inode__9025.ensure_editable(edit);
          editable__9036.arr = new_arr__9035;
          editable__9036.bitmap = editable__9036.bitmap | bit__9026;
          return editable__9036
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__9037 = this__9024.arr[2 * idx__9027];
    var val_or_node__9038 = this__9024.arr[2 * idx__9027 + 1];
    if(key_or_nil__9037 == null) {
      var n__9039 = val_or_node__9038.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9039 === val_or_node__9038) {
        return inode__9025
      }else {
        return cljs.core.edit_and_set.call(null, inode__9025, edit, 2 * idx__9027 + 1, n__9039)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9037)) {
        if(val === val_or_node__9038) {
          return inode__9025
        }else {
          return cljs.core.edit_and_set.call(null, inode__9025, edit, 2 * idx__9027 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__9025, edit, 2 * idx__9027, null, 2 * idx__9027 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__9037, val_or_node__9038, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__9040 = this;
  var inode__9041 = this;
  return cljs.core.create_inode_seq.call(null, this__9040.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9042 = this;
  var inode__9043 = this;
  var bit__9044 = 1 << (hash >>> shift & 31);
  if((this__9042.bitmap & bit__9044) === 0) {
    return inode__9043
  }else {
    var idx__9045 = cljs.core.bitmap_indexed_node_index.call(null, this__9042.bitmap, bit__9044);
    var key_or_nil__9046 = this__9042.arr[2 * idx__9045];
    var val_or_node__9047 = this__9042.arr[2 * idx__9045 + 1];
    if(key_or_nil__9046 == null) {
      var n__9048 = val_or_node__9047.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__9048 === val_or_node__9047) {
        return inode__9043
      }else {
        if(!(n__9048 == null)) {
          return cljs.core.edit_and_set.call(null, inode__9043, edit, 2 * idx__9045 + 1, n__9048)
        }else {
          if(this__9042.bitmap === bit__9044) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__9043.edit_and_remove_pair(edit, bit__9044, idx__9045)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9046)) {
        removed_leaf_QMARK_[0] = true;
        return inode__9043.edit_and_remove_pair(edit, bit__9044, idx__9045)
      }else {
        if("\ufdd0'else") {
          return inode__9043
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__9049 = this;
  var inode__9050 = this;
  if(e === this__9049.edit) {
    return inode__9050
  }else {
    var n__9051 = cljs.core.bit_count.call(null, this__9049.bitmap);
    var new_arr__9052 = cljs.core.make_array.call(null, n__9051 < 0 ? 4 : 2 * (n__9051 + 1));
    cljs.core.array_copy.call(null, this__9049.arr, 0, new_arr__9052, 0, 2 * n__9051);
    return new cljs.core.BitmapIndexedNode(e, this__9049.bitmap, new_arr__9052)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__9053 = this;
  var inode__9054 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9053.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9055 = this;
  var inode__9056 = this;
  var bit__9057 = 1 << (hash >>> shift & 31);
  if((this__9055.bitmap & bit__9057) === 0) {
    return not_found
  }else {
    var idx__9058 = cljs.core.bitmap_indexed_node_index.call(null, this__9055.bitmap, bit__9057);
    var key_or_nil__9059 = this__9055.arr[2 * idx__9058];
    var val_or_node__9060 = this__9055.arr[2 * idx__9058 + 1];
    if(key_or_nil__9059 == null) {
      return val_or_node__9060.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9059)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__9059, val_or_node__9060], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__9061 = this;
  var inode__9062 = this;
  var bit__9063 = 1 << (hash >>> shift & 31);
  if((this__9061.bitmap & bit__9063) === 0) {
    return inode__9062
  }else {
    var idx__9064 = cljs.core.bitmap_indexed_node_index.call(null, this__9061.bitmap, bit__9063);
    var key_or_nil__9065 = this__9061.arr[2 * idx__9064];
    var val_or_node__9066 = this__9061.arr[2 * idx__9064 + 1];
    if(key_or_nil__9065 == null) {
      var n__9067 = val_or_node__9066.inode_without(shift + 5, hash, key);
      if(n__9067 === val_or_node__9066) {
        return inode__9062
      }else {
        if(!(n__9067 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__9061.bitmap, cljs.core.clone_and_set.call(null, this__9061.arr, 2 * idx__9064 + 1, n__9067))
        }else {
          if(this__9061.bitmap === bit__9063) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__9061.bitmap ^ bit__9063, cljs.core.remove_pair.call(null, this__9061.arr, idx__9064))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9065)) {
        return new cljs.core.BitmapIndexedNode(null, this__9061.bitmap ^ bit__9063, cljs.core.remove_pair.call(null, this__9061.arr, idx__9064))
      }else {
        if("\ufdd0'else") {
          return inode__9062
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9068 = this;
  var inode__9069 = this;
  var bit__9070 = 1 << (hash >>> shift & 31);
  var idx__9071 = cljs.core.bitmap_indexed_node_index.call(null, this__9068.bitmap, bit__9070);
  if((this__9068.bitmap & bit__9070) === 0) {
    var n__9072 = cljs.core.bit_count.call(null, this__9068.bitmap);
    if(n__9072 >= 16) {
      var nodes__9073 = cljs.core.make_array.call(null, 32);
      var jdx__9074 = hash >>> shift & 31;
      nodes__9073[jdx__9074] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__9075 = 0;
      var j__9076 = 0;
      while(true) {
        if(i__9075 < 32) {
          if((this__9068.bitmap >>> i__9075 & 1) === 0) {
            var G__9091 = i__9075 + 1;
            var G__9092 = j__9076;
            i__9075 = G__9091;
            j__9076 = G__9092;
            continue
          }else {
            nodes__9073[i__9075] = !(this__9068.arr[j__9076] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__9068.arr[j__9076]), this__9068.arr[j__9076], this__9068.arr[j__9076 + 1], added_leaf_QMARK_) : this__9068.arr[j__9076 + 1];
            var G__9093 = i__9075 + 1;
            var G__9094 = j__9076 + 2;
            i__9075 = G__9093;
            j__9076 = G__9094;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__9072 + 1, nodes__9073)
    }else {
      var new_arr__9077 = cljs.core.make_array.call(null, 2 * (n__9072 + 1));
      cljs.core.array_copy.call(null, this__9068.arr, 0, new_arr__9077, 0, 2 * idx__9071);
      new_arr__9077[2 * idx__9071] = key;
      new_arr__9077[2 * idx__9071 + 1] = val;
      cljs.core.array_copy.call(null, this__9068.arr, 2 * idx__9071, new_arr__9077, 2 * (idx__9071 + 1), 2 * (n__9072 - idx__9071));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__9068.bitmap | bit__9070, new_arr__9077)
    }
  }else {
    var key_or_nil__9078 = this__9068.arr[2 * idx__9071];
    var val_or_node__9079 = this__9068.arr[2 * idx__9071 + 1];
    if(key_or_nil__9078 == null) {
      var n__9080 = val_or_node__9079.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9080 === val_or_node__9079) {
        return inode__9069
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__9068.bitmap, cljs.core.clone_and_set.call(null, this__9068.arr, 2 * idx__9071 + 1, n__9080))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9078)) {
        if(val === val_or_node__9079) {
          return inode__9069
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__9068.bitmap, cljs.core.clone_and_set.call(null, this__9068.arr, 2 * idx__9071 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__9068.bitmap, cljs.core.clone_and_set.call(null, this__9068.arr, 2 * idx__9071, null, 2 * idx__9071 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__9078, val_or_node__9079, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9081 = this;
  var inode__9082 = this;
  var bit__9083 = 1 << (hash >>> shift & 31);
  if((this__9081.bitmap & bit__9083) === 0) {
    return not_found
  }else {
    var idx__9084 = cljs.core.bitmap_indexed_node_index.call(null, this__9081.bitmap, bit__9083);
    var key_or_nil__9085 = this__9081.arr[2 * idx__9084];
    var val_or_node__9086 = this__9081.arr[2 * idx__9084 + 1];
    if(key_or_nil__9085 == null) {
      return val_or_node__9086.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9085)) {
        return val_or_node__9086
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__9102 = array_node.arr;
  var len__9103 = 2 * (array_node.cnt - 1);
  var new_arr__9104 = cljs.core.make_array.call(null, len__9103);
  var i__9105 = 0;
  var j__9106 = 1;
  var bitmap__9107 = 0;
  while(true) {
    if(i__9105 < len__9103) {
      if(function() {
        var and__3822__auto____9108 = !(i__9105 === idx);
        if(and__3822__auto____9108) {
          return!(arr__9102[i__9105] == null)
        }else {
          return and__3822__auto____9108
        }
      }()) {
        new_arr__9104[j__9106] = arr__9102[i__9105];
        var G__9109 = i__9105 + 1;
        var G__9110 = j__9106 + 2;
        var G__9111 = bitmap__9107 | 1 << i__9105;
        i__9105 = G__9109;
        j__9106 = G__9110;
        bitmap__9107 = G__9111;
        continue
      }else {
        var G__9112 = i__9105 + 1;
        var G__9113 = j__9106;
        var G__9114 = bitmap__9107;
        i__9105 = G__9112;
        j__9106 = G__9113;
        bitmap__9107 = G__9114;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__9107, new_arr__9104)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9115 = this;
  var inode__9116 = this;
  var idx__9117 = hash >>> shift & 31;
  var node__9118 = this__9115.arr[idx__9117];
  if(node__9118 == null) {
    var editable__9119 = cljs.core.edit_and_set.call(null, inode__9116, edit, idx__9117, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__9119.cnt = editable__9119.cnt + 1;
    return editable__9119
  }else {
    var n__9120 = node__9118.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9120 === node__9118) {
      return inode__9116
    }else {
      return cljs.core.edit_and_set.call(null, inode__9116, edit, idx__9117, n__9120)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__9121 = this;
  var inode__9122 = this;
  return cljs.core.create_array_node_seq.call(null, this__9121.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9123 = this;
  var inode__9124 = this;
  var idx__9125 = hash >>> shift & 31;
  var node__9126 = this__9123.arr[idx__9125];
  if(node__9126 == null) {
    return inode__9124
  }else {
    var n__9127 = node__9126.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__9127 === node__9126) {
      return inode__9124
    }else {
      if(n__9127 == null) {
        if(this__9123.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9124, edit, idx__9125)
        }else {
          var editable__9128 = cljs.core.edit_and_set.call(null, inode__9124, edit, idx__9125, n__9127);
          editable__9128.cnt = editable__9128.cnt - 1;
          return editable__9128
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__9124, edit, idx__9125, n__9127)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__9129 = this;
  var inode__9130 = this;
  if(e === this__9129.edit) {
    return inode__9130
  }else {
    return new cljs.core.ArrayNode(e, this__9129.cnt, this__9129.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__9131 = this;
  var inode__9132 = this;
  var len__9133 = this__9131.arr.length;
  var i__9134 = 0;
  var init__9135 = init;
  while(true) {
    if(i__9134 < len__9133) {
      var node__9136 = this__9131.arr[i__9134];
      if(!(node__9136 == null)) {
        var init__9137 = node__9136.kv_reduce(f, init__9135);
        if(cljs.core.reduced_QMARK_.call(null, init__9137)) {
          return cljs.core.deref.call(null, init__9137)
        }else {
          var G__9156 = i__9134 + 1;
          var G__9157 = init__9137;
          i__9134 = G__9156;
          init__9135 = G__9157;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__9135
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9138 = this;
  var inode__9139 = this;
  var idx__9140 = hash >>> shift & 31;
  var node__9141 = this__9138.arr[idx__9140];
  if(!(node__9141 == null)) {
    return node__9141.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__9142 = this;
  var inode__9143 = this;
  var idx__9144 = hash >>> shift & 31;
  var node__9145 = this__9142.arr[idx__9144];
  if(!(node__9145 == null)) {
    var n__9146 = node__9145.inode_without(shift + 5, hash, key);
    if(n__9146 === node__9145) {
      return inode__9143
    }else {
      if(n__9146 == null) {
        if(this__9142.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__9143, null, idx__9144)
        }else {
          return new cljs.core.ArrayNode(null, this__9142.cnt - 1, cljs.core.clone_and_set.call(null, this__9142.arr, idx__9144, n__9146))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__9142.cnt, cljs.core.clone_and_set.call(null, this__9142.arr, idx__9144, n__9146))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__9143
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9147 = this;
  var inode__9148 = this;
  var idx__9149 = hash >>> shift & 31;
  var node__9150 = this__9147.arr[idx__9149];
  if(node__9150 == null) {
    return new cljs.core.ArrayNode(null, this__9147.cnt + 1, cljs.core.clone_and_set.call(null, this__9147.arr, idx__9149, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__9151 = node__9150.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__9151 === node__9150) {
      return inode__9148
    }else {
      return new cljs.core.ArrayNode(null, this__9147.cnt, cljs.core.clone_and_set.call(null, this__9147.arr, idx__9149, n__9151))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9152 = this;
  var inode__9153 = this;
  var idx__9154 = hash >>> shift & 31;
  var node__9155 = this__9152.arr[idx__9154];
  if(!(node__9155 == null)) {
    return node__9155.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__9160 = 2 * cnt;
  var i__9161 = 0;
  while(true) {
    if(i__9161 < lim__9160) {
      if(cljs.core.key_test.call(null, key, arr[i__9161])) {
        return i__9161
      }else {
        var G__9162 = i__9161 + 2;
        i__9161 = G__9162;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9163 = this;
  var inode__9164 = this;
  if(hash === this__9163.collision_hash) {
    var idx__9165 = cljs.core.hash_collision_node_find_index.call(null, this__9163.arr, this__9163.cnt, key);
    if(idx__9165 === -1) {
      if(this__9163.arr.length > 2 * this__9163.cnt) {
        var editable__9166 = cljs.core.edit_and_set.call(null, inode__9164, edit, 2 * this__9163.cnt, key, 2 * this__9163.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__9166.cnt = editable__9166.cnt + 1;
        return editable__9166
      }else {
        var len__9167 = this__9163.arr.length;
        var new_arr__9168 = cljs.core.make_array.call(null, len__9167 + 2);
        cljs.core.array_copy.call(null, this__9163.arr, 0, new_arr__9168, 0, len__9167);
        new_arr__9168[len__9167] = key;
        new_arr__9168[len__9167 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__9164.ensure_editable_array(edit, this__9163.cnt + 1, new_arr__9168)
      }
    }else {
      if(this__9163.arr[idx__9165 + 1] === val) {
        return inode__9164
      }else {
        return cljs.core.edit_and_set.call(null, inode__9164, edit, idx__9165 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__9163.collision_hash >>> shift & 31), [null, inode__9164, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__9169 = this;
  var inode__9170 = this;
  return cljs.core.create_inode_seq.call(null, this__9169.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9171 = this;
  var inode__9172 = this;
  var idx__9173 = cljs.core.hash_collision_node_find_index.call(null, this__9171.arr, this__9171.cnt, key);
  if(idx__9173 === -1) {
    return inode__9172
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__9171.cnt === 1) {
      return null
    }else {
      var editable__9174 = inode__9172.ensure_editable(edit);
      var earr__9175 = editable__9174.arr;
      earr__9175[idx__9173] = earr__9175[2 * this__9171.cnt - 2];
      earr__9175[idx__9173 + 1] = earr__9175[2 * this__9171.cnt - 1];
      earr__9175[2 * this__9171.cnt - 1] = null;
      earr__9175[2 * this__9171.cnt - 2] = null;
      editable__9174.cnt = editable__9174.cnt - 1;
      return editable__9174
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__9176 = this;
  var inode__9177 = this;
  if(e === this__9176.edit) {
    return inode__9177
  }else {
    var new_arr__9178 = cljs.core.make_array.call(null, 2 * (this__9176.cnt + 1));
    cljs.core.array_copy.call(null, this__9176.arr, 0, new_arr__9178, 0, 2 * this__9176.cnt);
    return new cljs.core.HashCollisionNode(e, this__9176.collision_hash, this__9176.cnt, new_arr__9178)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__9179 = this;
  var inode__9180 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9179.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9181 = this;
  var inode__9182 = this;
  var idx__9183 = cljs.core.hash_collision_node_find_index.call(null, this__9181.arr, this__9181.cnt, key);
  if(idx__9183 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9181.arr[idx__9183])) {
      return cljs.core.PersistentVector.fromArray([this__9181.arr[idx__9183], this__9181.arr[idx__9183 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__9184 = this;
  var inode__9185 = this;
  var idx__9186 = cljs.core.hash_collision_node_find_index.call(null, this__9184.arr, this__9184.cnt, key);
  if(idx__9186 === -1) {
    return inode__9185
  }else {
    if(this__9184.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__9184.collision_hash, this__9184.cnt - 1, cljs.core.remove_pair.call(null, this__9184.arr, cljs.core.quot.call(null, idx__9186, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9187 = this;
  var inode__9188 = this;
  if(hash === this__9187.collision_hash) {
    var idx__9189 = cljs.core.hash_collision_node_find_index.call(null, this__9187.arr, this__9187.cnt, key);
    if(idx__9189 === -1) {
      var len__9190 = this__9187.arr.length;
      var new_arr__9191 = cljs.core.make_array.call(null, len__9190 + 2);
      cljs.core.array_copy.call(null, this__9187.arr, 0, new_arr__9191, 0, len__9190);
      new_arr__9191[len__9190] = key;
      new_arr__9191[len__9190 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__9187.collision_hash, this__9187.cnt + 1, new_arr__9191)
    }else {
      if(cljs.core._EQ_.call(null, this__9187.arr[idx__9189], val)) {
        return inode__9188
      }else {
        return new cljs.core.HashCollisionNode(null, this__9187.collision_hash, this__9187.cnt, cljs.core.clone_and_set.call(null, this__9187.arr, idx__9189 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__9187.collision_hash >>> shift & 31), [null, inode__9188])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9192 = this;
  var inode__9193 = this;
  var idx__9194 = cljs.core.hash_collision_node_find_index.call(null, this__9192.arr, this__9192.cnt, key);
  if(idx__9194 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__9192.arr[idx__9194])) {
      return this__9192.arr[idx__9194 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__9195 = this;
  var inode__9196 = this;
  if(e === this__9195.edit) {
    this__9195.arr = array;
    this__9195.cnt = count;
    return inode__9196
  }else {
    return new cljs.core.HashCollisionNode(this__9195.edit, this__9195.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9201 = cljs.core.hash.call(null, key1);
    if(key1hash__9201 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9201, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9202 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__9201, key1, val1, added_leaf_QMARK___9202).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___9202)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__9203 = cljs.core.hash.call(null, key1);
    if(key1hash__9203 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__9203, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___9204 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__9203, key1, val1, added_leaf_QMARK___9204).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___9204)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9205 = this;
  var h__2153__auto____9206 = this__9205.__hash;
  if(!(h__2153__auto____9206 == null)) {
    return h__2153__auto____9206
  }else {
    var h__2153__auto____9207 = cljs.core.hash_coll.call(null, coll);
    this__9205.__hash = h__2153__auto____9207;
    return h__2153__auto____9207
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9208 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__9209 = this;
  var this__9210 = this;
  return cljs.core.pr_str.call(null, this__9210)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9211 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9212 = this;
  if(this__9212.s == null) {
    return cljs.core.PersistentVector.fromArray([this__9212.nodes[this__9212.i], this__9212.nodes[this__9212.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__9212.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9213 = this;
  if(this__9213.s == null) {
    return cljs.core.create_inode_seq.call(null, this__9213.nodes, this__9213.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__9213.nodes, this__9213.i, cljs.core.next.call(null, this__9213.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9214 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9215 = this;
  return new cljs.core.NodeSeq(meta, this__9215.nodes, this__9215.i, this__9215.s, this__9215.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9216 = this;
  return this__9216.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9217 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9217.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__9224 = nodes.length;
      var j__9225 = i;
      while(true) {
        if(j__9225 < len__9224) {
          if(!(nodes[j__9225] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__9225, null, null)
          }else {
            var temp__3971__auto____9226 = nodes[j__9225 + 1];
            if(cljs.core.truth_(temp__3971__auto____9226)) {
              var node__9227 = temp__3971__auto____9226;
              var temp__3971__auto____9228 = node__9227.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____9228)) {
                var node_seq__9229 = temp__3971__auto____9228;
                return new cljs.core.NodeSeq(null, nodes, j__9225 + 2, node_seq__9229, null)
              }else {
                var G__9230 = j__9225 + 2;
                j__9225 = G__9230;
                continue
              }
            }else {
              var G__9231 = j__9225 + 2;
              j__9225 = G__9231;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9232 = this;
  var h__2153__auto____9233 = this__9232.__hash;
  if(!(h__2153__auto____9233 == null)) {
    return h__2153__auto____9233
  }else {
    var h__2153__auto____9234 = cljs.core.hash_coll.call(null, coll);
    this__9232.__hash = h__2153__auto____9234;
    return h__2153__auto____9234
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9235 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__9236 = this;
  var this__9237 = this;
  return cljs.core.pr_str.call(null, this__9237)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9238 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9239 = this;
  return cljs.core.first.call(null, this__9239.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9240 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__9240.nodes, this__9240.i, cljs.core.next.call(null, this__9240.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9241 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9242 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__9242.nodes, this__9242.i, this__9242.s, this__9242.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9243 = this;
  return this__9243.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9244 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9244.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__9251 = nodes.length;
      var j__9252 = i;
      while(true) {
        if(j__9252 < len__9251) {
          var temp__3971__auto____9253 = nodes[j__9252];
          if(cljs.core.truth_(temp__3971__auto____9253)) {
            var nj__9254 = temp__3971__auto____9253;
            var temp__3971__auto____9255 = nj__9254.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____9255)) {
              var ns__9256 = temp__3971__auto____9255;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__9252 + 1, ns__9256, null)
            }else {
              var G__9257 = j__9252 + 1;
              j__9252 = G__9257;
              continue
            }
          }else {
            var G__9258 = j__9252 + 1;
            j__9252 = G__9258;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
void 0;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9261 = this;
  return new cljs.core.TransientHashMap({}, this__9261.root, this__9261.cnt, this__9261.has_nil_QMARK_, this__9261.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9262 = this;
  var h__2153__auto____9263 = this__9262.__hash;
  if(!(h__2153__auto____9263 == null)) {
    return h__2153__auto____9263
  }else {
    var h__2153__auto____9264 = cljs.core.hash_imap.call(null, coll);
    this__9262.__hash = h__2153__auto____9264;
    return h__2153__auto____9264
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9265 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9266 = this;
  if(k == null) {
    if(this__9266.has_nil_QMARK_) {
      return this__9266.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9266.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__9266.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9267 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____9268 = this__9267.has_nil_QMARK_;
      if(and__3822__auto____9268) {
        return v === this__9267.nil_val
      }else {
        return and__3822__auto____9268
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9267.meta, this__9267.has_nil_QMARK_ ? this__9267.cnt : this__9267.cnt + 1, this__9267.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___9269 = new cljs.core.Box(false);
    var new_root__9270 = (this__9267.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9267.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9269);
    if(new_root__9270 === this__9267.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__9267.meta, added_leaf_QMARK___9269.val ? this__9267.cnt + 1 : this__9267.cnt, new_root__9270, this__9267.has_nil_QMARK_, this__9267.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9271 = this;
  if(k == null) {
    return this__9271.has_nil_QMARK_
  }else {
    if(this__9271.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__9271.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9294 = null;
  var G__9294__2 = function(this_sym9272, k) {
    var this__9274 = this;
    var this_sym9272__9275 = this;
    var coll__9276 = this_sym9272__9275;
    return coll__9276.cljs$core$ILookup$_lookup$arity$2(coll__9276, k)
  };
  var G__9294__3 = function(this_sym9273, k, not_found) {
    var this__9274 = this;
    var this_sym9273__9277 = this;
    var coll__9278 = this_sym9273__9277;
    return coll__9278.cljs$core$ILookup$_lookup$arity$3(coll__9278, k, not_found)
  };
  G__9294 = function(this_sym9273, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9294__2.call(this, this_sym9273, k);
      case 3:
        return G__9294__3.call(this, this_sym9273, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9294
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym9259, args9260) {
  var this__9279 = this;
  return this_sym9259.call.apply(this_sym9259, [this_sym9259].concat(args9260.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9280 = this;
  var init__9281 = this__9280.has_nil_QMARK_ ? f.call(null, init, null, this__9280.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__9281)) {
    return cljs.core.deref.call(null, init__9281)
  }else {
    if(!(this__9280.root == null)) {
      return this__9280.root.kv_reduce(f, init__9281)
    }else {
      if("\ufdd0'else") {
        return init__9281
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9282 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__9283 = this;
  var this__9284 = this;
  return cljs.core.pr_str.call(null, this__9284)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9285 = this;
  if(this__9285.cnt > 0) {
    var s__9286 = !(this__9285.root == null) ? this__9285.root.inode_seq() : null;
    if(this__9285.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__9285.nil_val], true), s__9286)
    }else {
      return s__9286
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9287 = this;
  return this__9287.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9288 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9289 = this;
  return new cljs.core.PersistentHashMap(meta, this__9289.cnt, this__9289.root, this__9289.has_nil_QMARK_, this__9289.nil_val, this__9289.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9290 = this;
  return this__9290.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9291 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__9291.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9292 = this;
  if(k == null) {
    if(this__9292.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__9292.meta, this__9292.cnt - 1, this__9292.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__9292.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__9293 = this__9292.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__9293 === this__9292.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__9292.meta, this__9292.cnt - 1, new_root__9293, this__9292.has_nil_QMARK_, this__9292.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__9295 = ks.length;
  var i__9296 = 0;
  var out__9297 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__9296 < len__9295) {
      var G__9298 = i__9296 + 1;
      var G__9299 = cljs.core.assoc_BANG_.call(null, out__9297, ks[i__9296], vs[i__9296]);
      i__9296 = G__9298;
      out__9297 = G__9299;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9297)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9300 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9301 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__9302 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9303 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9304 = this;
  if(k == null) {
    if(this__9304.has_nil_QMARK_) {
      return this__9304.nil_val
    }else {
      return null
    }
  }else {
    if(this__9304.root == null) {
      return null
    }else {
      return this__9304.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9305 = this;
  if(k == null) {
    if(this__9305.has_nil_QMARK_) {
      return this__9305.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__9305.root == null) {
      return not_found
    }else {
      return this__9305.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9306 = this;
  if(this__9306.edit) {
    return this__9306.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__9307 = this;
  var tcoll__9308 = this;
  if(this__9307.edit) {
    if(function() {
      var G__9309__9310 = o;
      if(G__9309__9310) {
        if(function() {
          var or__3824__auto____9311 = G__9309__9310.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____9311) {
            return or__3824__auto____9311
          }else {
            return G__9309__9310.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9309__9310.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9309__9310)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9309__9310)
      }
    }()) {
      return tcoll__9308.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9312 = cljs.core.seq.call(null, o);
      var tcoll__9313 = tcoll__9308;
      while(true) {
        var temp__3971__auto____9314 = cljs.core.first.call(null, es__9312);
        if(cljs.core.truth_(temp__3971__auto____9314)) {
          var e__9315 = temp__3971__auto____9314;
          var G__9326 = cljs.core.next.call(null, es__9312);
          var G__9327 = tcoll__9313.assoc_BANG_(cljs.core.key.call(null, e__9315), cljs.core.val.call(null, e__9315));
          es__9312 = G__9326;
          tcoll__9313 = G__9327;
          continue
        }else {
          return tcoll__9313
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__9316 = this;
  var tcoll__9317 = this;
  if(this__9316.edit) {
    if(k == null) {
      if(this__9316.nil_val === v) {
      }else {
        this__9316.nil_val = v
      }
      if(this__9316.has_nil_QMARK_) {
      }else {
        this__9316.count = this__9316.count + 1;
        this__9316.has_nil_QMARK_ = true
      }
      return tcoll__9317
    }else {
      var added_leaf_QMARK___9318 = new cljs.core.Box(false);
      var node__9319 = (this__9316.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__9316.root).inode_assoc_BANG_(this__9316.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___9318);
      if(node__9319 === this__9316.root) {
      }else {
        this__9316.root = node__9319
      }
      if(added_leaf_QMARK___9318.val) {
        this__9316.count = this__9316.count + 1
      }else {
      }
      return tcoll__9317
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__9320 = this;
  var tcoll__9321 = this;
  if(this__9320.edit) {
    if(k == null) {
      if(this__9320.has_nil_QMARK_) {
        this__9320.has_nil_QMARK_ = false;
        this__9320.nil_val = null;
        this__9320.count = this__9320.count - 1;
        return tcoll__9321
      }else {
        return tcoll__9321
      }
    }else {
      if(this__9320.root == null) {
        return tcoll__9321
      }else {
        var removed_leaf_QMARK___9322 = new cljs.core.Box(false);
        var node__9323 = this__9320.root.inode_without_BANG_(this__9320.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___9322);
        if(node__9323 === this__9320.root) {
        }else {
          this__9320.root = node__9323
        }
        if(cljs.core.truth_(removed_leaf_QMARK___9322[0])) {
          this__9320.count = this__9320.count - 1
        }else {
        }
        return tcoll__9321
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__9324 = this;
  var tcoll__9325 = this;
  if(this__9324.edit) {
    this__9324.edit = null;
    return new cljs.core.PersistentHashMap(null, this__9324.count, this__9324.root, this__9324.has_nil_QMARK_, this__9324.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__9330 = node;
  var stack__9331 = stack;
  while(true) {
    if(!(t__9330 == null)) {
      var G__9332 = ascending_QMARK_ ? t__9330.left : t__9330.right;
      var G__9333 = cljs.core.conj.call(null, stack__9331, t__9330);
      t__9330 = G__9332;
      stack__9331 = G__9333;
      continue
    }else {
      return stack__9331
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9334 = this;
  var h__2153__auto____9335 = this__9334.__hash;
  if(!(h__2153__auto____9335 == null)) {
    return h__2153__auto____9335
  }else {
    var h__2153__auto____9336 = cljs.core.hash_coll.call(null, coll);
    this__9334.__hash = h__2153__auto____9336;
    return h__2153__auto____9336
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9337 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__9338 = this;
  var this__9339 = this;
  return cljs.core.pr_str.call(null, this__9339)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__9340 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9341 = this;
  if(this__9341.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__9341.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__9342 = this;
  return cljs.core.peek.call(null, this__9342.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__9343 = this;
  var t__9344 = cljs.core.first.call(null, this__9343.stack);
  var next_stack__9345 = cljs.core.tree_map_seq_push.call(null, this__9343.ascending_QMARK_ ? t__9344.right : t__9344.left, cljs.core.next.call(null, this__9343.stack), this__9343.ascending_QMARK_);
  if(!(next_stack__9345 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__9345, this__9343.ascending_QMARK_, this__9343.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9346 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9347 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__9347.stack, this__9347.ascending_QMARK_, this__9347.cnt, this__9347.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9348 = this;
  return this__9348.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
void 0;
void 0;
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____9350 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____9350) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____9350
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____9352 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____9352) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____9352
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__9356 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__9356)) {
    return cljs.core.deref.call(null, init__9356)
  }else {
    var init__9357 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__9356) : init__9356;
    if(cljs.core.reduced_QMARK_.call(null, init__9357)) {
      return cljs.core.deref.call(null, init__9357)
    }else {
      var init__9358 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__9357) : init__9357;
      if(cljs.core.reduced_QMARK_.call(null, init__9358)) {
        return cljs.core.deref.call(null, init__9358)
      }else {
        return init__9358
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9361 = this;
  var h__2153__auto____9362 = this__9361.__hash;
  if(!(h__2153__auto____9362 == null)) {
    return h__2153__auto____9362
  }else {
    var h__2153__auto____9363 = cljs.core.hash_coll.call(null, coll);
    this__9361.__hash = h__2153__auto____9363;
    return h__2153__auto____9363
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9364 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9365 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9366 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9366.key, this__9366.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9414 = null;
  var G__9414__2 = function(this_sym9367, k) {
    var this__9369 = this;
    var this_sym9367__9370 = this;
    var node__9371 = this_sym9367__9370;
    return node__9371.cljs$core$ILookup$_lookup$arity$2(node__9371, k)
  };
  var G__9414__3 = function(this_sym9368, k, not_found) {
    var this__9369 = this;
    var this_sym9368__9372 = this;
    var node__9373 = this_sym9368__9372;
    return node__9373.cljs$core$ILookup$_lookup$arity$3(node__9373, k, not_found)
  };
  G__9414 = function(this_sym9368, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9414__2.call(this, this_sym9368, k);
      case 3:
        return G__9414__3.call(this, this_sym9368, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9414
}();
cljs.core.BlackNode.prototype.apply = function(this_sym9359, args9360) {
  var this__9374 = this;
  return this_sym9359.call.apply(this_sym9359, [this_sym9359].concat(args9360.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9375 = this;
  return cljs.core.PersistentVector.fromArray([this__9375.key, this__9375.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9376 = this;
  return this__9376.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9377 = this;
  return this__9377.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__9378 = this;
  var node__9379 = this;
  return ins.balance_right(node__9379)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__9380 = this;
  var node__9381 = this;
  return new cljs.core.RedNode(this__9380.key, this__9380.val, this__9380.left, this__9380.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__9382 = this;
  var node__9383 = this;
  return cljs.core.balance_right_del.call(null, this__9382.key, this__9382.val, this__9382.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__9384 = this;
  var node__9385 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__9386 = this;
  var node__9387 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__9387, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__9388 = this;
  var node__9389 = this;
  return cljs.core.balance_left_del.call(null, this__9388.key, this__9388.val, del, this__9388.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__9390 = this;
  var node__9391 = this;
  return ins.balance_left(node__9391)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__9392 = this;
  var node__9393 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__9393, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__9415 = null;
  var G__9415__0 = function() {
    var this__9394 = this;
    var this__9396 = this;
    return cljs.core.pr_str.call(null, this__9396)
  };
  G__9415 = function() {
    switch(arguments.length) {
      case 0:
        return G__9415__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9415
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__9397 = this;
  var node__9398 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__9398, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__9399 = this;
  var node__9400 = this;
  return node__9400
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__9401 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__9402 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__9403 = this;
  return cljs.core.list.call(null, this__9403.key, this__9403.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__9404 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__9405 = this;
  return this__9405.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__9406 = this;
  return cljs.core.PersistentVector.fromArray([this__9406.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__9407 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__9407.key, this__9407.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9408 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__9409 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__9409.key, this__9409.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__9410 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__9411 = this;
  if(n === 0) {
    return this__9411.key
  }else {
    if(n === 1) {
      return this__9411.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__9412 = this;
  if(n === 0) {
    return this__9412.key
  }else {
    if(n === 1) {
      return this__9412.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__9413 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9418 = this;
  var h__2153__auto____9419 = this__9418.__hash;
  if(!(h__2153__auto____9419 == null)) {
    return h__2153__auto____9419
  }else {
    var h__2153__auto____9420 = cljs.core.hash_coll.call(null, coll);
    this__9418.__hash = h__2153__auto____9420;
    return h__2153__auto____9420
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__9421 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__9422 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__9423 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__9423.key, this__9423.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__9471 = null;
  var G__9471__2 = function(this_sym9424, k) {
    var this__9426 = this;
    var this_sym9424__9427 = this;
    var node__9428 = this_sym9424__9427;
    return node__9428.cljs$core$ILookup$_lookup$arity$2(node__9428, k)
  };
  var G__9471__3 = function(this_sym9425, k, not_found) {
    var this__9426 = this;
    var this_sym9425__9429 = this;
    var node__9430 = this_sym9425__9429;
    return node__9430.cljs$core$ILookup$_lookup$arity$3(node__9430, k, not_found)
  };
  G__9471 = function(this_sym9425, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9471__2.call(this, this_sym9425, k);
      case 3:
        return G__9471__3.call(this, this_sym9425, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9471
}();
cljs.core.RedNode.prototype.apply = function(this_sym9416, args9417) {
  var this__9431 = this;
  return this_sym9416.call.apply(this_sym9416, [this_sym9416].concat(args9417.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__9432 = this;
  return cljs.core.PersistentVector.fromArray([this__9432.key, this__9432.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__9433 = this;
  return this__9433.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__9434 = this;
  return this__9434.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__9435 = this;
  var node__9436 = this;
  return new cljs.core.RedNode(this__9435.key, this__9435.val, this__9435.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__9437 = this;
  var node__9438 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__9439 = this;
  var node__9440 = this;
  return new cljs.core.RedNode(this__9439.key, this__9439.val, this__9439.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__9441 = this;
  var node__9442 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__9443 = this;
  var node__9444 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__9444, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__9445 = this;
  var node__9446 = this;
  return new cljs.core.RedNode(this__9445.key, this__9445.val, del, this__9445.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__9447 = this;
  var node__9448 = this;
  return new cljs.core.RedNode(this__9447.key, this__9447.val, ins, this__9447.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__9449 = this;
  var node__9450 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9449.left)) {
    return new cljs.core.RedNode(this__9449.key, this__9449.val, this__9449.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__9449.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9449.right)) {
      return new cljs.core.RedNode(this__9449.right.key, this__9449.right.val, new cljs.core.BlackNode(this__9449.key, this__9449.val, this__9449.left, this__9449.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__9449.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__9450, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__9472 = null;
  var G__9472__0 = function() {
    var this__9451 = this;
    var this__9453 = this;
    return cljs.core.pr_str.call(null, this__9453)
  };
  G__9472 = function() {
    switch(arguments.length) {
      case 0:
        return G__9472__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9472
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__9454 = this;
  var node__9455 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9454.right)) {
    return new cljs.core.RedNode(this__9454.key, this__9454.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__9454.left, null), this__9454.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__9454.left)) {
      return new cljs.core.RedNode(this__9454.left.key, this__9454.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__9454.left.left, null), new cljs.core.BlackNode(this__9454.key, this__9454.val, this__9454.left.right, this__9454.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__9455, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__9456 = this;
  var node__9457 = this;
  return new cljs.core.BlackNode(this__9456.key, this__9456.val, this__9456.left, this__9456.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__9458 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__9459 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__9460 = this;
  return cljs.core.list.call(null, this__9460.key, this__9460.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__9461 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__9462 = this;
  return this__9462.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__9463 = this;
  return cljs.core.PersistentVector.fromArray([this__9463.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__9464 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__9464.key, this__9464.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9465 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__9466 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__9466.key, this__9466.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__9467 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__9468 = this;
  if(n === 0) {
    return this__9468.key
  }else {
    if(n === 1) {
      return this__9468.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__9469 = this;
  if(n === 0) {
    return this__9469.key
  }else {
    if(n === 1) {
      return this__9469.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__9470 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__9476 = comp.call(null, k, tree.key);
    if(c__9476 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__9476 < 0) {
        var ins__9477 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__9477 == null)) {
          return tree.add_left(ins__9477)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__9478 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__9478 == null)) {
            return tree.add_right(ins__9478)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__9481 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__9481)) {
            return new cljs.core.RedNode(app__9481.key, app__9481.val, new cljs.core.RedNode(left.key, left.val, left.left, app__9481.left, null), new cljs.core.RedNode(right.key, right.val, app__9481.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__9481, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__9482 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__9482)) {
              return new cljs.core.RedNode(app__9482.key, app__9482.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__9482.left, null), new cljs.core.BlackNode(right.key, right.val, app__9482.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__9482, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__9488 = comp.call(null, k, tree.key);
    if(c__9488 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__9488 < 0) {
        var del__9489 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____9490 = !(del__9489 == null);
          if(or__3824__auto____9490) {
            return or__3824__auto____9490
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__9489, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__9489, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__9491 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____9492 = !(del__9491 == null);
            if(or__3824__auto____9492) {
              return or__3824__auto____9492
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__9491)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__9491, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__9495 = tree.key;
  var c__9496 = comp.call(null, k, tk__9495);
  if(c__9496 === 0) {
    return tree.replace(tk__9495, v, tree.left, tree.right)
  }else {
    if(c__9496 < 0) {
      return tree.replace(tk__9495, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__9495, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
void 0;
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9499 = this;
  var h__2153__auto____9500 = this__9499.__hash;
  if(!(h__2153__auto____9500 == null)) {
    return h__2153__auto____9500
  }else {
    var h__2153__auto____9501 = cljs.core.hash_imap.call(null, coll);
    this__9499.__hash = h__2153__auto____9501;
    return h__2153__auto____9501
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9502 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9503 = this;
  var n__9504 = coll.entry_at(k);
  if(!(n__9504 == null)) {
    return n__9504.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9505 = this;
  var found__9506 = [null];
  var t__9507 = cljs.core.tree_map_add.call(null, this__9505.comp, this__9505.tree, k, v, found__9506);
  if(t__9507 == null) {
    var found_node__9508 = cljs.core.nth.call(null, found__9506, 0);
    if(cljs.core._EQ_.call(null, v, found_node__9508.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__9505.comp, cljs.core.tree_map_replace.call(null, this__9505.comp, this__9505.tree, k, v), this__9505.cnt, this__9505.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__9505.comp, t__9507.blacken(), this__9505.cnt + 1, this__9505.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9509 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__9543 = null;
  var G__9543__2 = function(this_sym9510, k) {
    var this__9512 = this;
    var this_sym9510__9513 = this;
    var coll__9514 = this_sym9510__9513;
    return coll__9514.cljs$core$ILookup$_lookup$arity$2(coll__9514, k)
  };
  var G__9543__3 = function(this_sym9511, k, not_found) {
    var this__9512 = this;
    var this_sym9511__9515 = this;
    var coll__9516 = this_sym9511__9515;
    return coll__9516.cljs$core$ILookup$_lookup$arity$3(coll__9516, k, not_found)
  };
  G__9543 = function(this_sym9511, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9543__2.call(this, this_sym9511, k);
      case 3:
        return G__9543__3.call(this, this_sym9511, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9543
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym9497, args9498) {
  var this__9517 = this;
  return this_sym9497.call.apply(this_sym9497, [this_sym9497].concat(args9498.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9518 = this;
  if(!(this__9518.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__9518.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9519 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9520 = this;
  if(this__9520.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__9520.tree, false, this__9520.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__9521 = this;
  var this__9522 = this;
  return cljs.core.pr_str.call(null, this__9522)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__9523 = this;
  var coll__9524 = this;
  var t__9525 = this__9523.tree;
  while(true) {
    if(!(t__9525 == null)) {
      var c__9526 = this__9523.comp.call(null, k, t__9525.key);
      if(c__9526 === 0) {
        return t__9525
      }else {
        if(c__9526 < 0) {
          var G__9544 = t__9525.left;
          t__9525 = G__9544;
          continue
        }else {
          if("\ufdd0'else") {
            var G__9545 = t__9525.right;
            t__9525 = G__9545;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__9527 = this;
  if(this__9527.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__9527.tree, ascending_QMARK_, this__9527.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__9528 = this;
  if(this__9528.cnt > 0) {
    var stack__9529 = null;
    var t__9530 = this__9528.tree;
    while(true) {
      if(!(t__9530 == null)) {
        var c__9531 = this__9528.comp.call(null, k, t__9530.key);
        if(c__9531 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__9529, t__9530), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__9531 < 0) {
              var G__9546 = cljs.core.conj.call(null, stack__9529, t__9530);
              var G__9547 = t__9530.left;
              stack__9529 = G__9546;
              t__9530 = G__9547;
              continue
            }else {
              var G__9548 = stack__9529;
              var G__9549 = t__9530.right;
              stack__9529 = G__9548;
              t__9530 = G__9549;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__9531 > 0) {
                var G__9550 = cljs.core.conj.call(null, stack__9529, t__9530);
                var G__9551 = t__9530.right;
                stack__9529 = G__9550;
                t__9530 = G__9551;
                continue
              }else {
                var G__9552 = stack__9529;
                var G__9553 = t__9530.left;
                stack__9529 = G__9552;
                t__9530 = G__9553;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__9529 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__9529, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__9532 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__9533 = this;
  return this__9533.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9534 = this;
  if(this__9534.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__9534.tree, true, this__9534.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9535 = this;
  return this__9535.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9536 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9537 = this;
  return new cljs.core.PersistentTreeMap(this__9537.comp, this__9537.tree, this__9537.cnt, meta, this__9537.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9538 = this;
  return this__9538.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9539 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__9539.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9540 = this;
  var found__9541 = [null];
  var t__9542 = cljs.core.tree_map_remove.call(null, this__9540.comp, this__9540.tree, k, found__9541);
  if(t__9542 == null) {
    if(cljs.core.nth.call(null, found__9541, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__9540.comp, null, 0, this__9540.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__9540.comp, t__9542.blacken(), this__9540.cnt - 1, this__9540.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__9556 = cljs.core.seq.call(null, keyvals);
    var out__9557 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__9556) {
        var G__9558 = cljs.core.nnext.call(null, in__9556);
        var G__9559 = cljs.core.assoc_BANG_.call(null, out__9557, cljs.core.first.call(null, in__9556), cljs.core.second.call(null, in__9556));
        in__9556 = G__9558;
        out__9557 = G__9559;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9557)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__9560) {
    var keyvals = cljs.core.seq(arglist__9560);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__9561) {
    var keyvals = cljs.core.seq(arglist__9561);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__9564 = cljs.core.seq.call(null, keyvals);
    var out__9565 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__9564) {
        var G__9566 = cljs.core.nnext.call(null, in__9564);
        var G__9567 = cljs.core.assoc.call(null, out__9565, cljs.core.first.call(null, in__9564), cljs.core.second.call(null, in__9564));
        in__9564 = G__9566;
        out__9565 = G__9567;
        continue
      }else {
        return out__9565
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__9568) {
    var keyvals = cljs.core.seq(arglist__9568);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__9571 = cljs.core.seq.call(null, keyvals);
    var out__9572 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__9571) {
        var G__9573 = cljs.core.nnext.call(null, in__9571);
        var G__9574 = cljs.core.assoc.call(null, out__9572, cljs.core.first.call(null, in__9571), cljs.core.second.call(null, in__9571));
        in__9571 = G__9573;
        out__9572 = G__9574;
        continue
      }else {
        return out__9572
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__9575) {
    var comparator = cljs.core.first(arglist__9575);
    var keyvals = cljs.core.rest(arglist__9575);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__9576_SHARP_, p2__9577_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____9579 = p1__9576_SHARP_;
          if(cljs.core.truth_(or__3824__auto____9579)) {
            return or__3824__auto____9579
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__9577_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__9580) {
    var maps = cljs.core.seq(arglist__9580);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__9588 = function(m, e) {
        var k__9586 = cljs.core.first.call(null, e);
        var v__9587 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__9586)) {
          return cljs.core.assoc.call(null, m, k__9586, f.call(null, cljs.core._lookup.call(null, m, k__9586, null), v__9587))
        }else {
          return cljs.core.assoc.call(null, m, k__9586, v__9587)
        }
      };
      var merge2__9590 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__9588, function() {
          var or__3824__auto____9589 = m1;
          if(cljs.core.truth_(or__3824__auto____9589)) {
            return or__3824__auto____9589
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__9590, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__9591) {
    var f = cljs.core.first(arglist__9591);
    var maps = cljs.core.rest(arglist__9591);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__9596 = cljs.core.ObjMap.EMPTY;
  var keys__9597 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__9597) {
      var key__9598 = cljs.core.first.call(null, keys__9597);
      var entry__9599 = cljs.core._lookup.call(null, map, key__9598, "\ufdd0'user/not-found");
      var G__9600 = cljs.core.not_EQ_.call(null, entry__9599, "\ufdd0'user/not-found") ? cljs.core.assoc.call(null, ret__9596, key__9598, entry__9599) : ret__9596;
      var G__9601 = cljs.core.next.call(null, keys__9597);
      ret__9596 = G__9600;
      keys__9597 = G__9601;
      continue
    }else {
      return ret__9596
    }
    break
  }
};
void 0;
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9605 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__9605.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9606 = this;
  var h__2153__auto____9607 = this__9606.__hash;
  if(!(h__2153__auto____9607 == null)) {
    return h__2153__auto____9607
  }else {
    var h__2153__auto____9608 = cljs.core.hash_iset.call(null, coll);
    this__9606.__hash = h__2153__auto____9608;
    return h__2153__auto____9608
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__9609 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__9610 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__9610.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__9631 = null;
  var G__9631__2 = function(this_sym9611, k) {
    var this__9613 = this;
    var this_sym9611__9614 = this;
    var coll__9615 = this_sym9611__9614;
    return coll__9615.cljs$core$ILookup$_lookup$arity$2(coll__9615, k)
  };
  var G__9631__3 = function(this_sym9612, k, not_found) {
    var this__9613 = this;
    var this_sym9612__9616 = this;
    var coll__9617 = this_sym9612__9616;
    return coll__9617.cljs$core$ILookup$_lookup$arity$3(coll__9617, k, not_found)
  };
  G__9631 = function(this_sym9612, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9631__2.call(this, this_sym9612, k);
      case 3:
        return G__9631__3.call(this, this_sym9612, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9631
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym9603, args9604) {
  var this__9618 = this;
  return this_sym9603.call.apply(this_sym9603, [this_sym9603].concat(args9604.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9619 = this;
  return new cljs.core.PersistentHashSet(this__9619.meta, cljs.core.assoc.call(null, this__9619.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__9620 = this;
  var this__9621 = this;
  return cljs.core.pr_str.call(null, this__9621)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9622 = this;
  return cljs.core.keys.call(null, this__9622.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__9623 = this;
  return new cljs.core.PersistentHashSet(this__9623.meta, cljs.core.dissoc.call(null, this__9623.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9624 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9625 = this;
  var and__3822__auto____9626 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____9626) {
    var and__3822__auto____9627 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____9627) {
      return cljs.core.every_QMARK_.call(null, function(p1__9602_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__9602_SHARP_)
      }, other)
    }else {
      return and__3822__auto____9627
    }
  }else {
    return and__3822__auto____9626
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9628 = this;
  return new cljs.core.PersistentHashSet(meta, this__9628.hash_map, this__9628.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9629 = this;
  return this__9629.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9630 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__9630.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__9649 = null;
  var G__9649__2 = function(this_sym9635, k) {
    var this__9637 = this;
    var this_sym9635__9638 = this;
    var tcoll__9639 = this_sym9635__9638;
    if(cljs.core._lookup.call(null, this__9637.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__9649__3 = function(this_sym9636, k, not_found) {
    var this__9637 = this;
    var this_sym9636__9640 = this;
    var tcoll__9641 = this_sym9636__9640;
    if(cljs.core._lookup.call(null, this__9637.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__9649 = function(this_sym9636, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9649__2.call(this, this_sym9636, k);
      case 3:
        return G__9649__3.call(this, this_sym9636, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9649
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym9633, args9634) {
  var this__9642 = this;
  return this_sym9633.call.apply(this_sym9633, [this_sym9633].concat(args9634.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__9643 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__9644 = this;
  if(cljs.core._lookup.call(null, this__9644.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__9645 = this;
  return cljs.core.count.call(null, this__9645.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__9646 = this;
  this__9646.transient_map = cljs.core.dissoc_BANG_.call(null, this__9646.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9647 = this;
  this__9647.transient_map = cljs.core.assoc_BANG_.call(null, this__9647.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9648 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__9648.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9652 = this;
  var h__2153__auto____9653 = this__9652.__hash;
  if(!(h__2153__auto____9653 == null)) {
    return h__2153__auto____9653
  }else {
    var h__2153__auto____9654 = cljs.core.hash_iset.call(null, coll);
    this__9652.__hash = h__2153__auto____9654;
    return h__2153__auto____9654
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__9655 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__9656 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__9656.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__9682 = null;
  var G__9682__2 = function(this_sym9657, k) {
    var this__9659 = this;
    var this_sym9657__9660 = this;
    var coll__9661 = this_sym9657__9660;
    return coll__9661.cljs$core$ILookup$_lookup$arity$2(coll__9661, k)
  };
  var G__9682__3 = function(this_sym9658, k, not_found) {
    var this__9659 = this;
    var this_sym9658__9662 = this;
    var coll__9663 = this_sym9658__9662;
    return coll__9663.cljs$core$ILookup$_lookup$arity$3(coll__9663, k, not_found)
  };
  G__9682 = function(this_sym9658, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9682__2.call(this, this_sym9658, k);
      case 3:
        return G__9682__3.call(this, this_sym9658, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9682
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym9650, args9651) {
  var this__9664 = this;
  return this_sym9650.call.apply(this_sym9650, [this_sym9650].concat(args9651.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9665 = this;
  return new cljs.core.PersistentTreeSet(this__9665.meta, cljs.core.assoc.call(null, this__9665.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9666 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__9666.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__9667 = this;
  var this__9668 = this;
  return cljs.core.pr_str.call(null, this__9668)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__9669 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__9669.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__9670 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__9670.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__9671 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__9672 = this;
  return cljs.core._comparator.call(null, this__9672.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9673 = this;
  return cljs.core.keys.call(null, this__9673.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__9674 = this;
  return new cljs.core.PersistentTreeSet(this__9674.meta, cljs.core.dissoc.call(null, this__9674.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9675 = this;
  return cljs.core.count.call(null, this__9675.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9676 = this;
  var and__3822__auto____9677 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____9677) {
    var and__3822__auto____9678 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____9678) {
      return cljs.core.every_QMARK_.call(null, function(p1__9632_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__9632_SHARP_)
      }, other)
    }else {
      return and__3822__auto____9678
    }
  }else {
    return and__3822__auto____9677
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9679 = this;
  return new cljs.core.PersistentTreeSet(meta, this__9679.tree_map, this__9679.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9680 = this;
  return this__9680.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9681 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__9681.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.set = function set(coll) {
  var in__9685 = cljs.core.seq.call(null, coll);
  var out__9686 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(cljs.core.seq.call(null, in__9685)) {
      var G__9687 = cljs.core.next.call(null, in__9685);
      var G__9688 = cljs.core.conj_BANG_.call(null, out__9686, cljs.core.first.call(null, in__9685));
      in__9685 = G__9687;
      out__9686 = G__9688;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9686)
    }
    break
  }
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__9689) {
    var keys = cljs.core.seq(arglist__9689);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__9691) {
    var comparator = cljs.core.first(arglist__9691);
    var keys = cljs.core.rest(arglist__9691);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__9697 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____9698 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____9698)) {
        var e__9699 = temp__3971__auto____9698;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__9699))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__9697, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__9690_SHARP_) {
      var temp__3971__auto____9700 = cljs.core.find.call(null, smap, p1__9690_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____9700)) {
        var e__9701 = temp__3971__auto____9700;
        return cljs.core.second.call(null, e__9701)
      }else {
        return p1__9690_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__9731 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__9724, seen) {
        while(true) {
          var vec__9725__9726 = p__9724;
          var f__9727 = cljs.core.nth.call(null, vec__9725__9726, 0, null);
          var xs__9728 = vec__9725__9726;
          var temp__3974__auto____9729 = cljs.core.seq.call(null, xs__9728);
          if(temp__3974__auto____9729) {
            var s__9730 = temp__3974__auto____9729;
            if(cljs.core.contains_QMARK_.call(null, seen, f__9727)) {
              var G__9732 = cljs.core.rest.call(null, s__9730);
              var G__9733 = seen;
              p__9724 = G__9732;
              seen = G__9733;
              continue
            }else {
              return cljs.core.cons.call(null, f__9727, step.call(null, cljs.core.rest.call(null, s__9730), cljs.core.conj.call(null, seen, f__9727)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__9731.call(null, coll, cljs.core.set([]))
};
cljs.core.butlast = function butlast(s) {
  var ret__9736 = cljs.core.PersistentVector.EMPTY;
  var s__9737 = s;
  while(true) {
    if(cljs.core.next.call(null, s__9737)) {
      var G__9738 = cljs.core.conj.call(null, ret__9736, cljs.core.first.call(null, s__9737));
      var G__9739 = cljs.core.next.call(null, s__9737);
      ret__9736 = G__9738;
      s__9737 = G__9739;
      continue
    }else {
      return cljs.core.seq.call(null, ret__9736)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____9742 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____9742) {
        return or__3824__auto____9742
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__9743 = x.lastIndexOf("/");
      if(i__9743 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__9743 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____9746 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____9746) {
      return or__3824__auto____9746
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__9747 = x.lastIndexOf("/");
    if(i__9747 > -1) {
      return cljs.core.subs.call(null, x, 2, i__9747)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__9754 = cljs.core.ObjMap.EMPTY;
  var ks__9755 = cljs.core.seq.call(null, keys);
  var vs__9756 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____9757 = ks__9755;
      if(and__3822__auto____9757) {
        return vs__9756
      }else {
        return and__3822__auto____9757
      }
    }()) {
      var G__9758 = cljs.core.assoc.call(null, map__9754, cljs.core.first.call(null, ks__9755), cljs.core.first.call(null, vs__9756));
      var G__9759 = cljs.core.next.call(null, ks__9755);
      var G__9760 = cljs.core.next.call(null, vs__9756);
      map__9754 = G__9758;
      ks__9755 = G__9759;
      vs__9756 = G__9760;
      continue
    }else {
      return map__9754
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__9763__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__9748_SHARP_, p2__9749_SHARP_) {
        return max_key.call(null, k, p1__9748_SHARP_, p2__9749_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__9763 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9763__delegate.call(this, k, x, y, more)
    };
    G__9763.cljs$lang$maxFixedArity = 3;
    G__9763.cljs$lang$applyTo = function(arglist__9764) {
      var k = cljs.core.first(arglist__9764);
      var x = cljs.core.first(cljs.core.next(arglist__9764));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9764)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9764)));
      return G__9763__delegate(k, x, y, more)
    };
    G__9763.cljs$lang$arity$variadic = G__9763__delegate;
    return G__9763
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__9765__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__9761_SHARP_, p2__9762_SHARP_) {
        return min_key.call(null, k, p1__9761_SHARP_, p2__9762_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__9765 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9765__delegate.call(this, k, x, y, more)
    };
    G__9765.cljs$lang$maxFixedArity = 3;
    G__9765.cljs$lang$applyTo = function(arglist__9766) {
      var k = cljs.core.first(arglist__9766);
      var x = cljs.core.first(cljs.core.next(arglist__9766));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9766)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9766)));
      return G__9765__delegate(k, x, y, more)
    };
    G__9765.cljs$lang$arity$variadic = G__9765__delegate;
    return G__9765
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9769 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9769) {
        var s__9770 = temp__3974__auto____9769;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__9770), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__9770)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9773 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9773) {
      var s__9774 = temp__3974__auto____9773;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__9774)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9774), take_while.call(null, pred, cljs.core.rest.call(null, s__9774)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__9776 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__9776.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__9788 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.set([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____9789 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____9789)) {
        var vec__9790__9791 = temp__3974__auto____9789;
        var e__9792 = cljs.core.nth.call(null, vec__9790__9791, 0, null);
        var s__9793 = vec__9790__9791;
        if(cljs.core.truth_(include__9788.call(null, e__9792))) {
          return s__9793
        }else {
          return cljs.core.next.call(null, s__9793)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__9788, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____9794 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____9794)) {
      var vec__9795__9796 = temp__3974__auto____9794;
      var e__9797 = cljs.core.nth.call(null, vec__9795__9796, 0, null);
      var s__9798 = vec__9795__9796;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__9797)) ? s__9798 : cljs.core.next.call(null, s__9798))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__9810 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.set([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____9811 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____9811)) {
        var vec__9812__9813 = temp__3974__auto____9811;
        var e__9814 = cljs.core.nth.call(null, vec__9812__9813, 0, null);
        var s__9815 = vec__9812__9813;
        if(cljs.core.truth_(include__9810.call(null, e__9814))) {
          return s__9815
        }else {
          return cljs.core.next.call(null, s__9815)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__9810, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____9816 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____9816)) {
      var vec__9817__9818 = temp__3974__auto____9816;
      var e__9819 = cljs.core.nth.call(null, vec__9817__9818, 0, null);
      var s__9820 = vec__9817__9818;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__9819)) ? s__9820 : cljs.core.next.call(null, s__9820))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__9821 = this;
  var h__2153__auto____9822 = this__9821.__hash;
  if(!(h__2153__auto____9822 == null)) {
    return h__2153__auto____9822
  }else {
    var h__2153__auto____9823 = cljs.core.hash_coll.call(null, rng);
    this__9821.__hash = h__2153__auto____9823;
    return h__2153__auto____9823
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__9824 = this;
  if(this__9824.step > 0) {
    if(this__9824.start + this__9824.step < this__9824.end) {
      return new cljs.core.Range(this__9824.meta, this__9824.start + this__9824.step, this__9824.end, this__9824.step, null)
    }else {
      return null
    }
  }else {
    if(this__9824.start + this__9824.step > this__9824.end) {
      return new cljs.core.Range(this__9824.meta, this__9824.start + this__9824.step, this__9824.end, this__9824.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__9825 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__9826 = this;
  var this__9827 = this;
  return cljs.core.pr_str.call(null, this__9827)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__9828 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__9829 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__9830 = this;
  if(this__9830.step > 0) {
    if(this__9830.start < this__9830.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__9830.start > this__9830.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__9831 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__9831.end - this__9831.start) / this__9831.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__9832 = this;
  return this__9832.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__9833 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__9833.meta, this__9833.start + this__9833.step, this__9833.end, this__9833.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__9834 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__9835 = this;
  return new cljs.core.Range(meta, this__9835.start, this__9835.end, this__9835.step, this__9835.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__9836 = this;
  return this__9836.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__9837 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__9837.start + n * this__9837.step
  }else {
    if(function() {
      var and__3822__auto____9838 = this__9837.start > this__9837.end;
      if(and__3822__auto____9838) {
        return this__9837.step === 0
      }else {
        return and__3822__auto____9838
      }
    }()) {
      return this__9837.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__9839 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__9839.start + n * this__9839.step
  }else {
    if(function() {
      var and__3822__auto____9840 = this__9839.start > this__9839.end;
      if(and__3822__auto____9840) {
        return this__9839.step === 0
      }else {
        return and__3822__auto____9840
      }
    }()) {
      return this__9839.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__9841 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9841.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9844 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9844) {
      var s__9845 = temp__3974__auto____9844;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__9845), take_nth.call(null, n, cljs.core.drop.call(null, n, s__9845)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9852 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9852) {
      var s__9853 = temp__3974__auto____9852;
      var fst__9854 = cljs.core.first.call(null, s__9853);
      var fv__9855 = f.call(null, fst__9854);
      var run__9856 = cljs.core.cons.call(null, fst__9854, cljs.core.take_while.call(null, function(p1__9846_SHARP_) {
        return cljs.core._EQ_.call(null, fv__9855, f.call(null, p1__9846_SHARP_))
      }, cljs.core.next.call(null, s__9853)));
      return cljs.core.cons.call(null, run__9856, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__9856), s__9853))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____9871 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____9871) {
        var s__9872 = temp__3971__auto____9871;
        return reductions.call(null, f, cljs.core.first.call(null, s__9872), cljs.core.rest.call(null, s__9872))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9873 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9873) {
        var s__9874 = temp__3974__auto____9873;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__9874)), cljs.core.rest.call(null, s__9874))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__9877 = null;
      var G__9877__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__9877__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__9877__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__9877__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__9877__4 = function() {
        var G__9878__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__9878 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9878__delegate.call(this, x, y, z, args)
        };
        G__9878.cljs$lang$maxFixedArity = 3;
        G__9878.cljs$lang$applyTo = function(arglist__9879) {
          var x = cljs.core.first(arglist__9879);
          var y = cljs.core.first(cljs.core.next(arglist__9879));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9879)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9879)));
          return G__9878__delegate(x, y, z, args)
        };
        G__9878.cljs$lang$arity$variadic = G__9878__delegate;
        return G__9878
      }();
      G__9877 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9877__0.call(this);
          case 1:
            return G__9877__1.call(this, x);
          case 2:
            return G__9877__2.call(this, x, y);
          case 3:
            return G__9877__3.call(this, x, y, z);
          default:
            return G__9877__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9877.cljs$lang$maxFixedArity = 3;
      G__9877.cljs$lang$applyTo = G__9877__4.cljs$lang$applyTo;
      return G__9877
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__9880 = null;
      var G__9880__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__9880__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__9880__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__9880__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__9880__4 = function() {
        var G__9881__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__9881 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9881__delegate.call(this, x, y, z, args)
        };
        G__9881.cljs$lang$maxFixedArity = 3;
        G__9881.cljs$lang$applyTo = function(arglist__9882) {
          var x = cljs.core.first(arglist__9882);
          var y = cljs.core.first(cljs.core.next(arglist__9882));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9882)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9882)));
          return G__9881__delegate(x, y, z, args)
        };
        G__9881.cljs$lang$arity$variadic = G__9881__delegate;
        return G__9881
      }();
      G__9880 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9880__0.call(this);
          case 1:
            return G__9880__1.call(this, x);
          case 2:
            return G__9880__2.call(this, x, y);
          case 3:
            return G__9880__3.call(this, x, y, z);
          default:
            return G__9880__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9880.cljs$lang$maxFixedArity = 3;
      G__9880.cljs$lang$applyTo = G__9880__4.cljs$lang$applyTo;
      return G__9880
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__9883 = null;
      var G__9883__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__9883__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__9883__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__9883__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__9883__4 = function() {
        var G__9884__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__9884 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9884__delegate.call(this, x, y, z, args)
        };
        G__9884.cljs$lang$maxFixedArity = 3;
        G__9884.cljs$lang$applyTo = function(arglist__9885) {
          var x = cljs.core.first(arglist__9885);
          var y = cljs.core.first(cljs.core.next(arglist__9885));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9885)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9885)));
          return G__9884__delegate(x, y, z, args)
        };
        G__9884.cljs$lang$arity$variadic = G__9884__delegate;
        return G__9884
      }();
      G__9883 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9883__0.call(this);
          case 1:
            return G__9883__1.call(this, x);
          case 2:
            return G__9883__2.call(this, x, y);
          case 3:
            return G__9883__3.call(this, x, y, z);
          default:
            return G__9883__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9883.cljs$lang$maxFixedArity = 3;
      G__9883.cljs$lang$applyTo = G__9883__4.cljs$lang$applyTo;
      return G__9883
    }()
  };
  var juxt__4 = function() {
    var G__9886__delegate = function(f, g, h, fs) {
      var fs__9876 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__9887 = null;
        var G__9887__0 = function() {
          return cljs.core.reduce.call(null, function(p1__9857_SHARP_, p2__9858_SHARP_) {
            return cljs.core.conj.call(null, p1__9857_SHARP_, p2__9858_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__9876)
        };
        var G__9887__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__9859_SHARP_, p2__9860_SHARP_) {
            return cljs.core.conj.call(null, p1__9859_SHARP_, p2__9860_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__9876)
        };
        var G__9887__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__9861_SHARP_, p2__9862_SHARP_) {
            return cljs.core.conj.call(null, p1__9861_SHARP_, p2__9862_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__9876)
        };
        var G__9887__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__9863_SHARP_, p2__9864_SHARP_) {
            return cljs.core.conj.call(null, p1__9863_SHARP_, p2__9864_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__9876)
        };
        var G__9887__4 = function() {
          var G__9888__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__9865_SHARP_, p2__9866_SHARP_) {
              return cljs.core.conj.call(null, p1__9865_SHARP_, cljs.core.apply.call(null, p2__9866_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__9876)
          };
          var G__9888 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9888__delegate.call(this, x, y, z, args)
          };
          G__9888.cljs$lang$maxFixedArity = 3;
          G__9888.cljs$lang$applyTo = function(arglist__9889) {
            var x = cljs.core.first(arglist__9889);
            var y = cljs.core.first(cljs.core.next(arglist__9889));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9889)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9889)));
            return G__9888__delegate(x, y, z, args)
          };
          G__9888.cljs$lang$arity$variadic = G__9888__delegate;
          return G__9888
        }();
        G__9887 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__9887__0.call(this);
            case 1:
              return G__9887__1.call(this, x);
            case 2:
              return G__9887__2.call(this, x, y);
            case 3:
              return G__9887__3.call(this, x, y, z);
            default:
              return G__9887__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__9887.cljs$lang$maxFixedArity = 3;
        G__9887.cljs$lang$applyTo = G__9887__4.cljs$lang$applyTo;
        return G__9887
      }()
    };
    var G__9886 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9886__delegate.call(this, f, g, h, fs)
    };
    G__9886.cljs$lang$maxFixedArity = 3;
    G__9886.cljs$lang$applyTo = function(arglist__9890) {
      var f = cljs.core.first(arglist__9890);
      var g = cljs.core.first(cljs.core.next(arglist__9890));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9890)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9890)));
      return G__9886__delegate(f, g, h, fs)
    };
    G__9886.cljs$lang$arity$variadic = G__9886__delegate;
    return G__9886
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__9893 = cljs.core.next.call(null, coll);
        coll = G__9893;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____9892 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____9892) {
          return n > 0
        }else {
          return and__3822__auto____9892
        }
      }())) {
        var G__9894 = n - 1;
        var G__9895 = cljs.core.next.call(null, coll);
        n = G__9894;
        coll = G__9895;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__9897 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__9897), s)) {
    if(cljs.core.count.call(null, matches__9897) === 1) {
      return cljs.core.first.call(null, matches__9897)
    }else {
      return cljs.core.vec.call(null, matches__9897)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__9899 = re.exec(s);
  if(matches__9899 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__9899) === 1) {
      return cljs.core.first.call(null, matches__9899)
    }else {
      return cljs.core.vec.call(null, matches__9899)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__9904 = cljs.core.re_find.call(null, re, s);
  var match_idx__9905 = s.search(re);
  var match_str__9906 = cljs.core.coll_QMARK_.call(null, match_data__9904) ? cljs.core.first.call(null, match_data__9904) : match_data__9904;
  var post_match__9907 = cljs.core.subs.call(null, s, match_idx__9905 + cljs.core.count.call(null, match_str__9906));
  if(cljs.core.truth_(match_data__9904)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__9904, re_seq.call(null, re, post_match__9907))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__9914__9915 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___9916 = cljs.core.nth.call(null, vec__9914__9915, 0, null);
  var flags__9917 = cljs.core.nth.call(null, vec__9914__9915, 1, null);
  var pattern__9918 = cljs.core.nth.call(null, vec__9914__9915, 2, null);
  return new RegExp(pattern__9918, flags__9917)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__9908_SHARP_) {
    return print_one.call(null, p1__9908_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____9928 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____9928)) {
            var and__3822__auto____9932 = function() {
              var G__9929__9930 = obj;
              if(G__9929__9930) {
                if(function() {
                  var or__3824__auto____9931 = G__9929__9930.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____9931) {
                    return or__3824__auto____9931
                  }else {
                    return G__9929__9930.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__9929__9930.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__9929__9930)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__9929__9930)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____9932)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____9932
            }
          }else {
            return and__3822__auto____9928
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____9933 = !(obj == null);
          if(and__3822__auto____9933) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____9933
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__9934__9935 = obj;
          if(G__9934__9935) {
            if(function() {
              var or__3824__auto____9936 = G__9934__9935.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____9936) {
                return or__3824__auto____9936
              }else {
                return G__9934__9935.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__9934__9935.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__9934__9935)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__9934__9935)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var first_obj__9951 = cljs.core.first.call(null, objs);
  var sb__9952 = new goog.string.StringBuffer;
  var G__9953__9954 = cljs.core.seq.call(null, objs);
  if(G__9953__9954) {
    var obj__9955 = cljs.core.first.call(null, G__9953__9954);
    var G__9953__9956 = G__9953__9954;
    while(true) {
      if(obj__9955 === first_obj__9951) {
      }else {
        sb__9952.append(" ")
      }
      var G__9957__9958 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__9955, opts));
      if(G__9957__9958) {
        var string__9959 = cljs.core.first.call(null, G__9957__9958);
        var G__9957__9960 = G__9957__9958;
        while(true) {
          sb__9952.append(string__9959);
          var temp__3974__auto____9961 = cljs.core.next.call(null, G__9957__9960);
          if(temp__3974__auto____9961) {
            var G__9957__9962 = temp__3974__auto____9961;
            var G__9965 = cljs.core.first.call(null, G__9957__9962);
            var G__9966 = G__9957__9962;
            string__9959 = G__9965;
            G__9957__9960 = G__9966;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____9963 = cljs.core.next.call(null, G__9953__9956);
      if(temp__3974__auto____9963) {
        var G__9953__9964 = temp__3974__auto____9963;
        var G__9967 = cljs.core.first.call(null, G__9953__9964);
        var G__9968 = G__9953__9964;
        obj__9955 = G__9967;
        G__9953__9956 = G__9968;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__9952
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__9970 = cljs.core.pr_sb.call(null, objs, opts);
  sb__9970.append("\n");
  return[cljs.core.str(sb__9970)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var first_obj__9984 = cljs.core.first.call(null, objs);
  var G__9985__9986 = cljs.core.seq.call(null, objs);
  if(G__9985__9986) {
    var obj__9987 = cljs.core.first.call(null, G__9985__9986);
    var G__9985__9988 = G__9985__9986;
    while(true) {
      if(obj__9987 === first_obj__9984) {
      }else {
        cljs.core.string_print.call(null, " ")
      }
      var G__9989__9990 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__9987, opts));
      if(G__9989__9990) {
        var string__9991 = cljs.core.first.call(null, G__9989__9990);
        var G__9989__9992 = G__9989__9990;
        while(true) {
          cljs.core.string_print.call(null, string__9991);
          var temp__3974__auto____9993 = cljs.core.next.call(null, G__9989__9992);
          if(temp__3974__auto____9993) {
            var G__9989__9994 = temp__3974__auto____9993;
            var G__9997 = cljs.core.first.call(null, G__9989__9994);
            var G__9998 = G__9989__9994;
            string__9991 = G__9997;
            G__9989__9992 = G__9998;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____9995 = cljs.core.next.call(null, G__9985__9988);
      if(temp__3974__auto____9995) {
        var G__9985__9996 = temp__3974__auto____9995;
        var G__9999 = cljs.core.first.call(null, G__9985__9996);
        var G__10000 = G__9985__9996;
        obj__9987 = G__9999;
        G__9985__9988 = G__10000;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10001) {
    var objs = cljs.core.seq(arglist__10001);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10002) {
    var objs = cljs.core.seq(arglist__10002);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10003) {
    var objs = cljs.core.seq(arglist__10003);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10004) {
    var objs = cljs.core.seq(arglist__10004);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10005) {
    var objs = cljs.core.seq(arglist__10005);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10006) {
    var objs = cljs.core.seq(arglist__10006);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10007) {
    var objs = cljs.core.seq(arglist__10007);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10008) {
    var objs = cljs.core.seq(arglist__10008);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10009 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10009, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10010 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10010, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10011 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10011, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____10012 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____10012)) {
        var nspc__10013 = temp__3974__auto____10012;
        return[cljs.core.str(nspc__10013), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____10014 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____10014)) {
          var nspc__10015 = temp__3974__auto____10014;
          return[cljs.core.str(nspc__10015), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10016 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10016, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__10018 = function(n, len) {
    var ns__10017 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__10017) < len) {
        var G__10020 = [cljs.core.str("0"), cljs.core.str(ns__10017)].join("");
        ns__10017 = G__10020;
        continue
      }else {
        return ns__10017
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__10018.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__10018.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__10018.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10018.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10018.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__10018.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10019 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10019, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10021 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__10022 = this;
  var G__10023__10024 = cljs.core.seq.call(null, this__10022.watches);
  if(G__10023__10024) {
    var G__10026__10028 = cljs.core.first.call(null, G__10023__10024);
    var vec__10027__10029 = G__10026__10028;
    var key__10030 = cljs.core.nth.call(null, vec__10027__10029, 0, null);
    var f__10031 = cljs.core.nth.call(null, vec__10027__10029, 1, null);
    var G__10023__10032 = G__10023__10024;
    var G__10026__10033 = G__10026__10028;
    var G__10023__10034 = G__10023__10032;
    while(true) {
      var vec__10035__10036 = G__10026__10033;
      var key__10037 = cljs.core.nth.call(null, vec__10035__10036, 0, null);
      var f__10038 = cljs.core.nth.call(null, vec__10035__10036, 1, null);
      var G__10023__10039 = G__10023__10034;
      f__10038.call(null, key__10037, this$, oldval, newval);
      var temp__3974__auto____10040 = cljs.core.next.call(null, G__10023__10039);
      if(temp__3974__auto____10040) {
        var G__10023__10041 = temp__3974__auto____10040;
        var G__10048 = cljs.core.first.call(null, G__10023__10041);
        var G__10049 = G__10023__10041;
        G__10026__10033 = G__10048;
        G__10023__10034 = G__10049;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__10042 = this;
  return this$.watches = cljs.core.assoc.call(null, this__10042.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__10043 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__10043.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__10044 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__10044.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__10045 = this;
  return this__10045.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10046 = this;
  return this__10046.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10047 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__10061__delegate = function(x, p__10050) {
      var map__10056__10057 = p__10050;
      var map__10056__10058 = cljs.core.seq_QMARK_.call(null, map__10056__10057) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10056__10057) : map__10056__10057;
      var validator__10059 = cljs.core._lookup.call(null, map__10056__10058, "\ufdd0'validator", null);
      var meta__10060 = cljs.core._lookup.call(null, map__10056__10058, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__10060, validator__10059, null)
    };
    var G__10061 = function(x, var_args) {
      var p__10050 = null;
      if(goog.isDef(var_args)) {
        p__10050 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10061__delegate.call(this, x, p__10050)
    };
    G__10061.cljs$lang$maxFixedArity = 1;
    G__10061.cljs$lang$applyTo = function(arglist__10062) {
      var x = cljs.core.first(arglist__10062);
      var p__10050 = cljs.core.rest(arglist__10062);
      return G__10061__delegate(x, p__10050)
    };
    G__10061.cljs$lang$arity$variadic = G__10061__delegate;
    return G__10061
  }();
  atom = function(x, var_args) {
    var p__10050 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____10066 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____10066)) {
    var validate__10067 = temp__3974__auto____10066;
    if(cljs.core.truth_(validate__10067.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6394))))].join(""));
    }
  }else {
  }
  var old_value__10068 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__10068, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__10069__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__10069 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10069__delegate.call(this, a, f, x, y, z, more)
    };
    G__10069.cljs$lang$maxFixedArity = 5;
    G__10069.cljs$lang$applyTo = function(arglist__10070) {
      var a = cljs.core.first(arglist__10070);
      var f = cljs.core.first(cljs.core.next(arglist__10070));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10070)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10070))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10070)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10070)))));
      return G__10069__delegate(a, f, x, y, z, more)
    };
    G__10069.cljs$lang$arity$variadic = G__10069__delegate;
    return G__10069
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10071) {
    var iref = cljs.core.first(arglist__10071);
    var f = cljs.core.first(cljs.core.next(arglist__10071));
    var args = cljs.core.rest(cljs.core.next(arglist__10071));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__10072 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__10072.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10073 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__10073.state, function(p__10074) {
    var curr_state__10075 = p__10074;
    var curr_state__10076 = cljs.core.seq_QMARK_.call(null, curr_state__10075) ? cljs.core.apply.call(null, cljs.core.hash_map, curr_state__10075) : curr_state__10075;
    var done__10077 = cljs.core._lookup.call(null, curr_state__10076, "\ufdd0'done", null);
    if(cljs.core.truth_(done__10077)) {
      return curr_state__10076
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__10073.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__10098__10099 = options;
    var map__10098__10100 = cljs.core.seq_QMARK_.call(null, map__10098__10099) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10098__10099) : map__10098__10099;
    var keywordize_keys__10101 = cljs.core._lookup.call(null, map__10098__10100, "\ufdd0'keywordize-keys", null);
    var keyfn__10102 = cljs.core.truth_(keywordize_keys__10101) ? cljs.core.keyword : cljs.core.str;
    var f__10117 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2427__auto____10116 = function iter__10110(s__10111) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__10111__10114 = s__10111;
                    while(true) {
                      if(cljs.core.seq.call(null, s__10111__10114)) {
                        var k__10115 = cljs.core.first.call(null, s__10111__10114);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__10102.call(null, k__10115), thisfn.call(null, x[k__10115])], true), iter__10110.call(null, cljs.core.rest.call(null, s__10111__10114)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2427__auto____10116.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__10117.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__10118) {
    var x = cljs.core.first(arglist__10118);
    var options = cljs.core.rest(arglist__10118);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__10123 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__10127__delegate = function(args) {
      var temp__3971__auto____10124 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__10123), args, null);
      if(cljs.core.truth_(temp__3971__auto____10124)) {
        var v__10125 = temp__3971__auto____10124;
        return v__10125
      }else {
        var ret__10126 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__10123, cljs.core.assoc, args, ret__10126);
        return ret__10126
      }
    };
    var G__10127 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10127__delegate.call(this, args)
    };
    G__10127.cljs$lang$maxFixedArity = 0;
    G__10127.cljs$lang$applyTo = function(arglist__10128) {
      var args = cljs.core.seq(arglist__10128);
      return G__10127__delegate(args)
    };
    G__10127.cljs$lang$arity$variadic = G__10127__delegate;
    return G__10127
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__10130 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__10130)) {
        var G__10131 = ret__10130;
        f = G__10131;
        continue
      }else {
        return ret__10130
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__10132__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__10132 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10132__delegate.call(this, f, args)
    };
    G__10132.cljs$lang$maxFixedArity = 1;
    G__10132.cljs$lang$applyTo = function(arglist__10133) {
      var f = cljs.core.first(arglist__10133);
      var args = cljs.core.rest(arglist__10133);
      return G__10132__delegate(f, args)
    };
    G__10132.cljs$lang$arity$variadic = G__10132__delegate;
    return G__10132
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__10135 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__10135, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__10135, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____10144 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____10144) {
      return or__3824__auto____10144
    }else {
      var or__3824__auto____10145 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____10145) {
        return or__3824__auto____10145
      }else {
        var and__3822__auto____10146 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____10146) {
          var and__3822__auto____10147 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____10147) {
            var and__3822__auto____10148 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____10148) {
              var ret__10149 = true;
              var i__10150 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____10151 = cljs.core.not.call(null, ret__10149);
                  if(or__3824__auto____10151) {
                    return or__3824__auto____10151
                  }else {
                    return i__10150 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__10149
                }else {
                  var G__10152 = isa_QMARK_.call(null, h, child.call(null, i__10150), parent.call(null, i__10150));
                  var G__10153 = i__10150 + 1;
                  ret__10149 = G__10152;
                  i__10150 = G__10153;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____10148
            }
          }else {
            return and__3822__auto____10147
          }
        }else {
          return and__3822__auto____10146
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6678))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6682))))].join(""));
    }
    var tp__10162 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__10163 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__10164 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__10165 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.set([])), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____10166 = cljs.core.contains_QMARK_.call(null, tp__10162.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__10164.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__10164.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__10162, tag, cljs.core.set([])), parent)), "\ufdd0'ancestors":tf__10165.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__10163, parent, ta__10164), "\ufdd0'descendants":tf__10165.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, 
      h), parent, ta__10164, tag, td__10163)})
    }();
    if(cljs.core.truth_(or__3824__auto____10166)) {
      return or__3824__auto____10166
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__10171 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__10172 = cljs.core.truth_(parentMap__10171.call(null, tag)) ? cljs.core.disj.call(null, parentMap__10171.call(null, tag), parent) : cljs.core.set([]);
    var newParents__10173 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__10172)) ? cljs.core.assoc.call(null, parentMap__10171, tag, childsParents__10172) : cljs.core.dissoc.call(null, parentMap__10171, tag);
    var deriv_seq__10174 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__10154_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10154_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10154_SHARP_), cljs.core.second.call(null, p1__10154_SHARP_)))
    }, cljs.core.seq.call(null, newParents__10173)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__10171.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__10155_SHARP_, p2__10156_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__10155_SHARP_, p2__10156_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__10174))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__10182 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____10184 = cljs.core.truth_(function() {
    var and__3822__auto____10183 = xprefs__10182;
    if(cljs.core.truth_(and__3822__auto____10183)) {
      return xprefs__10182.call(null, y)
    }else {
      return and__3822__auto____10183
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____10184)) {
    return or__3824__auto____10184
  }else {
    var or__3824__auto____10186 = function() {
      var ps__10185 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__10185) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__10185), prefer_table))) {
          }else {
          }
          var G__10189 = cljs.core.rest.call(null, ps__10185);
          ps__10185 = G__10189;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____10186)) {
      return or__3824__auto____10186
    }else {
      var or__3824__auto____10188 = function() {
        var ps__10187 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__10187) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__10187), y, prefer_table))) {
            }else {
            }
            var G__10190 = cljs.core.rest.call(null, ps__10187);
            ps__10187 = G__10190;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____10188)) {
        return or__3824__auto____10188
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____10192 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____10192)) {
    return or__3824__auto____10192
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__10210 = cljs.core.reduce.call(null, function(be, p__10202) {
    var vec__10203__10204 = p__10202;
    var k__10205 = cljs.core.nth.call(null, vec__10203__10204, 0, null);
    var ___10206 = cljs.core.nth.call(null, vec__10203__10204, 1, null);
    var e__10207 = vec__10203__10204;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__10205)) {
      var be2__10209 = cljs.core.truth_(function() {
        var or__3824__auto____10208 = be == null;
        if(or__3824__auto____10208) {
          return or__3824__auto____10208
        }else {
          return cljs.core.dominates.call(null, k__10205, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__10207 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__10209), k__10205, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__10205), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__10209)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__10209
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__10210)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__10210));
      return cljs.core.second.call(null, best_entry__10210)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
void 0;
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____10214 = mf;
    if(and__3822__auto____10214) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____10214
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    return function() {
      var or__3824__auto____10215 = cljs.core._reset[goog.typeOf(mf)];
      if(or__3824__auto____10215) {
        return or__3824__auto____10215
      }else {
        var or__3824__auto____10216 = cljs.core._reset["_"];
        if(or__3824__auto____10216) {
          return or__3824__auto____10216
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____10220 = mf;
    if(and__3822__auto____10220) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____10220
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    return function() {
      var or__3824__auto____10221 = cljs.core._add_method[goog.typeOf(mf)];
      if(or__3824__auto____10221) {
        return or__3824__auto____10221
      }else {
        var or__3824__auto____10222 = cljs.core._add_method["_"];
        if(or__3824__auto____10222) {
          return or__3824__auto____10222
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____10226 = mf;
    if(and__3822__auto____10226) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____10226
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    return function() {
      var or__3824__auto____10227 = cljs.core._remove_method[goog.typeOf(mf)];
      if(or__3824__auto____10227) {
        return or__3824__auto____10227
      }else {
        var or__3824__auto____10228 = cljs.core._remove_method["_"];
        if(or__3824__auto____10228) {
          return or__3824__auto____10228
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____10232 = mf;
    if(and__3822__auto____10232) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____10232
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    return function() {
      var or__3824__auto____10233 = cljs.core._prefer_method[goog.typeOf(mf)];
      if(or__3824__auto____10233) {
        return or__3824__auto____10233
      }else {
        var or__3824__auto____10234 = cljs.core._prefer_method["_"];
        if(or__3824__auto____10234) {
          return or__3824__auto____10234
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____10238 = mf;
    if(and__3822__auto____10238) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____10238
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    return function() {
      var or__3824__auto____10239 = cljs.core._get_method[goog.typeOf(mf)];
      if(or__3824__auto____10239) {
        return or__3824__auto____10239
      }else {
        var or__3824__auto____10240 = cljs.core._get_method["_"];
        if(or__3824__auto____10240) {
          return or__3824__auto____10240
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____10244 = mf;
    if(and__3822__auto____10244) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____10244
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    return function() {
      var or__3824__auto____10245 = cljs.core._methods[goog.typeOf(mf)];
      if(or__3824__auto____10245) {
        return or__3824__auto____10245
      }else {
        var or__3824__auto____10246 = cljs.core._methods["_"];
        if(or__3824__auto____10246) {
          return or__3824__auto____10246
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____10250 = mf;
    if(and__3822__auto____10250) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____10250
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    return function() {
      var or__3824__auto____10251 = cljs.core._prefers[goog.typeOf(mf)];
      if(or__3824__auto____10251) {
        return or__3824__auto____10251
      }else {
        var or__3824__auto____10252 = cljs.core._prefers["_"];
        if(or__3824__auto____10252) {
          return or__3824__auto____10252
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____10256 = mf;
    if(and__3822__auto____10256) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____10256
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    return function() {
      var or__3824__auto____10257 = cljs.core._dispatch[goog.typeOf(mf)];
      if(or__3824__auto____10257) {
        return or__3824__auto____10257
      }else {
        var or__3824__auto____10258 = cljs.core._dispatch["_"];
        if(or__3824__auto____10258) {
          return or__3824__auto____10258
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
void 0;
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__10261 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__10262 = cljs.core._get_method.call(null, mf, dispatch_val__10261);
  if(cljs.core.truth_(target_fn__10262)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__10261)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__10262, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10263 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__10264 = this;
  cljs.core.swap_BANG_.call(null, this__10264.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10264.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10264.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__10264.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__10265 = this;
  cljs.core.swap_BANG_.call(null, this__10265.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__10265.method_cache, this__10265.method_table, this__10265.cached_hierarchy, this__10265.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__10266 = this;
  cljs.core.swap_BANG_.call(null, this__10266.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__10266.method_cache, this__10266.method_table, this__10266.cached_hierarchy, this__10266.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__10267 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__10267.cached_hierarchy), cljs.core.deref.call(null, this__10267.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__10267.method_cache, this__10267.method_table, this__10267.cached_hierarchy, this__10267.hierarchy)
  }
  var temp__3971__auto____10268 = cljs.core.deref.call(null, this__10267.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____10268)) {
    var target_fn__10269 = temp__3971__auto____10268;
    return target_fn__10269
  }else {
    var temp__3971__auto____10270 = cljs.core.find_and_cache_best_method.call(null, this__10267.name, dispatch_val, this__10267.hierarchy, this__10267.method_table, this__10267.prefer_table, this__10267.method_cache, this__10267.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____10270)) {
      var target_fn__10271 = temp__3971__auto____10270;
      return target_fn__10271
    }else {
      return cljs.core.deref.call(null, this__10267.method_table).call(null, this__10267.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__10272 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__10272.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__10272.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__10272.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.set([])), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__10272.method_cache, this__10272.method_table, this__10272.cached_hierarchy, this__10272.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__10273 = this;
  return cljs.core.deref.call(null, this__10273.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__10274 = this;
  return cljs.core.deref.call(null, this__10274.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__10275 = this;
  return cljs.core.do_dispatch.call(null, mf, this__10275.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__10277__delegate = function(_, args) {
    var self__10276 = this;
    return cljs.core._dispatch.call(null, self__10276, args)
  };
  var G__10277 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__10277__delegate.call(this, _, args)
  };
  G__10277.cljs$lang$maxFixedArity = 1;
  G__10277.cljs$lang$applyTo = function(arglist__10278) {
    var _ = cljs.core.first(arglist__10278);
    var args = cljs.core.rest(arglist__10278);
    return G__10277__delegate(_, args)
  };
  G__10277.cljs$lang$arity$variadic = G__10277__delegate;
  return G__10277
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__10279 = this;
  return cljs.core._dispatch.call(null, self__10279, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10280 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_10282, _) {
  var this__10281 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__10281.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__10283 = this;
  return this__10283.uuid === other.uuid
};
cljs.core.UUID.prototype.toString = function() {
  var this__10284 = this;
  var this__10285 = this;
  return cljs.core.pr_str.call(null, this__10285)
};
cljs.core.UUID;
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__10882 = s;
      var limit__10883 = limit;
      var parts__10884 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__10883, 1)) {
          return cljs.core.conj.call(null, parts__10884, s__10882)
        }else {
          var temp__3971__auto____10885 = cljs.core.re_find.call(null, re, s__10882);
          if(cljs.core.truth_(temp__3971__auto____10885)) {
            var m__10886 = temp__3971__auto____10885;
            var index__10887 = s__10882.indexOf(m__10886);
            var G__10888 = s__10882.substring(index__10887 + cljs.core.count.call(null, m__10886));
            var G__10889 = limit__10883 - 1;
            var G__10890 = cljs.core.conj.call(null, parts__10884, s__10882.substring(0, index__10887));
            s__10882 = G__10888;
            limit__10883 = G__10889;
            parts__10884 = G__10890;
            continue
          }else {
            return cljs.core.conj.call(null, parts__10884, s__10882)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__10894 = s.length;
  while(true) {
    if(index__10894 === 0) {
      return""
    }else {
      var ch__10895 = cljs.core._lookup.call(null, s, index__10894 - 1, null);
      if(function() {
        var or__3824__auto____10896 = cljs.core._EQ_.call(null, ch__10895, "\n");
        if(or__3824__auto____10896) {
          return or__3824__auto____10896
        }else {
          return cljs.core._EQ_.call(null, ch__10895, "\r")
        }
      }()) {
        var G__10897 = index__10894 - 1;
        index__10894 = G__10897;
        continue
      }else {
        return s.substring(0, index__10894)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__10901 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____10902 = cljs.core.not.call(null, s__10901);
    if(or__3824__auto____10902) {
      return or__3824__auto____10902
    }else {
      var or__3824__auto____10903 = cljs.core._EQ_.call(null, "", s__10901);
      if(or__3824__auto____10903) {
        return or__3824__auto____10903
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__10901)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__10910 = new goog.string.StringBuffer;
  var length__10911 = s.length;
  var index__10912 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__10911, index__10912)) {
      return buffer__10910.toString()
    }else {
      var ch__10913 = s.charAt(index__10912);
      var temp__3971__auto____10914 = cljs.core._lookup.call(null, cmap, ch__10913, null);
      if(cljs.core.truth_(temp__3971__auto____10914)) {
        var replacement__10915 = temp__3971__auto____10914;
        buffer__10910.append([cljs.core.str(replacement__10915)].join(""))
      }else {
        buffer__10910.append(ch__10913)
      }
      var G__10916 = index__10912 + 1;
      index__10912 = G__10916;
      continue
    }
    break
  }
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__10874 = document.createElement("div");
var test_html__10875 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__10874.innerHTML = test_html__10875;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__10874.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__10874.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__10874.getElementsByTagName("link").length, 0);
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__10471 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__10472 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__10473 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__10472, "caption":table_section_wrapper__10472, "optgroup":opt_wrapper__10471, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__10473, "thead":table_section_wrapper__10472, "th":cell_wrapper__10473, "option":opt_wrapper__10471, "tbody":table_section_wrapper__10472, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__10472});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___10486 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__10490 = function() {
    var and__3822__auto____10487 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3822__auto____10487) {
      return no_tbody_QMARK___10486
    }else {
      return and__3822__auto____10487
    }
  }() ? function() {
    var and__3822__auto____10488 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____10488)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____10488
    }
  }() : function() {
    var and__3822__auto____10489 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3822__auto____10489) {
      return no_tbody_QMARK___10486
    }else {
      return and__3822__auto____10489
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__10491__10492 = cljs.core.seq.call(null, tbody__10490);
  if(G__10491__10492) {
    var child__10493 = cljs.core.first.call(null, G__10491__10492);
    var G__10491__10494 = G__10491__10492;
    while(true) {
      if(function() {
        var and__3822__auto____10495 = cljs.core._EQ_.call(null, child__10493.nodeName, "tbody");
        if(and__3822__auto____10495) {
          return cljs.core._EQ_.call(null, child__10493.childNodes.length, 0)
        }else {
          return and__3822__auto____10495
        }
      }()) {
        child__10493.parentNode.removeChild(child__10493)
      }else {
      }
      var temp__3974__auto____10496 = cljs.core.next.call(null, G__10491__10494);
      if(temp__3974__auto____10496) {
        var G__10491__10497 = temp__3974__auto____10496;
        var G__10498 = cljs.core.first.call(null, G__10491__10497);
        var G__10499 = G__10491__10497;
        child__10493 = G__10498;
        G__10491__10494 = G__10499;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__10513 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__10514 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__10513)))].join("").toLowerCase();
  var vec__10512__10515 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__10514, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__10516 = cljs.core.nth.call(null, vec__10512__10515, 0, null);
  var start_wrap__10517 = cljs.core.nth.call(null, vec__10512__10515, 1, null);
  var end_wrap__10518 = cljs.core.nth.call(null, vec__10512__10515, 2, null);
  var div__10522 = function() {
    var wrapper__10520 = function() {
      var div__10519 = document.createElement("div");
      div__10519.innerHTML = [cljs.core.str(start_wrap__10517), cljs.core.str(html__10513), cljs.core.str(end_wrap__10518)].join("");
      return div__10519
    }();
    var level__10521 = depth__10516;
    while(true) {
      if(level__10521 > 0) {
        var G__10524 = wrapper__10520.lastChild;
        var G__10525 = level__10521 - 1;
        wrapper__10520 = G__10524;
        level__10521 = G__10525;
        continue
      }else {
        return wrapper__10520
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__10522, html__10513)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____10523 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____10523) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__10513)
    }else {
      return and__3822__auto____10523
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__10522, html__10513)
  }else {
  }
  return div__10522.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
void 0;
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____10529 = content;
    if(and__3822__auto____10529) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____10529
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    return function() {
      var or__3824__auto____10530 = domina.nodes[goog.typeOf(content)];
      if(or__3824__auto____10530) {
        return or__3824__auto____10530
      }else {
        var or__3824__auto____10531 = domina.nodes["_"];
        if(or__3824__auto____10531) {
          return or__3824__auto____10531
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____10535 = nodeseq;
    if(and__3822__auto____10535) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____10535
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    return function() {
      var or__3824__auto____10536 = domina.single_node[goog.typeOf(nodeseq)];
      if(or__3824__auto____10536) {
        return or__3824__auto____10536
      }else {
        var or__3824__auto____10537 = domina.single_node["_"];
        if(or__3824__auto____10537) {
          return or__3824__auto____10537
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
void 0;
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____10539 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____10539)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____10539
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__10540) {
    var mesg = cljs.core.seq(arglist__10540);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__10541) {
    var mesg = cljs.core.seq(arglist__10541);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
void 0;
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t10549) {
    domina.t10549 = function(class_name, by_class, meta10550) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta10550 = meta10550;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t10549.cljs$lang$type = true;
    domina.t10549.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
      return cljs.core.list.call(null, "domina/t10549")
    };
    domina.t10549.prototype.domina$DomContent$ = true;
    domina.t10549.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__10552 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__10552.class_name)))
    };
    domina.t10549.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__10553 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__10553.class_name)))
    };
    domina.t10549.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10551) {
      var this__10554 = this;
      return this__10554.meta10550
    };
    domina.t10549.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10551, meta10550) {
      var this__10555 = this;
      return new domina.t10549(this__10555.class_name, this__10555.by_class, meta10550)
    };
    domina.t10549
  }else {
  }
  return new domina.t10549(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__10556_SHARP_) {
    return p1__10556_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
void 0;
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__10557_SHARP_, p2__10558_SHARP_) {
    return goog.dom.insertChildAt(p1__10557_SHARP_, p2__10558_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__10560_SHARP_, p2__10559_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__10559_SHARP_, p1__10560_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__10562_SHARP_, p2__10561_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__10561_SHARP_, p1__10562_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__10564_SHARP_, p2__10563_SHARP_) {
    return goog.dom.replaceNode(p2__10563_SHARP_, p1__10564_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__10566 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__10566))) {
    return null
  }else {
    return s__10566
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__10573__10574 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__10573__10574) {
      var n__10575 = cljs.core.first.call(null, G__10573__10574);
      var G__10573__10576 = G__10573__10574;
      while(true) {
        goog.style.setStyle(n__10575, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____10577 = cljs.core.next.call(null, G__10573__10576);
        if(temp__3974__auto____10577) {
          var G__10573__10578 = temp__3974__auto____10577;
          var G__10579 = cljs.core.first.call(null, G__10573__10578);
          var G__10580 = G__10573__10578;
          n__10575 = G__10579;
          G__10573__10576 = G__10580;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__10581) {
    var content = cljs.core.first(arglist__10581);
    var name = cljs.core.first(cljs.core.next(arglist__10581));
    var value = cljs.core.rest(cljs.core.next(arglist__10581));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__10588__10589 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__10588__10589) {
      var n__10590 = cljs.core.first.call(null, G__10588__10589);
      var G__10588__10591 = G__10588__10589;
      while(true) {
        n__10590.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____10592 = cljs.core.next.call(null, G__10588__10591);
        if(temp__3974__auto____10592) {
          var G__10588__10593 = temp__3974__auto____10592;
          var G__10594 = cljs.core.first.call(null, G__10588__10593);
          var G__10595 = G__10588__10593;
          n__10590 = G__10594;
          G__10588__10591 = G__10595;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__10596) {
    var content = cljs.core.first(arglist__10596);
    var name = cljs.core.first(cljs.core.next(arglist__10596));
    var value = cljs.core.rest(cljs.core.next(arglist__10596));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__10603__10604 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__10603__10604) {
    var n__10605 = cljs.core.first.call(null, G__10603__10604);
    var G__10603__10606 = G__10603__10604;
    while(true) {
      n__10605.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____10607 = cljs.core.next.call(null, G__10603__10606);
      if(temp__3974__auto____10607) {
        var G__10603__10608 = temp__3974__auto____10607;
        var G__10609 = cljs.core.first.call(null, G__10603__10608);
        var G__10610 = G__10603__10608;
        n__10605 = G__10609;
        G__10603__10606 = G__10610;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__10616__10617 = pair.split(/\s*:\s*/);
    var k__10618 = cljs.core.nth.call(null, vec__10616__10617, 0, null);
    var v__10619 = cljs.core.nth.call(null, vec__10616__10617, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____10620 = k__10618;
      if(cljs.core.truth_(and__3822__auto____10620)) {
        return v__10619
      }else {
        return and__3822__auto____10620
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__10618.toLowerCase()), v__10619)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__10623 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__10623)) {
    return domina.parse_style_attributes.call(null, style__10623)
  }else {
    if(cljs.core.truth_(style__10623.cssText)) {
      return domina.parse_style_attributes.call(null, style__10623.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__10629 = domina.single_node.call(null, content);
  var attrs__10630 = node__10629.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__10621_SHARP_) {
    var attr__10631 = attrs__10630.item(p1__10621_SHARP_);
    var value__10632 = attr__10631.nodeValue;
    if(function() {
      var and__3822__auto____10633 = cljs.core.not_EQ_.call(null, null, value__10632);
      if(and__3822__auto____10633) {
        return cljs.core.not_EQ_.call(null, "", value__10632)
      }else {
        return and__3822__auto____10633
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__10631.nodeName.toLowerCase())], [attr__10631.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__10630.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__10653__10654 = cljs.core.seq.call(null, styles);
  if(G__10653__10654) {
    var G__10656__10658 = cljs.core.first.call(null, G__10653__10654);
    var vec__10657__10659 = G__10656__10658;
    var name__10660 = cljs.core.nth.call(null, vec__10657__10659, 0, null);
    var value__10661 = cljs.core.nth.call(null, vec__10657__10659, 1, null);
    var G__10653__10662 = G__10653__10654;
    var G__10656__10663 = G__10656__10658;
    var G__10653__10664 = G__10653__10662;
    while(true) {
      var vec__10665__10666 = G__10656__10663;
      var name__10667 = cljs.core.nth.call(null, vec__10665__10666, 0, null);
      var value__10668 = cljs.core.nth.call(null, vec__10665__10666, 1, null);
      var G__10653__10669 = G__10653__10664;
      domina.set_style_BANG_.call(null, content, name__10667, value__10668);
      var temp__3974__auto____10670 = cljs.core.next.call(null, G__10653__10669);
      if(temp__3974__auto____10670) {
        var G__10653__10671 = temp__3974__auto____10670;
        var G__10672 = cljs.core.first.call(null, G__10653__10671);
        var G__10673 = G__10653__10671;
        G__10656__10663 = G__10672;
        G__10653__10664 = G__10673;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__10693__10694 = cljs.core.seq.call(null, attrs);
  if(G__10693__10694) {
    var G__10696__10698 = cljs.core.first.call(null, G__10693__10694);
    var vec__10697__10699 = G__10696__10698;
    var name__10700 = cljs.core.nth.call(null, vec__10697__10699, 0, null);
    var value__10701 = cljs.core.nth.call(null, vec__10697__10699, 1, null);
    var G__10693__10702 = G__10693__10694;
    var G__10696__10703 = G__10696__10698;
    var G__10693__10704 = G__10693__10702;
    while(true) {
      var vec__10705__10706 = G__10696__10703;
      var name__10707 = cljs.core.nth.call(null, vec__10705__10706, 0, null);
      var value__10708 = cljs.core.nth.call(null, vec__10705__10706, 1, null);
      var G__10693__10709 = G__10693__10704;
      domina.set_attr_BANG_.call(null, content, name__10707, value__10708);
      var temp__3974__auto____10710 = cljs.core.next.call(null, G__10693__10709);
      if(temp__3974__auto____10710) {
        var G__10693__10711 = temp__3974__auto____10710;
        var G__10712 = cljs.core.first.call(null, G__10693__10711);
        var G__10713 = G__10693__10711;
        G__10696__10703 = G__10712;
        G__10693__10704 = G__10713;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__10720__10721 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__10720__10721) {
    var node__10722 = cljs.core.first.call(null, G__10720__10721);
    var G__10720__10723 = G__10720__10721;
    while(true) {
      goog.dom.classes.add(node__10722, class$);
      var temp__3974__auto____10724 = cljs.core.next.call(null, G__10720__10723);
      if(temp__3974__auto____10724) {
        var G__10720__10725 = temp__3974__auto____10724;
        var G__10726 = cljs.core.first.call(null, G__10720__10725);
        var G__10727 = G__10720__10725;
        node__10722 = G__10726;
        G__10720__10723 = G__10727;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__10734__10735 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__10734__10735) {
    var node__10736 = cljs.core.first.call(null, G__10734__10735);
    var G__10734__10737 = G__10734__10735;
    while(true) {
      goog.dom.classes.remove(node__10736, class$);
      var temp__3974__auto____10738 = cljs.core.next.call(null, G__10734__10737);
      if(temp__3974__auto____10738) {
        var G__10734__10739 = temp__3974__auto____10738;
        var G__10740 = cljs.core.first.call(null, G__10734__10739);
        var G__10741 = G__10734__10739;
        node__10736 = G__10740;
        G__10734__10737 = G__10741;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__10749 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__10750__10751 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__10750__10751) {
    var node__10752 = cljs.core.first.call(null, G__10750__10751);
    var G__10750__10753 = G__10750__10751;
    while(true) {
      goog.dom.classes.set(node__10752, classes__10749);
      var temp__3974__auto____10754 = cljs.core.next.call(null, G__10750__10753);
      if(temp__3974__auto____10754) {
        var G__10750__10755 = temp__3974__auto____10754;
        var G__10756 = cljs.core.first.call(null, G__10750__10755);
        var G__10757 = G__10750__10755;
        node__10752 = G__10756;
        G__10750__10753 = G__10757;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__10764__10765 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__10764__10765) {
    var node__10766 = cljs.core.first.call(null, G__10764__10765);
    var G__10764__10767 = G__10764__10765;
    while(true) {
      goog.dom.setTextContent(node__10766, value);
      var temp__3974__auto____10768 = cljs.core.next.call(null, G__10764__10767);
      if(temp__3974__auto____10768) {
        var G__10764__10769 = temp__3974__auto____10768;
        var G__10770 = cljs.core.first.call(null, G__10764__10769);
        var G__10771 = G__10764__10769;
        node__10766 = G__10770;
        G__10764__10767 = G__10771;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__10778__10779 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__10778__10779) {
    var node__10780 = cljs.core.first.call(null, G__10778__10779);
    var G__10778__10781 = G__10778__10779;
    while(true) {
      goog.dom.forms.setValue(node__10780, value);
      var temp__3974__auto____10782 = cljs.core.next.call(null, G__10778__10781);
      if(temp__3974__auto____10782) {
        var G__10778__10783 = temp__3974__auto____10782;
        var G__10784 = cljs.core.first.call(null, G__10778__10783);
        var G__10785 = G__10778__10783;
        node__10780 = G__10784;
        G__10778__10781 = G__10785;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___10802 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___10803 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__10804 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___10805 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__10804);
  if(cljs.core.truth_(function() {
    var and__3822__auto____10806 = allows_inner_html_QMARK___10802;
    if(and__3822__auto____10806) {
      var and__3822__auto____10808 = function() {
        var or__3824__auto____10807 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____10807)) {
          return or__3824__auto____10807
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___10803)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____10808)) {
        return!special_tag_QMARK___10805
      }else {
        return and__3822__auto____10808
      }
    }else {
      return and__3822__auto____10806
    }
  }())) {
    var value__10809 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__10812__10813 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__10812__10813) {
        var node__10814 = cljs.core.first.call(null, G__10812__10813);
        var G__10812__10815 = G__10812__10813;
        while(true) {
          goog.events.removeAll(node__10814);
          node__10814.innerHTML = value__10809;
          var temp__3974__auto____10816 = cljs.core.next.call(null, G__10812__10815);
          if(temp__3974__auto____10816) {
            var G__10812__10817 = temp__3974__auto____10816;
            var G__10818 = cljs.core.first.call(null, G__10812__10817);
            var G__10819 = G__10812__10817;
            node__10814 = G__10818;
            G__10812__10815 = G__10819;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e10810) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e10810)) {
        var e__10811 = e10810;
        domina.replace_children_BANG_.call(null, content, value__10809)
      }else {
        if("\ufdd0'else") {
          throw e10810;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__10825 = domina.single_node.call(null, node).__domina_data;
    var value__10826 = cljs.core.truth_(m__10825) ? cljs.core._lookup.call(null, m__10825, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____10827 = bubble;
      if(cljs.core.truth_(and__3822__auto____10827)) {
        return value__10826 == null
      }else {
        return and__3822__auto____10827
      }
    }())) {
      var temp__3974__auto____10828 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____10828)) {
        var parent__10829 = temp__3974__auto____10828;
        return get_data.call(null, parent__10829, key, true)
      }else {
        return null
      }
    }else {
      return value__10826
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__10835 = function() {
    var or__3824__auto____10834 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____10834)) {
      return or__3824__auto____10834
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__10835, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__10847 = domina.nodes.call(null, parent_content);
  var children__10848 = domina.nodes.call(null, child_content);
  var first_child__10856 = function() {
    var frag__10849 = document.createDocumentFragment();
    var G__10850__10851 = cljs.core.seq.call(null, children__10848);
    if(G__10850__10851) {
      var child__10852 = cljs.core.first.call(null, G__10850__10851);
      var G__10850__10853 = G__10850__10851;
      while(true) {
        frag__10849.appendChild(child__10852);
        var temp__3974__auto____10854 = cljs.core.next.call(null, G__10850__10853);
        if(temp__3974__auto____10854) {
          var G__10850__10855 = temp__3974__auto____10854;
          var G__10858 = cljs.core.first.call(null, G__10850__10855);
          var G__10859 = G__10850__10855;
          child__10852 = G__10858;
          G__10850__10853 = G__10859;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__10849
  }();
  var other_children__10857 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__10847) - 1, function() {
    return first_child__10856.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__10847)) {
    f.call(null, cljs.core.first.call(null, parents__10847), first_child__10856);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__10830_SHARP_, p2__10831_SHARP_) {
      return f.call(null, p1__10830_SHARP_, p2__10831_SHARP_)
    }, cljs.core.rest.call(null, parents__10847), other_children__10857))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____10861 = obj;
  if(cljs.core.truth_(and__3822__auto____10861)) {
    return obj.length
  }else {
    return and__3822__auto____10861
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__10865__10866 = list_thing;
      if(G__10865__10866) {
        if(function() {
          var or__3824__auto____10867 = G__10865__10866.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____10867) {
            return or__3824__auto____10867
          }else {
            return G__10865__10866.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__10865__10866.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10865__10866)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10865__10866)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__10868__10869 = content;
      if(G__10868__10869) {
        if(function() {
          var or__3824__auto____10870 = G__10868__10869.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____10870) {
            return or__3824__auto____10870
          }else {
            return G__10868__10869.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__10868__10869.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10868__10869)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10868__10869)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__10871__10872 = content;
      if(G__10871__10872) {
        if(function() {
          var or__3824__auto____10873 = G__10871__10872.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____10873) {
            return or__3824__auto____10873
          }else {
            return G__10871__10872.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__10871__10872.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10871__10872)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10871__10872)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
void 0;
domina.events.Event = {};
domina.events.prevent_default = function prevent_default(evt) {
  if(function() {
    var and__3822__auto____10289 = evt;
    if(and__3822__auto____10289) {
      return evt.domina$events$Event$prevent_default$arity$1
    }else {
      return and__3822__auto____10289
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt)
  }else {
    return function() {
      var or__3824__auto____10290 = domina.events.prevent_default[goog.typeOf(evt)];
      if(or__3824__auto____10290) {
        return or__3824__auto____10290
      }else {
        var or__3824__auto____10291 = domina.events.prevent_default["_"];
        if(or__3824__auto____10291) {
          return or__3824__auto____10291
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if(function() {
    var and__3822__auto____10295 = evt;
    if(and__3822__auto____10295) {
      return evt.domina$events$Event$stop_propagation$arity$1
    }else {
      return and__3822__auto____10295
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt)
  }else {
    return function() {
      var or__3824__auto____10296 = domina.events.stop_propagation[goog.typeOf(evt)];
      if(or__3824__auto____10296) {
        return or__3824__auto____10296
      }else {
        var or__3824__auto____10297 = domina.events.stop_propagation["_"];
        if(or__3824__auto____10297) {
          return or__3824__auto____10297
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.target = function target(evt) {
  if(function() {
    var and__3822__auto____10301 = evt;
    if(and__3822__auto____10301) {
      return evt.domina$events$Event$target$arity$1
    }else {
      return and__3822__auto____10301
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt)
  }else {
    return function() {
      var or__3824__auto____10302 = domina.events.target[goog.typeOf(evt)];
      if(or__3824__auto____10302) {
        return or__3824__auto____10302
      }else {
        var or__3824__auto____10303 = domina.events.target["_"];
        if(or__3824__auto____10303) {
          return or__3824__auto____10303
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.current_target = function current_target(evt) {
  if(function() {
    var and__3822__auto____10307 = evt;
    if(and__3822__auto____10307) {
      return evt.domina$events$Event$current_target$arity$1
    }else {
      return and__3822__auto____10307
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt)
  }else {
    return function() {
      var or__3824__auto____10308 = domina.events.current_target[goog.typeOf(evt)];
      if(or__3824__auto____10308) {
        return or__3824__auto____10308
      }else {
        var or__3824__auto____10309 = domina.events.current_target["_"];
        if(or__3824__auto____10309) {
          return or__3824__auto____10309
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.event_type = function event_type(evt) {
  if(function() {
    var and__3822__auto____10313 = evt;
    if(and__3822__auto____10313) {
      return evt.domina$events$Event$event_type$arity$1
    }else {
      return and__3822__auto____10313
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt)
  }else {
    return function() {
      var or__3824__auto____10314 = domina.events.event_type[goog.typeOf(evt)];
      if(or__3824__auto____10314) {
        return or__3824__auto____10314
      }else {
        var or__3824__auto____10315 = domina.events.event_type["_"];
        if(or__3824__auto____10315) {
          return or__3824__auto____10315
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.raw_event = function raw_event(evt) {
  if(function() {
    var and__3822__auto____10319 = evt;
    if(and__3822__auto____10319) {
      return evt.domina$events$Event$raw_event$arity$1
    }else {
      return and__3822__auto____10319
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt)
  }else {
    return function() {
      var or__3824__auto____10320 = domina.events.raw_event[goog.typeOf(evt)];
      if(or__3824__auto____10320) {
        return or__3824__auto____10320
      }else {
        var or__3824__auto____10321 = domina.events.raw_event["_"];
        if(or__3824__auto____10321) {
          return or__3824__auto____10321
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt)
  }
};
void 0;
domina.events.builtin_events = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.keyword, goog.object.getValues(goog.events.EventType)));
domina.events.root_element = window.document.documentElement;
domina.events.find_builtin_type = function find_builtin_type(evt_type) {
  if(cljs.core.contains_QMARK_.call(null, domina.events.builtin_events, evt_type)) {
    return cljs.core.name.call(null, evt_type)
  }else {
    return evt_type
  }
};
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if(void 0 === domina.events.t10338) {
        domina.events.t10338 = function(evt, f, create_listener_function, meta10339) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta10339 = meta10339;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472
        };
        domina.events.t10338.cljs$lang$type = true;
        domina.events.t10338.cljs$lang$ctorPrSeq = function(this__2270__auto__) {
          return cljs.core.list.call(null, "domina.events/t10338")
        };
        domina.events.t10338.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var this__10341 = this;
          var temp__3971__auto____10342 = this__10341.evt[k];
          if(cljs.core.truth_(temp__3971__auto____10342)) {
            var val__10343 = temp__3971__auto____10342;
            return val__10343
          }else {
            return this__10341.evt[cljs.core.name.call(null, k)]
          }
        };
        domina.events.t10338.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var this__10344 = this;
          var or__3824__auto____10345 = o.cljs$core$ILookup$_lookup$arity$2(o, k);
          if(cljs.core.truth_(or__3824__auto____10345)) {
            return or__3824__auto____10345
          }else {
            return not_found
          }
        };
        domina.events.t10338.prototype.domina$events$Event$ = true;
        domina.events.t10338.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var this__10346 = this;
          return this__10346.evt.preventDefault()
        };
        domina.events.t10338.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var this__10347 = this;
          return this__10347.evt.stopPropagation()
        };
        domina.events.t10338.prototype.domina$events$Event$target$arity$1 = function(_) {
          var this__10348 = this;
          return this__10348.evt.target
        };
        domina.events.t10338.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var this__10349 = this;
          return this__10349.evt.currentTarget
        };
        domina.events.t10338.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var this__10350 = this;
          return this__10350.evt.type
        };
        domina.events.t10338.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var this__10351 = this;
          return this__10351.evt
        };
        domina.events.t10338.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10340) {
          var this__10352 = this;
          return this__10352.meta10339
        };
        domina.events.t10338.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10340, meta10339) {
          var this__10353 = this;
          return new domina.events.t10338(this__10353.evt, this__10353.f, this__10353.create_listener_function, meta10339)
        };
        domina.events.t10338
      }else {
      }
      return new domina.events.t10338(evt, f, create_listener_function, null)
    }());
    return true
  }
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f__10363 = domina.events.create_listener_function.call(null, listener);
  var t__10364 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__2427__auto____10371 = function iter__10365(s__10366) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__10366__10369 = s__10366;
        while(true) {
          if(cljs.core.seq.call(null, s__10366__10369)) {
            var node__10370 = cljs.core.first.call(null, s__10366__10369);
            return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node__10370, t__10364, f__10363, capture) : goog.events.listen(node__10370, t__10364, f__10363, capture), iter__10365.call(null, cljs.core.rest.call(null, s__10366__10369)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2427__auto____10371.call(null, domina.nodes.call(null, content))
  }())
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false)
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_BANG_.cljs$lang$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$lang$arity$3 = listen_BANG___3;
  return listen_BANG_
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false)
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_BANG_.cljs$lang$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$lang$arity$3 = capture_BANG___3;
  return capture_BANG_
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true)
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once_BANG_.cljs$lang$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$lang$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true)
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_once_BANG_.cljs$lang$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$lang$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element)
  };
  var unlisten_BANG___1 = function(content) {
    var G__10379__10380 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__10379__10380) {
      var node__10381 = cljs.core.first.call(null, G__10379__10380);
      var G__10379__10382 = G__10379__10380;
      while(true) {
        goog.events.removeAll(node__10381);
        var temp__3974__auto____10383 = cljs.core.next.call(null, G__10379__10382);
        if(temp__3974__auto____10383) {
          var G__10379__10384 = temp__3974__auto____10383;
          var G__10386 = cljs.core.first.call(null, G__10379__10384);
          var G__10387 = G__10379__10384;
          node__10381 = G__10386;
          G__10379__10382 = G__10387;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__10385 = domina.events.find_builtin_type.call(null, type);
    return goog.events.removeAll(domina.events.node, type__10385)
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten_BANG_.cljs$lang$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$lang$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$lang$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, cljs.core.PersistentVector.fromArray([n], true))
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while(true) {
      var temp__3971__auto____10390 = n.parentNode;
      if(cljs.core.truth_(temp__3971__auto____10390)) {
        var parent__10391 = temp__3971__auto____10390;
        var G__10392 = parent__10391;
        var G__10393 = cljs.core.cons.call(null, parent__10391, so_far);
        n = G__10392;
        so_far = G__10393;
        continue
      }else {
        return so_far
      }
      break
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestor_nodes.cljs$lang$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$lang$arity$2 = ancestor_nodes__2;
  return ancestor_nodes
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors__10407 = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var G__10408__10409 = cljs.core.seq.call(null, ancestors__10407);
  if(G__10408__10409) {
    var n__10410 = cljs.core.first.call(null, G__10408__10409);
    var G__10408__10411 = G__10408__10409;
    while(true) {
      if(cljs.core.truth_(n__10410.propagationStopped)) {
      }else {
        evt.currentTarget = n__10410;
        goog.events.fireListeners(n__10410, evt.type, true, evt)
      }
      var temp__3974__auto____10412 = cljs.core.next.call(null, G__10408__10411);
      if(temp__3974__auto____10412) {
        var G__10408__10413 = temp__3974__auto____10412;
        var G__10420 = cljs.core.first.call(null, G__10408__10413);
        var G__10421 = G__10408__10413;
        n__10410 = G__10420;
        G__10408__10411 = G__10421;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10414__10415 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors__10407));
  if(G__10414__10415) {
    var n__10416 = cljs.core.first.call(null, G__10414__10415);
    var G__10414__10417 = G__10414__10415;
    while(true) {
      if(cljs.core.truth_(n__10416.propagationStopped)) {
      }else {
        evt.currentTarget = n__10416;
        goog.events.fireListeners(n__10416, evt.type, false, evt)
      }
      var temp__3974__auto____10418 = cljs.core.next.call(null, G__10414__10417);
      if(temp__3974__auto____10418) {
        var G__10414__10419 = temp__3974__auto____10418;
        var G__10422 = cljs.core.first.call(null, G__10414__10419);
        var G__10423 = G__10414__10419;
        n__10416 = G__10422;
        G__10414__10417 = G__10423;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return evt.returnValue_
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt)
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3822__auto____10425 = o.getParentEventTarget;
  if(cljs.core.truth_(and__3822__auto____10425)) {
    return o.dispatchEvent
  }else {
    return and__3822__auto____10425
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map)
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt__10446 = new goog.events.Event(domina.events.find_builtin_type.call(null, type));
    var G__10447__10448 = cljs.core.seq.call(null, evt_map);
    if(G__10447__10448) {
      var G__10450__10452 = cljs.core.first.call(null, G__10447__10448);
      var vec__10451__10453 = G__10450__10452;
      var k__10454 = cljs.core.nth.call(null, vec__10451__10453, 0, null);
      var v__10455 = cljs.core.nth.call(null, vec__10451__10453, 1, null);
      var G__10447__10456 = G__10447__10448;
      var G__10450__10457 = G__10450__10452;
      var G__10447__10458 = G__10447__10456;
      while(true) {
        var vec__10459__10460 = G__10450__10457;
        var k__10461 = cljs.core.nth.call(null, vec__10459__10460, 0, null);
        var v__10462 = cljs.core.nth.call(null, vec__10459__10460, 1, null);
        var G__10447__10463 = G__10447__10458;
        evt__10446[k__10461] = v__10462;
        var temp__3974__auto____10464 = cljs.core.next.call(null, G__10447__10463);
        if(temp__3974__auto____10464) {
          var G__10447__10465 = temp__3974__auto____10464;
          var G__10466 = cljs.core.first.call(null, G__10447__10465);
          var G__10467 = G__10447__10465;
          G__10450__10457 = G__10466;
          G__10447__10458 = G__10467;
          continue
        }else {
        }
        break
      }
    }else {
    }
    if(cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt__10446)
    }else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt__10446)
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dispatch_BANG_.cljs$lang$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$lang$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key)
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__10470 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.mapcat.call(null, function(p1__10468_SHARP_) {
    return goog.events.getListeners(p1__10468_SHARP_, type__10470, false)
  }, domina.nodes.call(null, content))
};
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.object");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.events.EventTarget.call(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = []
};
goog.inherits(goog.fx.Animation, goog.events.EventTarget);
goog.fx.Animation.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause", ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.Animation.TIMEOUT = 20;
goog.fx.Animation.activeAnimations_ = {};
goog.fx.Animation.globalTimer_ = null;
goog.fx.Animation.cycleAnimations_ = function() {
  goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
  var now = goog.now();
  for(var uid in goog.fx.Animation.activeAnimations_) {
    goog.fx.Animation.activeAnimations_[uid].cycle(now)
  }
  goog.fx.Animation.globalTimer_ = goog.object.isEmpty(goog.fx.Animation.activeAnimations_) ? null : goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
};
goog.fx.Animation.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.Animation.activeAnimations_)) {
    goog.fx.Animation.activeAnimations_[uid] = animation
  }
  if(!goog.fx.Animation.globalTimer_) {
    goog.fx.Animation.globalTimer_ = goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
  }
};
goog.fx.Animation.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.Animation.activeAnimations_[uid];
  if(goog.fx.Animation.globalTimer_ && goog.object.isEmpty(goog.fx.Animation.activeAnimations_)) {
    goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
    goog.fx.Animation.globalTimer_ = null
  }
};
goog.fx.Animation.prototype.state_ = goog.fx.Animation.State.STOPPED;
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.startTime = null;
goog.fx.Animation.prototype.endTime = null;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.state_ == goog.fx.Animation.State.STOPPED) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      return false
    }
  }
  goog.fx.Animation.unregisterAnimation(this);
  this.startTime = goog.now();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.onResume()
  }
  this.state_ = goog.fx.Animation.State.PLAYING;
  goog.fx.Animation.registerAnimation(this);
  this.cycle(this.startTime);
  return true
};
goog.fx.Animation.prototype.stop = function(gotoEnd) {
  goog.fx.Animation.unregisterAnimation(this);
  this.state_ = goog.fx.Animation.State.STOPPED;
  if(gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.state_ == goog.fx.Animation.State.PLAYING) {
    goog.fx.Animation.unregisterAnimation(this);
    this.state_ = goog.fx.Animation.State.PAUSED;
    this.onPause()
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(this.state_ != goog.fx.Animation.State.STOPPED) {
    this.stop(false)
  }
  this.onDestroy();
  goog.fx.Animation.superClass_.disposeInternal.call(this)
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  if(goog.isFunction(this.accel_)) {
    this.updateCoords_(this.accel_(this.progress))
  }else {
    this.updateCoords_(this.progress)
  }
  if(this.progress == 1) {
    this.state_ = goog.fx.Animation.State.STOPPED;
    goog.fx.Animation.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onBegin = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.BEGIN)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.onEnd = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.END)
};
goog.fx.Animation.prototype.onFinish = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.FINISH)
};
goog.fx.Animation.prototype.onPause = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PAUSE)
};
goog.fx.Animation.prototype.onPlay = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PLAY)
};
goog.fx.Animation.prototype.onResume = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.RESUME)
};
goog.fx.Animation.prototype.onStop = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.STOP)
};
goog.fx.Animation.prototype.dispatchAnimationEvent_ = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.events.Event.call(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.progress;
  this.fps = anim.fps_;
  this.state = anim.state_;
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.fx.easing");
goog.fx.easing.easeIn = function(t) {
  return t * t * t
};
goog.fx.easing.easeOut = function(t) {
  return 1 - Math.pow(1 - t, 3)
};
goog.fx.easing.inAndOut = function(t) {
  return 3 * t * t - 2 * t * t * t
};
goog.provide("goog.fx");
goog.require("goog.asserts");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.fx.Animation.State");
goog.require("goog.fx.AnimationEvent");
goog.require("goog.fx.easing");
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370d8", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#d87093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.math");
goog.require("goog.array");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1.0E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0)
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependPoundIfNecessary_(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessary_(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessary_(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessary_(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessary_ = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependPoundIfNecessary_ = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.style");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  this.element.style.left = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var start = [element.offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  this.startPoint = [this.element.offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  this.element.style.marginLeft = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  this.element.scrollLeft = Math.round(this.coords[0]);
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("instruisto.effects");
goog.require("cljs.core");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.fx.dom");
goog.require("goog.fx");
goog.require("goog.net.XhrIo");
instruisto.effects.fade_out_elem = function fade_out_elem(elem, ms) {
  return(new goog.fx.dom.FadeOut(elem, ms, null)).play()
};
instruisto.effects.fade_in_elem = function fade_in_elem(elem, ms) {
  return(new goog.fx.dom.FadeIn(elem, ms, null)).play()
};
goog.provide("instruisto.suffix");
goog.require("cljs.core");
goog.require("instruisto.effects");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.net.XhrIo");
instruisto.suffix.suffix_map = cljs.core.ObjMap.fromObject(["\ufdd0'suffix"], {"\ufdd0'suffix":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Suffix System", "\ufdd0'body":"The suffix system is the same as the prefix system, in that it transforms root words to other forms of the same word. There are roughly 4 times as many suffixes as prefixes. Just like the prefixes, the suffixes require mastery in order to fully understand Esperanto.", "\ufdd0'next":""})});
instruisto.suffix.load_next_section = function load_next_section(m) {
  var entry_map__270165 = m == null ? cljs.core._lookup.call(null, instruisto.suffix.suffix_map, cljs.core.keyword.call(null, domina.attr.call(null, domina.by_id.call(null, "suffix-link"), "title")), null) : m;
  var elem_title__270166 = domina.by_id.call(null, "suffix-title");
  var elem_body__270167 = domina.by_id.call(null, "suffix-body");
  var elem_link__270168 = domina.by_id.call(null, "suffix-link");
  domina.set_text_BANG_.call(null, elem_title__270166, (new cljs.core.Keyword("\ufdd0'title")).call(null, entry_map__270165));
  domina.set_text_BANG_.call(null, elem_body__270167, (new cljs.core.Keyword("\ufdd0'body")).call(null, entry_map__270165));
  return domina.set_attr_BANG_.call(null, elem_link__270168, "title", (new cljs.core.Keyword("\ufdd0'next")).call(null, entry_map__270165))
};
instruisto.suffix.start_suffix = function start_suffix() {
  instruisto.suffix.load_next_section.call(null, (new cljs.core.Keyword("\ufdd0'suffix")).call(null, instruisto.suffix.suffix_map));
  domina.events.unlisten_BANG_.call(null, domina.by_id.call(null, "suffix-link"));
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, "suffix-link"), "\ufdd0'click", function(event) {
    domina.events.stop_propagation.call(null, event);
    domina.events.prevent_default.call(null, event);
    return instruisto.suffix.load_next_section.call(null, null)
  })
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.require("goog.object");
goog.require("goog.structs.SimplePool");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.KEY_POOL_INITIAL_COUNT = 0;
goog.events.EventHandler.KEY_POOL_MAX_COUNT = 100;
goog.events.EventHandler.keyPool_ = new goog.structs.SimplePool(goog.events.EventHandler.KEY_POOL_INITIAL_COUNT, goog.events.EventHandler.KEY_POOL_MAX_COUNT);
goog.events.EventHandler.keys_ = null;
goog.events.EventHandler.key_ = null;
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.recordListenerKey_(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.recordListenerKey_(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.recordListenerKey_ = function(key) {
  if(this.keys_) {
    this.keys_[key] = true
  }else {
    if(this.key_) {
      this.keys_ = goog.events.EventHandler.keyPool_.getObject();
      this.keys_[this.key_] = true;
      this.key_ = null;
      this.keys_[key] = true
    }else {
      this.key_ = key
    }
  }
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(this.key_ || this.keys_) {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
      }
    }else {
      var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
      if(listener) {
        var key = listener.key;
        goog.events.unlistenByKey(key);
        if(this.keys_) {
          goog.object.remove(this.keys_, key)
        }else {
          if(this.key_ == key) {
            this.key_ = null
          }
        }
      }
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  if(this.keys_) {
    for(var key in this.keys_) {
      goog.events.unlistenByKey(key);
      delete this.keys_[key]
    }
    goog.events.EventHandler.keyPool_.releaseObject(this.keys_);
    this.keys_ = null
  }else {
    if(this.key_) {
      goog.events.unlistenByKey(this.key_)
    }
  }
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this)
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN)
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2)
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_)
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.eventHandler_.dispose();
  delete this.target;
  delete this.handle;
  delete this.eventHandler_
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if(this.enabled_ && !this.dragging_ && (!isMouseDown || e.isMouseActionButton())) {
    this.maybeReinitTouchEvent_(e);
    if(this.hysteresisDistanceSquared_ == 0) {
      this.initializeDrag_(e);
      if(this.dragging_) {
        e.preventDefault()
      }else {
        return
      }
    }else {
      e.preventDefault()
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now()
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag)
  }else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag)
  }
  if(goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault)
  }
  if(this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture)
  }
};
goog.fx.Dragger.prototype.initializeDrag_ = function(e) {
  var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
  if(rv !== false) {
    this.dragging_ = true
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.eventHandler_.removeAll();
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture()
  }
  if(this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var x = this.limitX(this.deltaX);
    var y = this.limitY(this.deltaY);
    var dragCancelled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCancelled))
  }
  if(e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault()
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true)
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if(type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget)
  }else {
    if(type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget)
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if(this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var dx = e.clientX - this.clientX;
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if(!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if(distance > this.hysteresisDistanceSquared_) {
        this.initializeDrag_(e);
        if(!this.dragging_) {
          this.endDrag(e);
          return
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if(this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if(rv !== false) {
        this.doDrag(e, x, y, false);
        e.preventDefault()
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y)
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.pageScroll.x - this.clientX;
  e.clientY = this.pageScroll.y - this.clientY;
  this.doDrag(e, pos.x, pos.y, true)
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y))
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x))
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y))
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  this.target.style.left = x + "px";
  this.target.style.top = y + "px"
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("goog.fx.AbstractDragDrop");
goog.provide("goog.fx.AbstractDragDrop.EventType");
goog.provide("goog.fx.DragDropEvent");
goog.provide("goog.fx.DragDropItem");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.fx.Dragger");
goog.require("goog.fx.Dragger.EventType");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.style");
goog.fx.AbstractDragDrop = function() {
  this.items_ = [];
  this.targets_ = [];
  this.scrollableContainers_ = []
};
goog.inherits(goog.fx.AbstractDragDrop, goog.events.EventTarget);
goog.fx.AbstractDragDrop.DUMMY_TARGET_MIN_SIZE_ = 10;
goog.fx.AbstractDragDrop.prototype.isSource_ = false;
goog.fx.AbstractDragDrop.prototype.isTarget_ = false;
goog.fx.AbstractDragDrop.prototype.subtargetFunction_;
goog.fx.AbstractDragDrop.prototype.activeSubtarget_;
goog.fx.AbstractDragDrop.prototype.dragClass_;
goog.fx.AbstractDragDrop.prototype.sourceClass_;
goog.fx.AbstractDragDrop.prototype.targetClass_;
goog.fx.AbstractDragDrop.prototype.scrollTarget_;
goog.fx.AbstractDragDrop.prototype.dummyTarget_;
goog.fx.AbstractDragDrop.prototype.initialized_ = false;
goog.fx.AbstractDragDrop.EventType = {DRAGOVER:"dragover", DRAGOUT:"dragout", DRAG:"drag", DROP:"drop", DRAGSTART:"dragstart", DRAGEND:"dragend"};
goog.fx.AbstractDragDrop.initDragDistanceThreshold = 5;
goog.fx.AbstractDragDrop.prototype.setDragClass = function(className) {
  this.dragClass_ = className
};
goog.fx.AbstractDragDrop.prototype.setSourceClass = function(className) {
  this.sourceClass_ = className
};
goog.fx.AbstractDragDrop.prototype.setTargetClass = function(className) {
  this.targetClass_ = className
};
goog.fx.AbstractDragDrop.prototype.isInitialized = function() {
  return this.initialized_
};
goog.fx.AbstractDragDrop.prototype.addItem = function(item) {
  throw Error("Call to pure virtual method");
};
goog.fx.AbstractDragDrop.prototype.addTarget = function(target) {
  this.targets_.push(target);
  target.isTarget_ = true;
  this.isSource_ = true
};
goog.fx.AbstractDragDrop.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget
};
goog.fx.AbstractDragDrop.prototype.init = function() {
  if(this.initialized_) {
    return
  }
  for(var item, i = 0;item = this.items_[i];i++) {
    this.initItem(item)
  }
  this.initialized_ = true
};
goog.fx.AbstractDragDrop.prototype.initItem = function(item) {
  if(this.isSource_) {
    goog.events.listen(item.element, goog.events.EventType.MOUSEDOWN, item.mouseDown_, false, item);
    if(this.sourceClass_) {
      goog.dom.classes.add(item.element, this.sourceClass_)
    }
  }
  if(this.isTarget_ && this.targetClass_) {
    goog.dom.classes.add(item.element, this.targetClass_)
  }
};
goog.fx.AbstractDragDrop.prototype.disposeItem = function(item) {
  if(this.isSource_) {
    goog.events.unlisten(item.element, goog.events.EventType.MOUSEDOWN, item.mouseDown_, false, item);
    if(this.sourceClass_) {
      goog.dom.classes.remove(item.element, this.sourceClass_)
    }
  }
  if(this.isTarget_ && this.targetClass_) {
    goog.dom.classes.remove(item.element, this.targetClass_)
  }
};
goog.fx.AbstractDragDrop.prototype.removeItems = function() {
  for(var item, i = 0;item = this.items_[i];i++) {
    this.disposeItem(item)
  }
  this.items_.length = 0
};
goog.fx.AbstractDragDrop.prototype.maybeStartDrag = function(event, item) {
  item.maybeStartDrag_(event, item.element)
};
goog.fx.AbstractDragDrop.prototype.startDrag = function(event, item) {
  if(this.dragItem_) {
    return
  }
  this.dragItem_ = item;
  var dragStartEvent = new goog.fx.DragDropEvent(goog.fx.AbstractDragDrop.EventType.DRAGSTART, this, this.dragItem_);
  if(this.dispatchEvent(dragStartEvent) == false) {
    dragStartEvent.dispose();
    this.dragItem_ = null;
    return
  }
  dragStartEvent.dispose();
  var el = item.getCurrentDragElement();
  this.dragEl_ = this.createDragElement(el);
  var doc = goog.dom.getOwnerDocument(el);
  doc.body.appendChild(this.dragEl_);
  this.dragger_ = this.createDraggerFor(el, this.dragEl_, event);
  this.dragger_.setScrollTarget(this.scrollTarget_);
  goog.events.listen(this.dragger_, goog.fx.Dragger.EventType.DRAG, this.moveDrag_, false, this);
  goog.events.listen(this.dragger_, goog.fx.Dragger.EventType.END, this.endDrag, false, this);
  goog.events.listen(doc.body, goog.events.EventType.SELECTSTART, this.suppressSelect_);
  this.recalculateDragTargets();
  this.activeTarget_ = null;
  this.initScrollableContainers_();
  this.dragger_.startDrag(event);
  event.preventDefault()
};
goog.fx.AbstractDragDrop.prototype.recalculateDragTargets = function() {
  this.targetList_ = [];
  for(var target, i = 0;target = this.targets_[i];i++) {
    for(var itm, j = 0;itm = target.items_[j];j++) {
      this.addDragTarget_(target, itm)
    }
  }
  if(!this.targetBox_) {
    this.targetBox_ = new goog.math.Box(0, 0, 0, 0)
  }
};
goog.fx.AbstractDragDrop.prototype.createDraggerFor = function(sourceEl, el, event) {
  var pos = this.getDragElementPosition(sourceEl, el, event);
  el.style.position = "absolute";
  el.style.left = pos.x + "px";
  el.style.top = pos.y + "px";
  return new goog.fx.Dragger(el)
};
goog.fx.AbstractDragDrop.prototype.endDrag = function(event) {
  var activeTarget = event.dragCanceled ? null : this.activeTarget_;
  if(activeTarget && activeTarget.target_) {
    var clientX = event.clientX;
    var clientY = event.clientY;
    var scroll = this.getScrollPos();
    var x = clientX + scroll.x;
    var y = clientY + scroll.y;
    var subtarget;
    if(this.subtargetFunction_) {
      subtarget = this.subtargetFunction_(activeTarget.item_, activeTarget.box_, x, y)
    }
    var dragEvent = new goog.fx.DragDropEvent(goog.fx.AbstractDragDrop.EventType.DRAG, this, this.dragItem_, activeTarget.target_, activeTarget.item_, activeTarget.element_, clientX, clientY, x, y);
    this.dispatchEvent(dragEvent);
    dragEvent.dispose();
    var dropEvent = new goog.fx.DragDropEvent(goog.fx.AbstractDragDrop.EventType.DROP, this, this.dragItem_, activeTarget.target_, activeTarget.item_, activeTarget.element_, clientX, clientY, x, y, subtarget);
    activeTarget.target_.dispatchEvent(dropEvent);
    dropEvent.dispose()
  }
  var dragEndEvent = new goog.fx.DragDropEvent(goog.fx.AbstractDragDrop.EventType.DRAGEND, this, this.dragItem_);
  this.dispatchEvent(dragEndEvent);
  dragEndEvent.dispose();
  goog.events.unlisten(this.dragger_, goog.fx.Dragger.EventType.DRAG, this.moveDrag_, false, this);
  goog.events.unlisten(this.dragger_, goog.fx.Dragger.EventType.END, this.endDrag, false, this);
  var doc = goog.dom.getOwnerDocument(this.dragItem_.getCurrentDragElement());
  goog.events.unlisten(doc.body, goog.events.EventType.SELECTSTART, this.suppressSelect_);
  this.afterEndDrag(this.activeTarget_ ? this.activeTarget_.item_ : null)
};
goog.fx.AbstractDragDrop.prototype.afterEndDrag = function(opt_dropTarget) {
  this.disposeDrag()
};
goog.fx.AbstractDragDrop.prototype.disposeDrag = function() {
  this.disposeScrollableContainerListeners_();
  this.dragger_.dispose();
  goog.dom.removeNode(this.dragEl_);
  delete this.dragItem_;
  delete this.dragEl_;
  delete this.dragger_;
  delete this.targetList_;
  delete this.activeTarget_
};
goog.fx.AbstractDragDrop.prototype.moveDrag_ = function(event) {
  var x = event.clientX;
  var y = event.clientY;
  var scroll = this.getScrollPos();
  x += scroll.x;
  y += scroll.y;
  var activeTarget = this.activeTarget_;
  var subtarget;
  if(activeTarget) {
    if(this.subtargetFunction_ && activeTarget.target_) {
      subtarget = this.subtargetFunction_(activeTarget.item_, activeTarget.box_, x, y)
    }
    if(this.isInside_(x, y, activeTarget.box_) && subtarget == this.activeSubtarget_) {
      return
    }
    if(activeTarget.target_) {
      var sourceDragOutEvent = new goog.fx.DragDropEvent(goog.fx.AbstractDragDrop.EventType.DRAGOUT, this, this.dragItem_, activeTarget.target_, activeTarget.item_, activeTarget.element_);
      this.dispatchEvent(sourceDragOutEvent);
      sourceDragOutEvent.dispose();
      var targetDragOutEvent = new goog.fx.DragDropEvent(goog.fx.AbstractDragDrop.EventType.DRAGOUT, this, this.dragItem_, activeTarget.target_, activeTarget.item_, activeTarget.element_, undefined, undefined, undefined, undefined, this.activeSubtarget_);
      activeTarget.target_.dispatchEvent(targetDragOutEvent);
      targetDragOutEvent.dispose()
    }
    this.activeSubtarget_ = subtarget;
    this.activeTarget_ = null
  }
  if(this.isInside_(x, y, this.targetBox_)) {
    activeTarget = this.activeTarget_ = this.getTargetFromPosition_(x, y);
    if(activeTarget && activeTarget.target_) {
      if(this.subtargetFunction_) {
        subtarget = this.subtargetFunction_(activeTarget.item_, activeTarget.box_, x, y)
      }
      var sourceDragOverEvent = new goog.fx.DragDropEvent(goog.fx.AbstractDragDrop.EventType.DRAGOVER, this, this.dragItem_, activeTarget.target_, activeTarget.item_, activeTarget.element_);
      sourceDragOverEvent.subtarget = subtarget;
      this.dispatchEvent(sourceDragOverEvent);
      sourceDragOverEvent.dispose();
      var targetDragOverEvent = new goog.fx.DragDropEvent(goog.fx.AbstractDragDrop.EventType.DRAGOVER, this, this.dragItem_, activeTarget.target_, activeTarget.item_, activeTarget.element_, event.clientX, event.clientY, undefined, undefined, subtarget);
      activeTarget.target_.dispatchEvent(targetDragOverEvent);
      targetDragOverEvent.dispose()
    }else {
      if(!activeTarget) {
        this.activeTarget_ = this.maybeCreateDummyTargetForPosition_(x, y)
      }
    }
  }
};
goog.fx.AbstractDragDrop.prototype.suppressSelect_ = function(event) {
  return false
};
goog.fx.AbstractDragDrop.prototype.initScrollableContainers_ = function() {
  var container, i, j, target;
  for(i = 0;container = this.scrollableContainers_[i];i++) {
    goog.events.listen(container.element_, goog.events.EventType.SCROLL, this.containerScrollHandler_, false, this);
    container.containedTargets_ = [];
    container.savedScrollLeft_ = container.element_.scrollLeft;
    container.savedScrollTop_ = container.element_.scrollTop;
    var pos = goog.style.getPageOffset(container.element_);
    var size = goog.style.getSize(container.element_);
    container.box_ = new goog.math.Box(pos.y, pos.x + size.width, pos.y + size.height, pos.x)
  }
  for(i = 0;target = this.targetList_[i];i++) {
    for(j = 0;container = this.scrollableContainers_[j];j++) {
      if(goog.dom.contains(container.element_, target.element_)) {
        container.containedTargets_.push(target);
        target.scrollableContainer_ = container
      }
    }
  }
};
goog.fx.AbstractDragDrop.prototype.disposeScrollableContainerListeners_ = function() {
  for(var i = 0, container;container = this.scrollableContainers_[i];i++) {
    goog.events.unlisten(container.element_, "scroll", this.containerScrollHandler_, false, this);
    container.containedTargets_ = []
  }
};
goog.fx.AbstractDragDrop.prototype.addScrollableContainer = function(element) {
  this.scrollableContainers_.push(new goog.fx.ScrollableContainer_(element))
};
goog.fx.AbstractDragDrop.prototype.containerScrollHandler_ = function(e) {
  for(var i = 0, container;container = this.scrollableContainers_[i];i++) {
    if(e.target == container.element_) {
      var deltaTop = container.savedScrollTop_ - container.element_.scrollTop;
      var deltaLeft = container.savedScrollLeft_ - container.element_.scrollLeft;
      container.savedScrollTop_ = container.element_.scrollTop;
      container.savedScrollLeft_ = container.element_.scrollLeft;
      for(var j = 0, target;target = container.containedTargets_[j];j++) {
        var box = target.box_;
        box.top += deltaTop;
        box.left += deltaLeft;
        box.bottom += deltaTop;
        box.right += deltaLeft;
        this.calculateTargetBox_(box)
      }
    }
  }
};
goog.fx.AbstractDragDrop.prototype.setSubtargetFunction = function(f) {
  this.subtargetFunction_ = f
};
goog.fx.AbstractDragDrop.prototype.createDragElement = function(sourceEl) {
  var dragEl = this.cloneNode_(sourceEl);
  if(this.dragClass_) {
    goog.dom.classes.add(dragEl, this.dragClass_)
  }
  return dragEl
};
goog.fx.AbstractDragDrop.prototype.getDragElementPosition = function(el, dragEl, event) {
  var pos = goog.style.getPageOffset(el);
  var marginBox = goog.style.getMarginBox(el);
  pos.x += (marginBox.left || 0) * 2;
  pos.y += (marginBox.top || 0) * 2;
  return pos
};
goog.fx.AbstractDragDrop.prototype.getDragger = function() {
  return this.dragger_
};
goog.fx.AbstractDragDrop.prototype.cloneNode_ = function(sourceEl) {
  var clonedEl = sourceEl.cloneNode(true);
  switch(sourceEl.tagName.toLowerCase()) {
    case "tr":
      return goog.dom.createDom("table", null, goog.dom.createDom("tbody", null, clonedEl));
    case "td":
    ;
    case "th":
      return goog.dom.createDom("table", null, goog.dom.createDom("tbody", null, goog.dom.createDom("tr", null, clonedEl)));
    default:
      return clonedEl
  }
};
goog.fx.AbstractDragDrop.prototype.addDragTarget_ = function(target, item) {
  var draggableElements = item.getDraggableElements();
  var targetList = this.targetList_;
  for(var i = 0;i < draggableElements.length;i++) {
    var draggableElement = draggableElements[i];
    var pos = goog.style.getPageOffset(draggableElement);
    var size = goog.style.getSize(draggableElement);
    var box = new goog.math.Box(pos.y, pos.x + size.width, pos.y + size.height, pos.x);
    targetList.push(new goog.fx.ActiveDropTarget_(box, target, item, draggableElement));
    this.calculateTargetBox_(box)
  }
};
goog.fx.AbstractDragDrop.prototype.calculateTargetBox_ = function(box) {
  if(this.targetList_.length == 1) {
    this.targetBox_ = new goog.math.Box(box.top, box.right, box.bottom, box.left)
  }else {
    var tb = this.targetBox_;
    tb.left = Math.min(box.left, tb.left);
    tb.right = Math.max(box.right, tb.right);
    tb.top = Math.min(box.top, tb.top);
    tb.bottom = Math.max(box.bottom, tb.bottom)
  }
};
goog.fx.AbstractDragDrop.prototype.maybeCreateDummyTargetForPosition_ = function(x, y) {
  if(!this.dummyTarget_) {
    this.dummyTarget_ = new goog.fx.ActiveDropTarget_(this.targetBox_.clone())
  }
  var fakeTargetBox = this.dummyTarget_.box_;
  fakeTargetBox.top = this.targetBox_.top;
  fakeTargetBox.right = this.targetBox_.right;
  fakeTargetBox.bottom = this.targetBox_.bottom;
  fakeTargetBox.left = this.targetBox_.left;
  for(var i = 0, target;target = this.targetList_[i];i++) {
    var box = target.box_;
    var horizontalClip = -1;
    if(x >= box.right) {
      horizontalClip = box.right > fakeTargetBox.left ? box.right : fakeTargetBox.left
    }else {
      if(x < box.left) {
        horizontalClip = box.left < fakeTargetBox.right ? box.left : fakeTargetBox.right
      }
    }
    var verticalClip = -1;
    if(y >= box.bottom) {
      verticalClip = box.bottom > fakeTargetBox.top ? box.bottom : fakeTargetBox.top
    }else {
      if(y < box.top) {
        verticalClip = box.top < fakeTargetBox.bottom ? box.top : fakeTargetBox.bottom
      }
    }
    if(horizontalClip >= 0 && verticalClip >= 0) {
      if(Math.abs(horizontalClip - x) > Math.abs(verticalClip - y)) {
        verticalClip = -1
      }else {
        horizontalClip = -1
      }
    }
    if(horizontalClip >= 0) {
      if(horizontalClip <= x) {
        fakeTargetBox.left = horizontalClip
      }else {
        fakeTargetBox.right = horizontalClip
      }
    }else {
      if(verticalClip >= 0) {
        if(verticalClip <= y) {
          fakeTargetBox.top = verticalClip
        }else {
          fakeTargetBox.bottom = verticalClip
        }
      }
    }
  }
  return(fakeTargetBox.right - fakeTargetBox.left) * (fakeTargetBox.bottom - fakeTargetBox.top) >= goog.fx.AbstractDragDrop.DUMMY_TARGET_MIN_SIZE_ ? this.dummyTarget_ : null
};
goog.fx.AbstractDragDrop.prototype.getTargetFromPosition_ = function(x, y) {
  for(var target, i = 0;target = this.targetList_[i];i++) {
    if(this.isInside_(x, y, target.box_)) {
      if(target.scrollableContainer_) {
        var box = target.scrollableContainer_.box_;
        if(this.isInside_(x, y, box)) {
          return target
        }
      }else {
        return target
      }
    }
  }
  return null
};
goog.fx.AbstractDragDrop.prototype.isInside_ = function(x, y, box) {
  return x >= box.left && x < box.right && y >= box.top && y < box.bottom
};
goog.fx.AbstractDragDrop.prototype.getScrollPos = function() {
  return goog.dom.getDomHelper(this.dragEl_).getDocumentScroll()
};
goog.fx.AbstractDragDrop.prototype.disposeInternal = function() {
  goog.fx.AbstractDragDrop.superClass_.disposeInternal.call(this);
  this.removeItems()
};
goog.fx.DragDropEvent = function(type, source, sourceItem, opt_target, opt_targetItem, opt_targetElement, opt_clientX, opt_clientY, opt_x, opt_y, opt_subtarget) {
  goog.events.Event.call(this, type);
  this.dragSource = source;
  this.dragSourceItem = sourceItem;
  this.dropTarget = opt_target;
  this.dropTargetItem = opt_targetItem;
  this.dropTargetElement = opt_targetElement;
  this.clientX = opt_clientX;
  this.clientY = opt_clientY;
  this.viewportX = opt_x;
  this.viewportY = opt_y;
  this.subtarget = opt_subtarget
};
goog.inherits(goog.fx.DragDropEvent, goog.events.Event);
goog.fx.DragDropEvent.prototype.disposeInternal = function() {
  goog.fx.DragDropEvent.superClass_.disposeInternal.call(this);
  delete this.dragSource;
  delete this.dragSourceItem;
  delete this.dropTarget;
  delete this.dropTargetItem;
  delete this.dropTargetElement
};
goog.fx.DragDropItem = function(element, opt_data) {
  this.element = goog.dom.getElement(element);
  this.data = opt_data;
  this.parent_ = null;
  if(!this.element) {
    throw Error("Invalid argument");
  }
};
goog.inherits(goog.fx.DragDropItem, goog.events.EventTarget);
goog.fx.DragDropItem.prototype.currentDragElement_ = null;
goog.fx.DragDropItem.prototype.getData = function() {
  return this.data
};
goog.fx.DragDropItem.prototype.getDraggableElement = function(target) {
  return target
};
goog.fx.DragDropItem.prototype.getCurrentDragElement = function() {
  return this.currentDragElement_
};
goog.fx.DragDropItem.prototype.getDraggableElements = function() {
  return[this.element]
};
goog.fx.DragDropItem.prototype.mouseDown_ = function(event) {
  var element = this.getDraggableElement(event.target);
  if(element) {
    this.maybeStartDrag_(event, element)
  }
};
goog.fx.DragDropItem.prototype.setParent = function(parent) {
  this.parent_ = parent
};
goog.fx.DragDropItem.prototype.maybeStartDrag_ = function(event, element) {
  goog.events.listen(element, goog.events.EventType.MOUSEMOVE, this.mouseMove_, false, this);
  goog.events.listen(element, goog.events.EventType.MOUSEOUT, this.mouseMove_, false, this);
  goog.events.listen(element, goog.events.EventType.MOUSEUP, this.mouseUp_, false, this);
  this.currentDragElement_ = element;
  this.startPosition_ = new goog.math.Coordinate(event.clientX, event.clientY);
  event.preventDefault()
};
goog.fx.DragDropItem.prototype.mouseMove_ = function(event) {
  var distance = Math.abs(event.clientX - this.startPosition_.x) + Math.abs(event.clientY - this.startPosition_.y);
  if(distance > goog.fx.AbstractDragDrop.initDragDistanceThreshold) {
    var currentDragElement = this.currentDragElement_;
    goog.events.unlisten(currentDragElement, goog.events.EventType.MOUSEMOVE, this.mouseMove_, false, this);
    goog.events.unlisten(currentDragElement, goog.events.EventType.MOUSEOUT, this.mouseMove_, false, this);
    goog.events.unlisten(currentDragElement, goog.events.EventType.MOUSEUP, this.mouseUp_, false, this);
    this.parent_.startDrag(event, this)
  }
};
goog.fx.DragDropItem.prototype.mouseUp_ = function(event) {
  var currentDragElement = this.currentDragElement_;
  goog.events.unlisten(currentDragElement, goog.events.EventType.MOUSEMOVE, this.mouseMove_, false, this);
  goog.events.unlisten(currentDragElement, goog.events.EventType.MOUSEOUT, this.mouseMove_, false, this);
  goog.events.unlisten(currentDragElement, goog.events.EventType.MOUSEUP, this.mouseUp_, false, this);
  delete this.startPosition_;
  this.currentDragElement_ = null
};
goog.fx.ActiveDropTarget_ = function(box, opt_target, opt_item, opt_element) {
  this.box_ = box;
  this.target_ = opt_target;
  this.item_ = opt_item;
  this.element_ = opt_element
};
goog.fx.ActiveDropTarget_.prototype.scrollableContainer_ = null;
goog.fx.ScrollableContainer_ = function(element) {
  this.containedTargets_ = [];
  this.element_ = element;
  this.savedScrollLeft_ = 0;
  this.savedScrollTop_ = 0;
  this.box_ = null
};
goog.provide("goog.fx.DragDrop");
goog.require("goog.fx.AbstractDragDrop");
goog.require("goog.fx.DragDropItem");
goog.fx.DragDrop = function(element, opt_data) {
  goog.fx.AbstractDragDrop.call(this);
  var item = new goog.fx.DragDropItem(element, opt_data);
  item.setParent(this);
  this.items_.push(item)
};
goog.inherits(goog.fx.DragDrop, goog.fx.AbstractDragDrop);
goog.provide("instruisto.basic_grammar_review_1");
goog.require("cljs.core");
goog.require("instruisto.effects");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.events");
goog.require("goog.fx.dom");
goog.require("goog.fx");
goog.require("goog.fx.DragDrop");
goog.require("goog.net.XhrIo");
instruisto.basic_grammar_review_1.drop_drop_correct = function drop_drop_correct(source_id, target_id) {
  domina.add_class_BANG_.call(null, domina.by_id.call(null, source_id), "highlight_correct");
  return domina.add_class_BANG_.call(null, domina.by_id.call(null, target_id), "highlight_correct")
};
instruisto.basic_grammar_review_1.drag_drop_action = function drag_drop_action(event) {
  var drag_data__6473 = event.dragSourceItem.data;
  var drop_data__6474 = event.dropTargetItem.data;
  var and__3822__auto____6475 = drag_data__6473 === drop_data__6474;
  if(and__3822__auto____6475) {
    var and__3822__auto____6476 = drop_data__6474 === instruisto.basic_grammar_review_1.drop_drop_correct.call(null, event.dragSourceItem.element.id, event.dropTargetItem.element.id);
    if(and__3822__auto____6476) {
      return instruisto.basic_grammar_review_1.drop_drop_correct.call(null, event.dragSourceItem.element.id, event.dropTargetItem.element.id) === null
    }else {
      return and__3822__auto____6476
    }
  }else {
    return and__3822__auto____6475
  }
};
instruisto.basic_grammar_review_1.init_drag_drop = function init_drag_drop(drag_id, drop_id, data) {
  var drag__6478 = new goog.fx.DragDrop(domina.by_id.call(null, drag_id), data);
  drag__6478.addTarget(new goog.fx.DragDrop(domina.by_id.call(null, drop_id), data));
  goog.events.listen(drag__6478, "dragover", instruisto.basic_grammar_review_1.drag_drop_action);
  return drag__6478.init()
};
instruisto.basic_grammar_review_1.start_basic_grammar_review = function start_basic_grammar_review() {
  instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-noun-drag", "bgr-noun-drop", "noun");
  instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-adj-drag", "bgr-adj-drop", "adj");
  instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-adverb-drag", "bgr-adverb-drop", "adverb");
  instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-verb-infinitive-drag", "bgr-verb-infinitive-drop", "verb-infinitive");
  instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-verb-past-drag", "bgr-verb-past-drop", "verb-past");
  instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-verb-present-drag", "bgr-verb-present-drop", "verb-present");
  instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-verb-future-drag", "bgr-verb-future-drop", "verb-future");
  instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-verb-conditional-drag", "bgr-verb-conditional-drop", "verb-conditional");
  instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-object-drag", "bgr-object-drop", "object");
  return instruisto.basic_grammar_review_1.init_drag_drop.call(null, "bgr-verb-imperative-drag", "bgr-verb-imperative-drop", "verb-imperative")
};
goog.provide("instruisto.plural_review");
goog.require("cljs.core");
goog.require("instruisto.effects");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.events");
goog.require("goog.fx.dom");
goog.require("goog.fx");
goog.require("goog.fx.DragDrop");
goog.require("goog.net.XhrIo");
instruisto.plural_review.drop_drop_correct = function drop_drop_correct(source_id, target_id) {
  domina.add_class_BANG_.call(null, domina.by_id.call(null, source_id), "highlight_correct");
  return domina.add_class_BANG_.call(null, domina.by_id.call(null, target_id), "highlight_correct")
};
instruisto.plural_review.drag_drop_action = function drag_drop_action(event) {
  var drag_data__6544 = event.dragSourceItem.data;
  var drop_data__6545 = event.dropTargetItem.data;
  var and__3822__auto____6546 = drag_data__6544 === drop_data__6545;
  if(and__3822__auto____6546) {
    drop_data__6545 === domina.set_text_BANG_.call(null, domina.by_id.call(null, event.dropTargetItem.element.id), drag_data__6544)
  }else {
    and__3822__auto____6546
  }
  var and__3822__auto____6547 = drag_data__6544 === drop_data__6545;
  if(and__3822__auto____6547) {
    var and__3822__auto____6548 = drop_data__6545 === instruisto.plural_review.drop_drop_correct.call(null, event.dragSourceItem.element.id, event.dropTargetItem.element.id);
    if(and__3822__auto____6548) {
      return instruisto.plural_review.drop_drop_correct.call(null, event.dragSourceItem.element.id, event.dropTargetItem.element.id) === null
    }else {
      return and__3822__auto____6548
    }
  }else {
    return and__3822__auto____6547
  }
};
instruisto.plural_review.init_drag_drop = function init_drag_drop(drag_id, drop_id, data) {
  var drag__6550 = new goog.fx.DragDrop(domina.by_id.call(null, drag_id), data);
  drag__6550.addTarget(new goog.fx.DragDrop(domina.by_id.call(null, drop_id), data));
  goog.events.listen(drag__6550, "dragover", instruisto.plural_review.drag_drop_action);
  return drag__6550.init()
};
instruisto.plural_review.start_plural_review = function start_plural_review() {
  instruisto.plural_review.init_drag_drop.call(null, "plural-review-malgrandajn-drag", "plural-review-malgrandajn-drop", "malgrandajn");
  instruisto.plural_review.init_drag_drop.call(null, "plural-review-bravaj-drag", "plural-review-bravaj-drop", "bravaj");
  instruisto.plural_review.init_drag_drop.call(null, "plural-review-rapidas-drag", "plural-review-rapidas-drop", "rapidas");
  return instruisto.plural_review.init_drag_drop.call(null, "plural-review-katojn-drag", "plural-review-katojn-drop", "katojn")
};
goog.provide("instruisto.basic_grammar_review_2");
goog.require("cljs.core");
goog.require("instruisto.effects");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.events");
goog.require("goog.fx.dom");
goog.require("goog.fx");
goog.require("goog.fx.DragDrop");
goog.require("goog.net.XhrIo");
instruisto.basic_grammar_review_2.drop_drop_correct = function drop_drop_correct(source_id, target_id) {
  domina.add_class_BANG_.call(null, domina.by_id.call(null, source_id), "highlight_correct");
  return domina.add_class_BANG_.call(null, domina.by_id.call(null, target_id), "highlight_correct")
};
instruisto.basic_grammar_review_2.drag_drop_action = function drag_drop_action(event) {
  var drag_data__6482 = event.dragSourceItem.data;
  var drop_data__6483 = event.dropTargetItem.data;
  var and__3822__auto____6484 = drag_data__6482 === drop_data__6483;
  if(and__3822__auto____6484) {
    drop_data__6483 === domina.set_text_BANG_.call(null, domina.by_id.call(null, "bgr-trans"), drag_data__6482)
  }else {
    and__3822__auto____6484
  }
  return null
};
instruisto.basic_grammar_review_2.init_drag_drop = function init_drag_drop(drag_id, drop_id, data) {
  var drag__6486 = new goog.fx.DragDrop(domina.by_id.call(null, drag_id), data);
  drag__6486.addTarget(new goog.fx.DragDrop(domina.by_id.call(null, drop_id), data));
  goog.events.listen(drag__6486, "dragover", instruisto.basic_grammar_review_2.drag_drop_action);
  return drag__6486.init()
};
instruisto.basic_grammar_review_2.start_basic_grammar_review = function start_basic_grammar_review() {
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-noun-end-drag", "bgr-skrib-drop", "writing");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-noun-end-drag", "bgr-interes-drop", "interest");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-noun-end-drag", "bgr-kompren-drop", "understand");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-adj-end-drag", "bgr-skrib-drop", "written");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-adj-end-drag", "bgr-interes-drop", "interesting");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-adj-end-drag", "bgr-kompren-drop", "understanding");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-verb-end-drag", "bgr-skrib-drop", "to write");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-verb-end-drag", "bgr-interes-drop", "to interest");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-verb-end-drag", "bgr-kompren-drop", "to understand");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-adverb-end-drag", "bgr-skrib-drop", "in writing");
  instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-adverb-end-drag", "bgr-interes-drop", "interestingly");
  return instruisto.basic_grammar_review_2.init_drag_drop.call(null, "bgr-adverb-end-drag", "bgr-kompren-drop", "understandingly")
};
goog.provide("instruisto.plural");
goog.require("cljs.core");
goog.require("instruisto.effects");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.net.XhrIo");
instruisto.plural.plural_map = cljs.core.ObjMap.fromObject(["\ufdd0'plural", "\ufdd0'plural-adj", "\ufdd0'plural-adj-obj"], {"\ufdd0'plural":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Plural ending -j", "\ufdd0'body":"To make a word in Esperanto plural, you only need to add the ending -j. \r\n\r\nkato = cat, katoj = cats \r\n\r\nhundo = dog, hundoj = dogs", "\ufdd0'next":"plural-adj"}), "\ufdd0'plural-adj":cljs.core.ObjMap.fromObject(["\ufdd0'title", 
"\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Plural Adjectives", "\ufdd0'body":"If there is an adjective associated with a noun, then the adjective must also take the plural ending. \r\n\r\ngrandaj katoj = big cats \r\n\r\naltaj hundoj = tall dogs", "\ufdd0'next":"plural-adj-obj"}), "\ufdd0'plural-adj-obj":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Plural Adjectives and Objects", "\ufdd0'body":"Whenever a noun takes the object ending -n, so too must the adjective. For example, Mi amas liberan libron = I love a free book. As we have already learned plural nouns make their adjectives plural also. When this happens the -n still comes last. Thus, Mi amas liberajn librojn = I love free books.", 
"\ufdd0'next":"plural"})});
instruisto.plural.load_next_section = function load_next_section(m) {
  var entry_map__6535 = m == null ? cljs.core._lookup.call(null, instruisto.plural.plural_map, cljs.core.keyword.call(null, domina.attr.call(null, domina.by_id.call(null, "plural-link"), "title")), null) : m;
  var elem_title__6536 = domina.by_id.call(null, "plural-title");
  var elem_body__6537 = domina.by_id.call(null, "plural-body");
  var elem_link__6538 = domina.by_id.call(null, "plural-link");
  domina.set_text_BANG_.call(null, elem_title__6536, (new cljs.core.Keyword("\ufdd0'title")).call(null, entry_map__6535));
  domina.set_text_BANG_.call(null, elem_body__6537, (new cljs.core.Keyword("\ufdd0'body")).call(null, entry_map__6535));
  return domina.set_attr_BANG_.call(null, elem_link__6538, "title", (new cljs.core.Keyword("\ufdd0'next")).call(null, entry_map__6535))
};
instruisto.plural.start_plural = function start_plural() {
  instruisto.plural.load_next_section.call(null, (new cljs.core.Keyword("\ufdd0'plural")).call(null, instruisto.plural.plural_map));
  domina.events.unlisten_BANG_.call(null, domina.by_id.call(null, "plural-link"));
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, "plural-link"), "\ufdd0'click", function(event) {
    domina.events.stop_propagation.call(null, event);
    domina.events.prevent_default.call(null, event);
    return instruisto.plural.load_next_section.call(null, null)
  })
};
goog.provide("instruisto.basic_grammar");
goog.require("cljs.core");
goog.require("instruisto.effects");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.net.XhrIo");
instruisto.basic_grammar.basic_grammar_map = cljs.core.ObjMap.fromObject(["\ufdd0'noun", "\ufdd0'adj", "\ufdd0'verb", "\ufdd0'verb-tense", "\ufdd0'verb-conditional", "\ufdd0'verb-imperative", "\ufdd0'object"], {"\ufdd0'noun":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Nouns (Substantivoj)", "\ufdd0'body":"hundo, tablo, birdo, koloro \r\n\r\nJust by reading these words aloud, you probably already know what they are. They are dog, table, bird and color respectively. You may have also noticed they all end in -o. This isn't a coincidence. All nouns (persons, places and things) end in -o.", 
"\ufdd0'next":"adj"}), "\ufdd0'adj":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Adjectives (Adjektivoj)", "\ufdd0'body":"bela, granda, interesa, longa \r\n\r\nAdjectives follow a similar rule as nouns, but all adjectives end in -a. I'm sure you already guessed that the words are beautiful, large, interesting, and long.", "\ufdd0'next":"verb"}), "\ufdd0'verb":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Verbs (Verboj)", 
"\ufdd0'body":"Verbs in any language are more complex than nouns or adjectives. Without verbs, nothing would get done. But we also need to know when something is done. Esperanto follows verb conjugation like in Romance languages, but all verbs are regular. There are no exceptions! The infinitive ending for verbs is -i, i.e. esti = to be.", "\ufdd0'next":"verb-tense"}), "\ufdd0'verb-tense":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Verb Tenses", "\ufdd0'body":"If esti means to be, we need a way of expressing verb tense (past, present and future). The verb endings for these are -is, -as and -os respectively.\r\n\r\nMi estis = I was \r\n\r\nMi estas = I am \r\n\r\nMi estas = I will be", 
"\ufdd0'next":"verb-conditional"}), "\ufdd0'verb-conditional":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Verb Conditional", "\ufdd0'body":"The word would is considered fluff in English when compared to Esperanto. Would proceeds a verb, and thus can be part of the verb itself. We use the ending -us to indicate when we would have something happen.\r\n\r\nEstus bone. = It would be good. \r\n\r\nEstus bone, se vi learnus Esperanton. = If would be good, if you would learn Esperanto. Note: Esperanton is not a typo. Stay tuned.", 
"\ufdd0'next":"verb-imperative"}), "\ufdd0'verb-imperative":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Verb Imperative", "\ufdd0'body":"Sometimes you just want to yell at someone to do something. In this instance we have the -u ending. This is useful for when you want to use a command.\r\n\r\nKantu! = Sing! \r\n\r\nKuru! = Run! \r\n\r\nEstu silenta! = Be quiet!", "\ufdd0'next":"object"}), "\ufdd0'object":cljs.core.ObjMap.fromObject(["\ufdd0'title", 
"\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Object (Objekto)", "\ufdd0'body":'The -n ending is used to mark the object of a sentenace. Remember back to the sentence "Estus bone, se vi learnus Esperanton.", here the word Esperanto is the object and takes the -n ending. This can take sometime to grasp for an English speaker, because the subject and object of a sentence is determined by word order. Generally, a verb proceeds an object. The easiest way to remember the rules are:\r\n\r\nWho (or what) is doing the action? That\'s the subject.\r\n\r\nWho (or what) is on the other end of the action, "receiving" it? That\'s the object.\r\n\r\nMi vidas vin. = I see you.\r\n\r\nMin vidas vi. = You see me.', 
"\ufdd0'next":"noun"})});
instruisto.basic_grammar.load_next_grammar_section = function load_next_grammar_section(m) {
  var entry_map__6465 = m == null ? cljs.core._lookup.call(null, instruisto.basic_grammar.basic_grammar_map, cljs.core.keyword.call(null, domina.attr.call(null, domina.by_id.call(null, "basic-grammar-link"), "title")), null) : m;
  var elem_title__6466 = domina.by_id.call(null, "basic-grammar-title");
  var elem_body__6467 = domina.by_id.call(null, "basic-grammar-body");
  var elem_link__6468 = domina.by_id.call(null, "basic-grammar-link");
  domina.set_text_BANG_.call(null, elem_title__6466, (new cljs.core.Keyword("\ufdd0'title")).call(null, entry_map__6465));
  domina.set_text_BANG_.call(null, elem_body__6467, (new cljs.core.Keyword("\ufdd0'body")).call(null, entry_map__6465));
  return domina.set_attr_BANG_.call(null, elem_link__6468, "title", (new cljs.core.Keyword("\ufdd0'next")).call(null, entry_map__6465))
};
instruisto.basic_grammar.start_basic_grammar = function start_basic_grammar() {
  instruisto.basic_grammar.load_next_grammar_section.call(null, (new cljs.core.Keyword("\ufdd0'noun")).call(null, instruisto.basic_grammar.basic_grammar_map));
  domina.events.unlisten_BANG_.call(null, domina.by_id.call(null, "basic-grammar-link"));
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, "basic-grammar-link"), "\ufdd0'click", function(event) {
    domina.events.stop_propagation.call(null, event);
    domina.events.prevent_default.call(null, event);
    return instruisto.basic_grammar.load_next_grammar_section.call(null, null)
  })
};
goog.provide("instruisto.introduction");
goog.require("cljs.core");
goog.require("instruisto.effects");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.net.XhrIo");
instruisto.introduction.introduction_map = cljs.core.ObjMap.fromObject(["\ufdd0'what", "\ufdd0'why", "\ufdd0'who"], {"\ufdd0'what":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"What?", "\ufdd0'body":"Esperanto is the most popular constructed international auxiliary language. It was created in 1887 by L. L. Zamenhof, a Polish doctor and linguist. The language is heavily influenced by Romance, Germanic and Slavic languages. If you already speak a European language then learning Esperanto is relatively easy. The language consists of regular verbs and a prefix/suffix system for word building. By knowing only a couple hundred root words and all the prefixes and suffixes, your vocabulary can increase by ten fold.", 
"\ufdd0'next":"why"}), "\ufdd0'why":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Why?", "\ufdd0'body":"Esperanto was created in a region of Poland where there were many languages spoken. Zamenhof understood that distrust and hatred between groups of people started with miscommunication. If people could all speak a common language, that was independent of any group or region, then all parties would be on equal grounds. Neither person communicating would be inferior to the other.", 
"\ufdd0'next":"who"}), "\ufdd0'who":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Who?", "\ufdd0'body":"Exact number of Esperanto speakers is unknown since the language has no homeland. Numbers show anywhere between 10,000 \u2013 2,000,000 L2 speakers. Regardless of the number of speakers, Esperanto is an active language with the World Congress of Esperanto held annually. There is a thriving community of Esperanto speakers producing music, books, pod-casts and websites around the language. Even if you don't become a fluent Esperanto speaker, learning the language will prime you when learning another foreign language.", 
"\ufdd0'next":"what"})});
instruisto.introduction.load_next_section = function load_next_section(m) {
  var entry_map__6527 = m == null ? cljs.core._lookup.call(null, instruisto.introduction.introduction_map, cljs.core.keyword.call(null, domina.attr.call(null, domina.by_id.call(null, "introduction-link"), "title")), null) : m;
  var elem_title__6528 = domina.by_id.call(null, "introduction-title");
  var elem_body__6529 = domina.by_id.call(null, "introduction-body");
  var elem_link__6530 = domina.by_id.call(null, "introduction-link");
  domina.set_text_BANG_.call(null, elem_title__6528, (new cljs.core.Keyword("\ufdd0'title")).call(null, entry_map__6527));
  domina.set_text_BANG_.call(null, elem_body__6529, (new cljs.core.Keyword("\ufdd0'body")).call(null, entry_map__6527));
  return domina.set_attr_BANG_.call(null, elem_link__6530, "title", (new cljs.core.Keyword("\ufdd0'next")).call(null, entry_map__6527))
};
instruisto.introduction.start_introduction = function start_introduction() {
  instruisto.introduction.load_next_section.call(null, (new cljs.core.Keyword("\ufdd0'what")).call(null, instruisto.introduction.introduction_map));
  domina.events.unlisten_BANG_.call(null, domina.by_id.call(null, "introduction-link"));
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, "introduction-link"), "\ufdd0'click", function(event) {
    domina.events.stop_propagation.call(null, event);
    domina.events.prevent_default.call(null, event);
    return instruisto.introduction.load_next_section.call(null, null)
  })
};
goog.provide("instruisto.alphabet");
goog.require("cljs.core");
goog.require("instruisto.effects");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.net.XhrIo");
instruisto.alphabet.start_alphabet = function start_alphabet() {
  return null
};
goog.provide("instruisto.prefix");
goog.require("cljs.core");
goog.require("instruisto.effects");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.net.XhrIo");
instruisto.prefix.prefix_map = cljs.core.ObjMap.fromObject(["\ufdd0'prefix"], {"\ufdd0'prefix":cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'body", "\ufdd0'next"], {"\ufdd0'title":"Prefix System", "\ufdd0'body":"Remember the word malgrandajn in the plurals review section? Malgranda doesn't mean big and bad, mal is a prefix that negates a root word. Like in English where you might use un- to denote the opposite of something ie. tie or untie. The meat and potatoes of Esperanto are the prefix and suffix system it uses. By knowing one word, in this case granda which means large, with only the addition of mal-, malgranda means small. You may see the power of Esperanto is knowing a limited set of root words, but with added prefixes and suffixes your vocabulary can increased ten fold. Master these, and you'll have a considerable amount of Esperanto under your belt.", 
"\ufdd0'next":""})});
instruisto.prefix.load_next_section = function load_next_section(m) {
  var entry_map__26577 = m == null ? cljs.core._lookup.call(null, instruisto.prefix.prefix_map, cljs.core.keyword.call(null, domina.attr.call(null, domina.by_id.call(null, "prefix-link"), "title")), null) : m;
  var elem_title__26578 = domina.by_id.call(null, "prefix-title");
  var elem_body__26579 = domina.by_id.call(null, "prefix-body");
  var elem_link__26580 = domina.by_id.call(null, "prefix-link");
  domina.set_text_BANG_.call(null, elem_title__26578, (new cljs.core.Keyword("\ufdd0'title")).call(null, entry_map__26577));
  domina.set_text_BANG_.call(null, elem_body__26579, (new cljs.core.Keyword("\ufdd0'body")).call(null, entry_map__26577));
  return domina.set_attr_BANG_.call(null, elem_link__26580, "title", (new cljs.core.Keyword("\ufdd0'next")).call(null, entry_map__26577))
};
instruisto.prefix.start_prefix = function start_prefix() {
  instruisto.prefix.load_next_section.call(null, (new cljs.core.Keyword("\ufdd0'prefix")).call(null, instruisto.prefix.prefix_map));
  domina.events.unlisten_BANG_.call(null, domina.by_id.call(null, "prefix-link"));
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, "prefix-link"), "\ufdd0'click", function(event) {
    domina.events.stop_propagation.call(null, event);
    domina.events.prevent_default.call(null, event);
    return instruisto.prefix.load_next_section.call(null, null)
  })
};
goog.provide("instruisto.client");
goog.require("cljs.core");
goog.require("instruisto.basic_grammar_review_1");
goog.require("instruisto.basic_grammar_review_2");
goog.require("instruisto.introduction");
goog.require("domina.events");
goog.require("instruisto.alphabet");
goog.require("instruisto.plural_review");
goog.require("instruisto.prefix");
goog.require("instruisto.basic_grammar");
goog.require("domina");
goog.require("instruisto.effects");
goog.require("goog.net.XhrIo");
goog.require("instruisto.suffix");
goog.require("instruisto.plural");
instruisto.client.click_defaults = function click_defaults(event, elem) {
  domina.events.stop_propagation.call(null, event);
  domina.events.prevent_default.call(null, event);
  domina.set_styles_BANG_.call(null, domina.by_class.call(null, "content-secton"), cljs.core.ObjMap.fromObject(["\ufdd0'display"], {"\ufdd0'display":"none"}));
  domina.set_style_BANG_.call(null, elem, "\ufdd0'display", "");
  return instruisto.effects.fade_in_elem.call(null, elem, 1E3)
};
instruisto.client.hide_sub_cats = function hide_sub_cats() {
  return domina.set_styles_BANG_.call(null, domina.by_class.call(null, "sub_cat"), cljs.core.ObjMap.fromObject(["\ufdd0'display"], {"\ufdd0'display":"none"}))
};
instruisto.client.display_sub_cat = function display_sub_cat(elem_id) {
  instruisto.client.hide_sub_cats.call(null);
  return domina.set_styles_BANG_.call(null, domina.by_class.call(null, elem_id), cljs.core.ObjMap.fromObject(["\ufdd0'display"], {"\ufdd0'display":""}))
};
instruisto.client.display_section_on_click = function display_section_on_click(button_elem, section, start_func) {
  return domina.events.listen_BANG_.call(null, button_elem, "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, section);
    return start_func.call(null)
  })
};
instruisto.client.main = function main() {
  domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-introduction"), "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, domina.by_id.call(null, "introduction-section"));
    return instruisto.introduction.start_introduction.call(null)
  });
  domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-alphabet"), "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, domina.by_id.call(null, "alphabet-section"));
    return instruisto.alphabet.start_alphabet.call(null)
  });
  domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-basic-grammar-review"), "\ufdd0'mouseover", function(event) {
    return instruisto.client.display_sub_cat.call(null, "link-basic-grammar-review")
  });
  domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-basic-grammar"), "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, domina.by_id.call(null, "basic-grammar-section"));
    return instruisto.basic_grammar.start_basic_grammar.call(null)
  });
  domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-basic-grammar-review-1"), "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, domina.by_id.call(null, "basic-grammar-review-1-section"));
    return instruisto.basic_grammar_review_1.start_basic_grammar_review.call(null)
  });
  domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-basic-grammar-review-2"), "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, domina.by_id.call(null, "basic-grammar-review-2-section"));
    return instruisto.basic_grammar_review_2.start_basic_grammar_review.call(null)
  });
  domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-plural"), "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, domina.by_id.call(null, "plural-section"));
    return instruisto.plural.start_plural.call(null)
  });
  domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-plural-review"), "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, domina.by_id.call(null, "plural-review-section"));
    return instruisto.plural_review.start_plural_review.call(null)
  });
  domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-prefix"), "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, domina.by_id.call(null, "prefix-section"));
    return instruisto.prefix.start_prefix.call(null)
  });
  return domina.events.listen_BANG_.call(null, domina.by_id.call(null, "link-suffix"), "\ufdd0'click", function(event) {
    instruisto.client.click_defaults.call(null, event, domina.by_id.call(null, "suffix-section"));
    return instruisto.suffix.start_suffix.call(null)
  })
};
goog.exportSymbol("instruisto.client.main", instruisto.client.main);
